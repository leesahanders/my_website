<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lisa Anders - questionable.quarto</title>
<link>https://questionable.quarto.pub/blog/site_map.html</link>
<atom:link href="https://questionable.quarto.pub/blog/site_map.xml" rel="self" type="application/rss+xml"/>
<description>Making the most out of data</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Wed, 01 May 2024 06:00:00 GMT</lastBuildDate>
<item>
  <title>Hey Google - make me coffee!</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/kettle automation.html</link>
  <description><![CDATA[ 





<p>I bought a smart kettle (<a href="https://us.govee.com/products/goveelife-smart-electric-kettle-lite">goveelife-smart-electric-kettle-lite</a>) with the dream of being able to press a button from bed in order to have hot water available for my coffee first thing in the morning.</p>
<p>While this was great, it relies on bluetooth for the app to work. Normally I keep bluetooth off on my phone (<a href="https://www.armis.com/research/blueborne/">it’s safer that way, plus a longer battery!</a>)</p>
<p>So I automated it!</p>
<section id="steps" class="level3">
<h3 class="anchored" data-anchor-id="steps">Steps</h3>
<p>These steps were followed with my Android</p>
<p>Step 1: Install and configure the Govee app to be connected to your water kettle</p>
<p>Step 2: Install and configure Google Home and integrate with the Govee App. Assign your kettle to the kitchen (or wherever, you do you boo). Optional: Install and configure Google Assistant, for the voice activation.</p>
<p>Step 3: Create a Google Home Routine</p>
<ul>
<li>This is a personal routine, so we have more options (like being able to adjust phone settings if needed).</li>
<li>Starters: You can have this trigger for different things, like having it be voice activated when you say “hey google, make coffee!”, or when an alarm is dismissed, or at a specific time, etc.</li>
<li>Actions: Adjust home device, turn on the smart kettle (somehow by activating this way, I didn’t need to turn on bluetooth! Which is great, that’s the whole step I wanted to skip)</li>
</ul>
<p>Step 4: Test that the routine works</p>
<p>Step 5: Add the routine as an icon to the phone screen (since voice activation isn’t my jam). Long click on the routine you’ve created and then click on the icon with the arrow over the phone to create a widget and place wherever you want on your phone screen.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/home-automation-widget.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" data-glightbox="description: .lightbox-desc-1" title="Creating a widget"><img src="https://questionable.quarto.pub/blog/posts/img/home-automation-widget.png" class="img-fluid figure-img" alt="Creating a widget"></a></p>
<figcaption>Creating a widget</figcaption>
</figure>
</div>
<p>Step 6: Enjoy :-)</p>
</section>
<section id="what-would-i-do-differently-next-time" class="level3">
<h3 class="anchored" data-anchor-id="what-would-i-do-differently-next-time">What would I do differently next time?</h3>
<p>There are some cool button options that look they have integration, or even a vibration sensor:</p>
<ul>
<li><a href="https://us.govee.com/products/goveelife-smart-mini-double-button-switch?variantId=43252505313465">Smart button</a></li>
<li><a href="https://us.govee.com/products/goveelife-wireless-mini-vibration-sensor">Vibration sensor</a></li>
</ul>
<p>Honestly though, this suits my <del>lazy</del> efficient self just fine.</p>



</section>

 ]]></description>
  <category>hardware</category>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/posts/kettle automation.html</guid>
  <pubDate>Wed, 01 May 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/home-automation.png" medium="image" type="image/png" height="233" width="144"/>
</item>
<item>
  <title>Workplace articles</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/lists/workplace.html</link>
  <description><![CDATA[ 





<p><a href="https://andersoncardoso.github.io/ydd/">Yolo manifesto</a></p>
<p><a href="https://catgirl.ai/log/comfy-software/">Comfy software</a></p>
<p><a href="https://www.theverge.com/ad/21520136/open-source-community-is-building-better-businesses">Open source as the “new normal”</a></p>
<p><a href="https://www.gallup.com/workplace/354935/teams-bosses-overcoming-matrix-madness.aspx">Overcoming matrix madness</a></p>
<p><a href="https://www.pmi.org/learning/library/matrix-organization-structure-reason-evolution-1837">Matrix organizations</a></p>
<p><a href="https://www.gallup.com/workplace/354935/teams-bosses-overcoming-matrix-madness.aspx">Overcoming matrix madness</a></p>
<p><a href="https://www.convoso.com/blog/how-to-overcome-call-center-burnout/">Call center burnout</a></p>
<p><a href="https://medium.com/@StartupBusinesstips/product-led-vs-sales-led-saas-growth-or-both-25bb5e078822">Product led vs sales led organizations</a></p>
<p><a href="https://www.tsia.com/blog/laer-explained-a-new-customer-engagement-model-for-a-new-business-era">LAYER</a></p>
<p><a href="https://noidea.dog/glue">Being glue</a></p>
<p><a href="https://queue.acm.org/detail.cfm?id=3595878">Discussion of cognitive load and how big of a barrier it can be</a></p>
<p><a href="https://github.com/zakirullin/cognitive-load">Cognitive load</a></p>
<p><a href="https://komoroske.com/slime-mold/">How organizations are like slime molds</a></p>
<p><a href="https://www.forbes.com/sites/gautammukunda/2024/02/22/let-the-engineers-lead-america-needs-boeing-to-be-great/?sh=4327814630e1">Forbes - let the engineers lead (boeing)</a></p>
<p><a href="https://www.goodreads.com/book/show/8586375-failure-to-learn">Failure to Learn: the BP refinery disaster</a></p>



 ]]></description>
  <category>datascience</category>
  <category>opinions</category>
  <category>hardware</category>
  <category>software</category>
  <guid>https://questionable.quarto.pub/blog/lists/workplace.html</guid>
  <pubDate>Fri, 19 Apr 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/lists/img/" medium="image"/>
</item>
<item>
  <title>Coding write-ups and resources</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/lists/code.html</link>
  <description><![CDATA[ 





<p><a href="https://news.ycombinator.com/news">Source for good articles</a></p>
<p><a href="https://a16z.com/2021/05/27/cost-of-cloud-paradox-market-cap-cloud-lifecycle-scale-growth-repatriation-optimization/">The true cost of the cloud</a></p>
<p><a href="https://medium.com/8vc-news/the-case-for-professional-services-62b9921c6cd6">The case for professional services</a></p>
<p><a href="https://www.bitecode.dev/p/relieving-your-python-packaging-pain">Opinionated article on Python installations</a></p>
<p><a href="https://www.bitecode.dev/p/why-not-tell-people-to-simply-use">This page addresses poetry and conda</a></p>
<p><a href="https://suzdalnitski.medium.com/oop-will-make-you-suffer-846d072b4dce">Object oriented programming is the biggest mistake of all time</a></p>
<p><a href="https://vicki.substack.com/p/google-drive-is-production">Google drive is production</a></p>
<p><a href="https://cxl.com/blog/does-offering-more-choices-actually-tank-conversions/">Paradox of choice</a></p>
<p><a href="https://world.hey.com/dhh/why-we-re-leaving-the-cloud-654b47e0">Why we’re leaving the cloud</a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8085589/">Moving beyond “algorithmic bias is a data problem”</a></p>
<p><a href="https://www.youtube.com/watch?v=ajGX7odA87k">That keynote talk “USENIX Security ’18-Q: Why Do Keynote Speakers Keep Suggesting That Improving Security Is Possible?”</a> : 4:08 is where he talks about ml</p>
<p><a href="https://www.youtube.com/watch?v=AaU6tI2pb3M">Here’s What Ethical AI Really Means - YouTube philosophy tube</a></p>
<p><a href="https://hanselminutes.com/847/engineering-stack-overflow-with-roberta-arcoverde">Podcast on Stackoverflow Architecture</a></p>
<p><a href="https://www.goodreads.com/book/show/51777543-data-feminism?ref=nav_sb_ss_1_8">Data Feminism</a></p>
<p><a href="https://www.goodreads.com/book/show/41104077-invisible-women?ref=nav_sb_ss_1_15">Invisible Women</a></p>
<p><a href="https://www.youtube.com/watch?t=374&amp;v=AS2kuD--z44&amp;feature=youtu.be">Quality Jam 2017: Michael Bolton “A Ridiculously Rapid Introduction to Rapid Software Testing”</a></p>
<p><a href="https://gist.github.com/sharadhr/39b804236c1941e9c30d90af828ad41e">Home not so sweet home gist</a></p>
<ul>
<li>Includes links to pages like <a href="https://utcc.utoronto.ca/~cks/space/blog/sysadmin/ReportConfigFileLocations">Everything that uses configuration files should report where they’re located</a></li>
</ul>
<p><a href="https://www.linuxatemyram.com/">Help linux ate my RAM</a></p>
<p><a href="https://unsplash.com/">Free images for including in presentations</a></p>
<p><a href="https://www.reddit.com/r/devops/comments/vzpqsw/getting_harrassed_by_datadog_rant_suggestions/">Datadog sales people are annoying</a></p>
<p><a href="https://counting.substack.com/p/counting-explosions-at-unity?utm_source=substack&amp;publication_id=27849&amp;post_id=137046759&amp;utm_medium=email&amp;utm_content=share&amp;utm_campaign=email-share&amp;triggerShare=true&amp;isFreemail=true&amp;r=yxnx">Counting explosions at Unity, a data analysts perspective</a></p>
<p><a href="https://resend.com/blog/incident-report-for-february-21-2024">Database rebuild incident</a></p>
<p><a href="https://www.cloudflare.com/learning/ssl/lava-lamp-encryption/">How do lava lamps help with Internet encryption?</a></p>
<p>Free email for testing things: mailtrap</p>
<p><a href="https://www.youtube.com/@robmulla/search?query=pandas">If you haven’t done a Pandas data analysis project in awhile, it’s probably not a bad idea to watch this guy’s vids</a></p>
<p><a href="https://www.troyhunt.com/sending-spammers-to-password-purgatory-with-microsoft-power-automate-and-cloudflare-workers-kv/">Password purgatory</a></p>
<p><a href="https://www.youtube.com/watch?v=Xty-gzzIkBc">Everything I learned about concurrency and reliability I learned at the Waffle House</a></p>
<p><a href="https://youtu.be/ia8Q51ouA_s?si=2xOQGQO-LYvB3fKZ">Positive affirmations for site reliability engineers</a></p>
<p><a href="https://github.com/cobriant/vaporwave.rstheme">vaporwave RStudio theme</a></p>



 ]]></description>
  <category>datascience</category>
  <category>opinions</category>
  <category>hardware</category>
  <category>software</category>
  <guid>https://questionable.quarto.pub/blog/lists/code.html</guid>
  <pubDate>Fri, 19 Apr 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/lists/img/" medium="image"/>
</item>
<item>
  <title>The importance of good programming</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/lists/good-programming.html</link>
  <description><![CDATA[ 





<p>A handful of articles that have stood out over the years as interesting case studies into the importance of good programming, and what that actually means.</p>
<section id="uk-post-office-scandal" class="level2">
<h2 class="anchored" data-anchor-id="uk-post-office-scandal">UK Post Office Scandal</h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=h3UIdGRBGlY">Developers blamed for the post office scandal?</a></li>
<li><a href="https://www.postofficetrial.com/2019/01/victims-testimony.html">Victim testimony</a></li>
<li><a href="https://www.postofficetrial.com/2019/03/the-smoking-gun.html">Remote access and mistakes blamed on post masters, a smoking gun</a></li>
<li><a href="https://www.reddit.com/r/it/s/i5NE3qQgv0">Example of the terrible quality of the code - were they paid by line of code submitted? Does this imply a fauly language conversion? Risks of overflow errors?</a></li>
<li><a href="https://www.postofficetrial.com/2019/12/second-sights-ron-warmington-breaks-his.html?m=1">One of the independent investigators from 2012 breaks silence</a></li>
<li><a href="https://www.postofficetrial.com/2021/07/second-sight-were-told-about-remote.html?m=1">Evidence that back in 2012 the indepent investigators were told about remote access, implying pejury in all later cases</a></li>
<li><a href="https://www.postofficetrial.com/2019/03/horizon-trial-day-4-day-of-two-halves.html?m=1">They Could, And They Did Change Branch Transaction Data</a></li>
<li><a href="https://www.postofficetrial.com/2019/03/miscarriages-of-justice.html?m=1">Miscarriage of justice - the Rose report</a></li>
<li><a href="https://www.postofficescandal.uk/post/current-post-office-horizon-it-issues/">List of current issues / bugs as of 2017? with the software. One can only imagine how much worse it used to be</a></li>
<li><a href="https://www.postofficescandal.uk/post/how-not-to-commission-a-complex-it-project/">Project manager on the original project discusses his impressions - how not to commission a complex project</a> <a href="https://www.postofficescandal.uk/post/inquiry-phase-2-star-witness-dave-gives-it-both-barrels/">Inquiry Phase 2: Star Witness – Dave gives it both barrels</a></li>
<li><a href="https://www.postofficetrial.com/2019/03/horizon-trial-day-5-he-had-loaded-gun.html">Known errors in the software, perjury, and lack of disclosure</a></li>
<li><a href="https://www.postofficetrial.com/2019/06/horizon-trial-day-16-that-surprises-me.html">Interview with IT - throwing coconuts</a></li>
<li><a href="https://www.postofficetrial.com/2019/06/horizon-trial-day-18-dr-robert.html">Interview with the other IT</a></li>
<li><a href="https://www.postofficetrial.com/2019/04/bates-v-post-office-recusal-judgment_9.html">Attempt by the post to recuse the judge - right after a verdict was handed down. Sour grapes, anyone?</a></li>
<li><a href="https://www.postofficetrial.com/2020/07/the-post-office-cover-up-part-2-they.html">The cover up</a></li>
<li><a href="https://www.postofficetrial.com/2019/03/why-did-post-office-accuse-aakash-patny.html">Why did the lawyer for the post office act this way?</a></li>
<li><a href="https://www.civillitigationbrief.com/2015/07/23/thinking-of-alleging-or-pleading-fraud-better-read-this-first/">Thinking of alleging or pleading fraud: better read this first</a></li>
</ul>
</section>
<section id="chinook-crash" class="level1">
<h1>Chinook Crash</h1>
<ul>
<li><a href="https://www.computerweekly.com/blog/Public-Sector-IT/Chinook-Mk2-we-publish-new-evidence-of-computer-problems">New evidence of computer problems</a></li>
</ul>
<blockquote class="blockquote">
<p>Although only 17% of the code has been analysed [EDS, the code’s assessors, stopped work on the code because of the density of anomalies found] 21 category one and 153 category two anomalies have been revealed. One of these, the reliance on an undocumented and unproved feature of the processor [based on an Intel ASM96 chip] is considered to be positively dangerous.</p>
</blockquote>
<blockquote class="blockquote">
<p>EDS was not satisfied with Hawker Siddeley’s assurances. In its report on the Fadec software, EDS said: “Correct operation (of the Fadec) depends on an undocumented feature of the Intel ASM 96 microcomputer. EDS-Scicon’s concern is that a change in the mask or process of the ASM chip at some point in the future may cause incorrect operation of the FADEC.]</p>
</blockquote>
</section>
<section id="bugs-with-the-therac-25-computer-controlled-radiation-therapy-machine" class="level1">
<h1>Bugs with the Therac-25 computer-controlled radiation therapy machine</h1>
<ul>
<li><a href="https://hackaday.com/2015/10/26/killed-by-a-machine-the-therac-25/">Killed by a machine</a></li>
</ul>
<blockquote class="blockquote">
<p>If this story has a hero, it’s [Fritz Hager], the staff physicist at the East Texas Cancer Center in Tyler, Texas. After the second incident at his facility, he was determined to get to the bottom of the problem. In both cases, the Therac-25 displayed a “Malfunction 54” message. The message was not mentioned in the manuals. AECL explained that Malfunction 54 meant that the Therac-25’s computer could not determine if there a underdose OR overdose of radiation.</p>
</blockquote>
<blockquote class="blockquote">
<p>The same radiotherapy technician had been involved in both incidents, so [Fritz] brought her back into the control room to attempt to recreate the problem. The two “locked the doors” NASA style, working into the night and through the weekend trying to reproduce the problem. With the technician running the machine, the two were able to pinpoint the issue. The VT-100 console used to enter Therac-25 prescriptions allowed cursor movement via cursor up and down keys. If the user selected X-ray mode, the machine would begin setting up the machine for high-powered X-rays. This process took about 8 seconds. If the user switched to Electron mode within those 8 seconds, the turntable would not switch over to the correct position, leaving the turntable in an unknown state.</p>
</blockquote>
<blockquote class="blockquote">
<p>As the investigations and lawsuits progressed, the software for the Therac-25 was placed under scrutiny. The Therac-25’s PDP-11 was programmed completely in assembly language. Not only the application, but the underlying executive, which took the place of an operating system. The computer was tasked with handling real-time control of the machine, both its normal operation and safety systems. Today this sort of job could be handled by a microcontroller or two, with a PC running a GUI front end.</p>
</blockquote>
<blockquote class="blockquote">
<p>AECL never publicly released the source code, but several experts including [Nancy Leveson] did obtain access for the investigation. What they found was shocking. The software appeared to have been written by a programmer with little experience coding for real-time systems. There were few comments, and no proof that any timing analysis had been performed. According to AECL, a single programmer had written the software based upon the Therac-6 and 20 code. However, this programmer no longer worked for the company, and could not be found.</p>
</blockquote>
<blockquote class="blockquote">
<p>The lawsuits were settled out of court. It seemed like the problems were solved until January 17th, 1987, when another patient was overdosed at Yakima, Washington. This problem was a new one: A counter overflow. If the operator sent a command at the exact moment the counter overflowed, the machine would skip setting up some of the beam accessories – including moving the stainless steel aiming mirror. The result was once again an unscanned beam, and an overdose. The patient died 3 months later.</p>
</blockquote>
<blockquote class="blockquote">
<p>It’s important to note that while the software was the lynch pin in the Therac-25, it wasn’t the root cause. The entire system design was the real problem. Safety-critical loads were placed upon a computer system that was not designed to control them. Timing analysis wasn’t performed. Unit testing never happened. Fault trees for both hardware and software were not created. These tasks are not only the responsibility of the software engineers, but the systems engineers on the project. Therac-25 is long gone, but its legacy will live on. This was the watershed event that showed how badly things can go wrong when software for life-critical systems is not properly designed and adequately tested.</p>
</blockquote>
</section>
<section id="others" class="level1">
<h1>Others</h1>
<p><a href="https://blog.grio.com/2021/07/when-small-software-bugs-cause-big-problems.html">WHEN SMALL SOFTWARE BUGS CAUSE BIG PROBLEMS</a></p>
<p><a href="https://arstechnica.com/security/2024/03/backdoor-found-in-widely-used-linux-utility-breaks-encrypted-ssh-connections/">Backdoors into open source package</a></p>
<p><a href="https://resend.com/blog/incident-report-for-february-21-2024">We immediately began the restoration process from a backup, which completed 6 hours later. Unfortunately, once it finished, we found that it failed to restore the data, so we had to start the restoration process a second time with a different backup</a></p>
<p><a href="https://counting.substack.com/p/counting-explosions-at-unity?utm_source=substack&amp;publication_id=27849&amp;post_id=137046759&amp;utm_medium=email&amp;utm_content=share&amp;utm_campaign=email-share&amp;triggerShare=true&amp;isFreemail=true&amp;r=yxnx">Counting explosions at Unity, a data analysts perspective</a></p>
<p><a href="https://www.youtube.com/watch?v=ajGX7odA87k">That keynote talk “USENIX Security ’18-Q: Why Do Keynote Speakers Keep Suggesting That Improving Security Is Possible?”</a></p>


</section>

 ]]></description>
  <category>datascience</category>
  <category>opinions</category>
  <category>hardware</category>
  <category>software</category>
  <guid>https://questionable.quarto.pub/blog/lists/good-programming.html</guid>
  <pubDate>Wed, 24 Jan 2024 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/lists/img/" medium="image"/>
</item>
<item>
  <title>Accessing data in Azure Data Lake (delta files)</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts-no-pictures/delta-lake-and-azure.html</link>
  <description><![CDATA[ 





<p>This is some work I did exploring how to access the underlying databricks data storage, without having to go through databricks. Wanted to squirrel this aware so it’s easy to find in the future!</p>
<section id="azure-data-lake" class="level2">
<h2 class="anchored" data-anchor-id="azure-data-lake">Azure Data Lake</h2>
<section id="set-up" class="level3">
<h3 class="anchored" data-anchor-id="set-up">Set up</h3>
<p>Landing page for Azure: &lt;<a href="https://portal.azure.com/">https://portal.azure.com/</a> &gt;</p>
<p>Follow this article: &lt;<a href="https://learn.microsoft.com/en-us/azure/storage/blobs/create-data-lake-storage-account">https://learn.microsoft.com/en-us/azure/storage/blobs/create-data-lake-storage-account</a> &gt;</p>
<p>The trick: ADL isn’t it’s own separate category, it gets created as part of a storage account.</p>
<p>Steps:</p>
<ol type="1">
<li><p>Go to storage account</p></li>
<li><p>Create and give it a name</p></li>
<li><p>Select: LRS</p></li>
<li><p>Switch to premium: block blobs</p></li>
<li><p>Change to hierarchical blob</p></li>
<li><p>Set tags:</p></li>
</ol>
<ul>
<li><p>rs:owner</p></li>
<li><p>rs:project = soleng</p></li>
<li><p>rs:environment = dev</p></li>
</ul>
<ol start="7" type="1">
<li>Once in just need access keys or shared access signature in order to gain access</li>
</ol>
</section>
<section id="add-data" class="level3">
<h3 class="anchored" data-anchor-id="add-data">Add data</h3>
<p>You can add data manually by creating a container and then using the upload icon.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://gist.github.com/assets/70042237/750bd967-979a-4220-a1f2-9cf5118dfcdd.png" class="lightbox" data-glightbox="description: .lightbox-desc-1" data-gallery="quarto-lightbox-gallery-1" title="image"><img src="https://gist.github.com/assets/70042237/750bd967-979a-4220-a1f2-9cf5118dfcdd.png" class="img-fluid figure-img" alt="image"></a></p>
<figcaption>image</figcaption>
</figure>
</div>
</section>
</section>
<section id="authentication" class="level2">
<h2 class="anchored" data-anchor-id="authentication">Authentication</h2>
<p>Access your authentication details through the Access Keys or Shared Access Signature links on the left. I prefer Access Keys since they are easier to use.</p>
<p>For authentication from an R script we’ll be using <a href="https://github.com/Azure/AzureStor">https://github.com/Azure/AzureStor</a></p>
<p>You’ll need to know:</p>
<ul>
<li><p>The Blob endpoint for your Azure Data Lake storage</p></li>
<li><p>An Access Key (this can also be done with a Shared Access Signature)</p></li>
</ul>
<pre><code>library(AzureStor)

blob_endpoint &lt;- "https://REDACTED.blob.core.windows.net/"

bl_endp_key &lt;- storage_endpoint(blob_endpoint, key="REDACTED")

# List containers and files in containers
list_storage_containers(bl_endp_key)
cont1 &lt;- storage_container(bl_endp_key, "container1")
list_storage_files(cont1)

# Download a file
storage_download(cont1, "/crm_call_center_logs.parquet")

# Upload a file 
storage_upload(cont1, "crm_call_center_logs.parquet", "newdir/crm_call_center_logs.parquet")</code></pre>
<p>You can also create and delete containers:</p>
<pre><code># Create a container
newcont &lt;- create_storage_container(bl_endp_key, "container3")

# Create a directory in the container
cont3 &lt;- storage_container(bl_endp_key, "container3")
create_storage_dir(cont3, "newdir")

# Delete a container
delete_storage_container(newcont)</code></pre>
</section>
<section id="reading-and-writing-delta-files" class="level2">
<h2 class="anchored" data-anchor-id="reading-and-writing-delta-files">Reading and Writing Delta Files</h2>
<p>Delta files can be read by using the sparklyr package: <a href="https://spark.rstudio.com/packages/sparklyr/latest/reference/spark_read_delta.html">https://spark.rstudio.com/packages/sparklyr/latest/reference/spark_read_delta.html</a> Thanks for the help with the magic incantation below!</p>
<p>In order to do this we will need to manage a Spark cluster. We can run it in local mode so that we aren’t connecting to an external cluster with billing:</p>
<pre><code>library(sparklyr)

#Install a local version of Spark
spark_install(version=3.4)

# Set Spark configuration to be able to read delta tables
conf &lt;- spark_config()
conf$`spark.sql.extensions` &lt;- "io.delta.sql.DeltaSparkSessionExtension"
conf$`spark.sql.catalog.spark_catalog` &lt;- "org.apache.spark.sql.delta.catalog.DeltaCatalog"

# For spark 3.4 
conf$sparklyr.defaultPackages &lt;- "io.delta:delta-core_2.12:2.4.0"

# Open a connection
sc &lt;- spark_connect("local", version = 3.4, packages = "delta", conf = conf)

# For this example we will use a built-in dataframe to save example data files, including one for delta tables
tbl_mtcars &lt;- copy_to(sc, mtcars, "spark_mtcars")

# Write spark dataframe to disk
spark_write_csv(tbl_mtcars,  path = "test_file_csv", mode = "overwrite")
spark_write_parquet(tbl_mtcars,  path = "test_file_parquet", mode = "overwrite")
spark_write_delta(tbl_mtcars,  path = "test_file_delta", mode = "overwrite")

# Read dataframes into normal memory
spark_tbl_handle &lt;- spark_read_csv(sc, path = "test_file_csv")
regular_df_csv &lt;- collect(spark_tbl_handle)
spark_tbl_handle &lt;- spark_read_parquet(sc, path = "test_file_parquet")
regular_df_parquet &lt;- collect(spark_tbl_handle)
spark_tbl_handle &lt;- spark_read_delta(sc, path = "test_file_delta")
regular_df_delta &lt;- collect(spark_tbl_handle)

# Disconnect
spark_disconnect(sc)</code></pre>
<p>You should now have normal dataframes in your regular R environment that can be used for further analytics:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://gist.github.com/assets/70042237/52a8fd86-8f58-4688-87a6-7a5433d28aee.png" class="lightbox" data-glightbox="description: .lightbox-desc-2" data-gallery="quarto-lightbox-gallery-2" title="image"><img src="https://gist.github.com/assets/70042237/52a8fd86-8f58-4688-87a6-7a5433d28aee.png" class="img-fluid figure-img" alt="image"></a></p>
<figcaption>image</figcaption>
</figure>
</div>
<p>Note: For Spark 3.5 you might have success with “io.delta:delta-core_2.12:3.0.0”</p>
</section>
<section id="troubleshooting" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h2>
<p>From R:</p>
<pre><code># See spark details (troubleshooting)
spark_config()
spark_get_java()
spark_available_versions()
spark_installed_versions()

# See session details
utils::sessionInfo() </code></pre>
<p>From bash:</p>
<pre><code>namei -l /usr/lib/spark</code></pre>
<p>Recommended troubleshooting: <a href="https://spark.rstudio.com/guides/troubleshooting.html">https://spark.rstudio.com/guides/troubleshooting.html</a></p>
</section>
<section id="about" class="level2">
<h2 class="anchored" data-anchor-id="about">About</h2>
<section id="azure-data-lake-azure-data-lake-storage-gen2-introduction---azure-storage" class="level3">
<h3 class="anchored" data-anchor-id="azure-data-lake-azure-data-lake-storage-gen2-introduction---azure-storage">Azure Data Lake: <a href="https://learn.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction">Azure Data Lake Storage Gen2 Introduction - Azure Storage</a></h3>
<blockquote class="blockquote">
<p>Azure Data Lake Storage Gen2 is a set of capabilities dedicated to big data analytics, built on Azure Blob Storage.</p>
</blockquote>
<blockquote class="blockquote">
<p>Data Lake Storage Gen2 converges the capabilities of Azure Data Lake Storage Gen1 with Azure Blob Storage. For example, Data Lake Storage Gen2 provides file system semantics, file-level security, and scale. Because these capabilities are built on Blob storage, you’ll also get low-cost, tiered storage, with high availability/disaster recovery capabilities.</p>
</blockquote>
<blockquote class="blockquote">
<p>A superset of POSIX permissions: The security model for Data Lake Gen2 supports ACL and POSIX permissions along with some extra granularity specific to Data Lake Storage Gen2. Settings may be configured through Storage Explorer or through frameworks like Hive and Spark.</p>
</blockquote>
<p>TLDR: Azure Data Lake is a place where data can be saved (similar to S3 buckets on Amazon).</p>
</section>
<section id="delta-tables-httpsdocs.delta.iolatestdelta-intro.html" class="level3">
<h3 class="anchored" data-anchor-id="delta-tables-httpsdocs.delta.iolatestdelta-intro.html">Delta Tables: <a href="https://docs.delta.io/latest/delta-intro.html">https://docs.delta.io/latest/delta-intro.html</a></h3>
<blockquote class="blockquote">
<p><a href="https://delta.io/">Delta Lake</a> is an <a href="https://github.com/delta-io/delta">open source project</a> that enables building a <a href="https://databricks.com/blog/2020/01/30/what-is-a-data-lakehouse.html">Lakehouse architecture</a> on top of <a href="https://databricks.com/discover/data-lakes/introduction">data lakes</a>. Delta Lake provides <a href="https://docs.delta.io/latest/concurrency-control.html">ACID transactions</a>, scalable metadata handling, and unifies <a href="https://docs.delta.io/latest/delta-streaming.html">streaming</a> and <a href="https://docs.delta.io/latest/delta-batch.html">batch</a> data processing on top of existing data lakes, such as S3, ADLS, GCS, and HDFS.</p>
</blockquote>
<p>You can check Delta Lake releases here: <a href="https://docs.delta.io/latest/releases.html">https://docs.delta.io/latest/releases.html</a></p>
<p>TLDR: Delta tables are a data file format, specifically used with Spark clusters (for example Databricks).</p>



</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/posts-no-pictures/delta-lake-and-azure.html</guid>
  <pubDate>Thu, 11 Jan 2024 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts-no-pictures/img/" medium="image"/>
</item>
<item>
  <title>Ford Maverick Truck Cubby Holder</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/maverick cubby holder.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/cubby-holder.jpg" class="img-fluid figure-img"></p>
<figcaption>Assembled cubby holder fits perfectly!</figcaption>
</figure>
</div>
<section id="get-it-for-yourself" class="level1">
<h1>Get it for yourself!</h1>
<p>Get the layout here: <a href="https://github.com/leesahanders/laser-cutter" class="uri">https://github.com/leesahanders/laser-cutter</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/cubby-holder 2.jpg" class="img-fluid figure-img"></p>
<figcaption>Simple design easy to modify and print</figcaption>
</figure>
</div>
<p>Cut on the laser cutter at the Boulder, Colorado Solid State Depot Makerspace.</p>
</section>
<section id="recommended-software" class="level1">
<h1>Recommended software:</h1>
<section id="libre-cad-httpslibrecad.org" class="level2">
<h2 class="anchored" data-anchor-id="libre-cad-httpslibrecad.org">Libre CAD <a href="https://librecad.org/" class="uri">https://librecad.org/</a></h2>
<p>This is where the bulk of your work will be done. Some of the key functions to be aware of:</p>
<ul>
<li>Line, 2 points</li>
<li>Measure, distance point to point</li>
<li>Modify, Move/Copy, Rotate, Trim 2, Attributes, Explode text into letters, Mirror</li>
</ul>
<p>Tips:</p>
<ul>
<li>You’ll need to change the snap settings at the bottom to change what it connects with.</li>
<li>When drawing a line use the @ symbol to signify from the current reference (instead of absolute). EG. <span class="citation" data-cites="0">@0</span>,10</li>
<li>Your actual cut layer should be its own layer separate from a designs / motifs layer.</li>
</ul>
<p>In order to move your files (<code>.dxf</code>) into your next software (where it will be layed out on a page for the actual laser cutter to interpret), it will need to be saved/exported (as an <code>.svg</code>).</p>
</section>
<section id="inkscape-httpsinkscape.org" class="level2">
<h2 class="anchored" data-anchor-id="inkscape-httpsinkscape.org">Inkscape <a href="https://inkscape.org/" class="uri">https://inkscape.org/</a></h2>
<p>This is where your design is laid out for the laser cutter to cut.</p>
<ul>
<li>Object, Group, Transform</li>
<li>Edit, Resize Page to Selection</li>
</ul>
</section>
</section>
<section id="specifications" class="level1">
<h1>Specifications</h1>
<section id="all-about-tabs" class="level2">
<h2 class="anchored" data-anchor-id="all-about-tabs">All about tabs</h2>
<p>3.4mm tab thicknesses work with 1/8 inch wood.</p>


</section>
</section>

 ]]></description>
  <category>laser-cutting</category>
  <category>maverick-mods</category>
  <guid>https://questionable.quarto.pub/blog/posts/maverick cubby holder.html</guid>
  <pubDate>Thu, 05 Oct 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/cubby-holder.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Problems with persistence when in the cloud</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts-no-pictures/git-and-sagemaker.html</link>
  <description><![CDATA[ 





<p>This is a random trick that took me longer than I care to admit to figure out - and wanted to squirrel it away so it’s easy to find in the future!</p>
<section id="problem-when-on-linux" class="level2">
<h2 class="anchored" data-anchor-id="problem-when-on-linux">Problem when on Linux:</h2>
<blockquote class="blockquote">
<p>In general gitcreds doesn’t work well on linux (which has led to this git issue <a href="https://github.com/r-lib/gitcreds/issues/47">(Ship our own credential helper on Linux · Issue #47 · r-lib/gitcreds</a> ). There is an excellent blog post that is very useful that goes deeper into what is going on: <a href="https://blog.djnavarro.net/posts/2021-08-08_git-credential-helpers/">Notes from a data witch - Managing GitHub credentials from R, difficulty level linux</a></p>
</blockquote>
</section>
<section id="problem-when-on-sagemaker" class="level2">
<h2 class="anchored" data-anchor-id="problem-when-on-sagemaker">Problem when on Sagemaker:</h2>
<blockquote class="blockquote">
<p>Additionally, on Sagemaker things like credentials will be by default stored to the ephemeral EC2 instance and lost when the session is closed. A different method needs to be pursued in order for the token to persist.</p>
</blockquote>
</section>
<section id="tldr-solution" class="level2">
<h2 class="anchored" data-anchor-id="tldr-solution">TLDR Solution:</h2>
<p>Configure the global git to cache instead of store the credentials to a local file (from bash/terminal):<br>
<code>git config --global credential.helper 'store --file ~/.my-credentials'</code></p>
</section>
<section id="testing" class="level2">
<h2 class="anchored" data-anchor-id="testing">Testing</h2>
<p>I’ll add a disclaimer that it is similar to the .Renviron approach where the credentials would be stored as plain text, however to a location chosen by the user.</p>
<p>Load libraries:</p>
<pre><code>library(usethis) 
library(gitcreds) 
library(gh) 
library(credentials)</code></pre>
<p>Configure the global git to cache instead of store the credentials to a local file (from bash/terminal):<br>
<code>git config --global credential.helper 'store --file ~/.my-credentials'</code></p>
<p>From the documentation:</p>
<blockquote class="blockquote">
<p>The “store” mode saves the credentials to a plain-text file on disk, and they never expire. This means that until you change your password for the Git host, you won’t ever have to type in your credentials again. The downside of this approach is that your passwords are stored in cleartext in a plain file in your home directory. The other options involve needing to change the root container to include alternative git credential helpers (libsecret or gcm core) which as far as I can tell are not currently available and would be something I’d recommend reaching out to Amazon about as they control that image.</p>
</blockquote>
<p>Generate the PAT:</p>
<p><code>usethis::create_github_token()</code></p>
<p>Copy the generated PAT to your clipboard. Provide the PAT to this function when asked for it:</p>
<p><code>gitcreds::gitcreds_set()</code></p>
<p>Check that it stored with:</p>
<p><code>gitcreds_get()</code></p>
</section>
<section id="alternatives" class="level2">
<h2 class="anchored" data-anchor-id="alternatives">Alternatives</h2>
<p>The old way “store a PAT as the <code>GITHUB_PAT</code> environment variable in <code>.Renviron.</code>” is typically what is recommended as being more compatible with linux if you are able to switch back to it, but it can present a security issue. We’ve also commonly seen folks using the <code>gh</code> package for generating PATs like in <a href="https://gh.r-lib.org/articles/managing-personal-access-tokens.html">Managing Personal Access Tokens</a></p>
<p>Alternatively, there are some git config options from the terminal. See: <a href="https://happygitwithr.com/https-pat.html?q=env#pat-doesnt-persist-on-linux">Chapter 9 Personal access token for HTTPS | Happy Git and GitHub for the useR</a></p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/posts-no-pictures/git-and-sagemaker.html</guid>
  <pubDate>Tue, 29 Aug 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts-no-pictures/img/" medium="image"/>
</item>
<item>
  <title>Vortico rockets</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/vortico rockets.html</link>
  <description><![CDATA[ 





<p>Vorticos are a spinning rocket that helicopter down to a safe landing. By painting different patterns on the wings you can get some interesting optical effects!</p>
<p>Very fun project spread out over a couple days to assemble, paint, and then finally shoot!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/vortico.jpg" class="img-fluid figure-img"></p>
<figcaption>Painted and assembled vortico rockets</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/vortico 2.jpg" class="img-fluid figure-img"></p>
<figcaption>Launching the vorticos is best with a smaller rod to prevent wobble on takeoff</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/vortico 3.jpg" class="img-fluid figure-img"></p>
<figcaption>Up it goes!</figcaption>
</figure>
</div>
<p>Get one for yourself here: <a href="https://www.rocketarium.com/Rockets/Vortico" class="uri">https://www.rocketarium.com/Rockets/Vortico</a></p>



 ]]></description>
  <category>rockets</category>
  <guid>https://questionable.quarto.pub/blog/posts/vortico rockets.html</guid>
  <pubDate>Sun, 06 Aug 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/vortico.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ford Maverick Soft Topper installation</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/maverick soft topper.html</link>
  <description><![CDATA[ 





<p><a href="https://softopper.com/">Soft topper</a> is a fabric rear cover for truck beds.</p>
<p>Finally taking the time to actually install it on my Ford Maverick. Went in like a breeze, though there is some loss in visibility once it is on. Here are some of the measurements.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/maverick_softtopper.jpg" class="img-fluid figure-img"></p>
<figcaption>Carefully placing the clamps</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/maverick_softtopper 2.jpg" class="img-fluid figure-img"></p>
<figcaption>The aluminum frame assembled and pushed back</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/maverick_softtopper 3.jpg" class="img-fluid figure-img"></p>
<figcaption>With the fabric cover snapped in place the rear storage is safe from the elements. Next up to work on the camper modifications!</figcaption>
</figure>
</div>



 ]]></description>
  <category>maverick-mods</category>
  <guid>https://questionable.quarto.pub/blog/posts/maverick soft topper.html</guid>
  <pubDate>Sat, 06 May 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/maverick_softtopper 3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sound</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/lists/sound.html</link>
  <description><![CDATA[ 





<p>Make beautiful music with technology!</p>
<section id="otomata" class="level2">
<h2 class="anchored" data-anchor-id="otomata">Otomata</h2>
<p>Make beautiful generative algorithm inspired music using cellular automation.</p>
<ul>
<li>Link to the app: <a href="https://marwahaha.github.io/otomata/" class="uri">https://marwahaha.github.io/otomata/</a></li>
</ul>
<p>Some historic links:</p>
<ul>
<li><p>Originally at (but now no longer works): <a href="https://earslap.com/page/otomata.html" class="uri">https://earslap.com/page/otomata.html</a></p></li>
<li><p>From the reddit post: <a href="https://www.reddit.com/r/otomata/comments/lrd7n4/otomata_lives_again_web_version/" class="uri">https://www.reddit.com/r/otomata/comments/lrd7n4/otomata_lives_again_web_version/</a></p></li>
<li><p>Github: <a href="https://github.com/marwahaha/otomata" class="uri">https://github.com/marwahaha/otomata</a></p></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/lists/img/otomata.jpg" class="img-fluid figure-img"></p>
<figcaption>reddit post</figcaption>
</figure>
</div>
</section>
<section id="sonic-pi" class="level2">
<h2 class="anchored" data-anchor-id="sonic-pi">Sonic Pi</h2>
<p>Make your own music using programming with Sonic Pi: <a href="https://sonic-pi.net/" class="uri">https://sonic-pi.net/</a></p>
</section>
<section id="sky-cotl" class="level2">
<h2 class="anchored" data-anchor-id="sky-cotl">Sky COTL</h2>
<p>Sky Children of Light is a phone game that has a built in music player that I really love. Instead of having to turn pages in sheet music it has floating icons that change shape over the notes you need to play, making it really easy to pick up once you get the hang of it.</p>
<ul>
<li>Sky music library: <a href="https://sky-music.github.io/" class="uri">https://sky-music.github.io/</a></li>
<li>Sky music app library: <a href="https://sky-music.herokuapp.com/songLibrary.html" class="uri">https://sky-music.herokuapp.com/songLibrary.html</a></li>
<li>Sky music app: <a href="https://sky-music.herokuapp.com/" class="uri">https://sky-music.herokuapp.com/</a></li>
</ul>
<p>Here’s an example of one that I created (an attempt to translate “Regret” by Gackt):</p>
<blockquote class="instagram-media blockquote" data-instgrm-permalink="https://www.instagram.com/reel/ClPr9oijLh-/?utm_source=ig_embed&amp;utm_campaign=loading" data-instgrm-version="14" style=" background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);">
<div style="padding:16px;">
<a href="https://www.instagram.com/reel/ClPr9oijLh-/?utm_source=ig_embed&amp;utm_campaign=loading" style=" background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;" target="_blank">
<div style=" display: flex; flex-direction: row; align-items: center;">
<div style="background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;">

</div>
<div style="display: flex; flex-direction: column; flex-grow: 1; justify-content: center;">
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;">

</div>
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;">

</div>
</div>
</div>
<div style="padding: 19% 0;">

</div>
<div style="display:block; height:50px; margin:0 auto 12px; width:50px;">
<svg width="50px" height="50px" viewbox="0 0 60 60" version="1.1" xmlns="https://www.w3.org/2000/svg" xlink="https://www.w3.org/1999/xlink">
<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-511.000000, -20.000000)" fill="#000000"><g><path d="M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631"></path></g></g></g>
</svg>
</div>
<div style="padding-top: 8px;">
<div style=" color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;">
View this post on Instagram
</div>
</div>
<div style="padding: 12.5% 0;">

</div>
<div style="display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;">
<div>
<div style="background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);">

</div>
<div style="background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;">

</div>
<div style="background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);">

</div>
</div>
<div style="margin-left: 8px;">
<div style=" background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;">

</div>
<div style=" width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)">

</div>
</div>
<div style="margin-left: auto;">
<div style=" width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);">

</div>
<div style=" background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);">

</div>
<div style=" width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);">

</div>
</div>
</div>
<div style="display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;">
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;">

</div>
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;">

</div>
</div>
</a>
<p style=" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;">
<a href="https://www.instagram.com/reel/ClPr9oijLh-/?utm_source=ig_embed&amp;utm_campaign=loading" style=" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;" target="_blank">A post shared by <span class="citation" data-cites="lisa.needs.to.make">@lisa.needs.to.make</span></a>
</p>
</div>
</blockquote>
<script async="" src="//www.instagram.com/embed.js"></script>


</section>

 ]]></description>
  <category>music</category>
  <guid>https://questionable.quarto.pub/blog/lists/sound.html</guid>
  <pubDate>Wed, 05 Oct 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/lists/img/otomata.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Chatbot</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/chatbot.html</link>
  <description><![CDATA[ 





<p>Check out the code: <a href="https://github.com/leesahanders/Chatbot" class="uri">https://github.com/leesahanders/Chatbot</a></p>
<p>Check out the hosted chatbot: <a href="https://leesahanders.shinyapps.io/Chatbot/" class="uri">https://leesahanders.shinyapps.io/Chatbot/</a></p>
<p>The goal of this project was to build a basic <a href="https://en.wikipedia.org/wiki/Chatbot">chatbot</a> and explore a couple ways of hosting it. You can check it out in action in a Shiny app hosted at <a href="https://leesahanders.shinyapps.io/Chatbot/">leesahanders.shinyapps.io/Chatbot/</a></p>
<section id="meet-the-bot" class="level2">
<h2 class="anchored" data-anchor-id="meet-the-bot">Meet the bot</h2>
<table class="table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>Chatbot</th>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><img src="https://questionable.quarto.pub/blog/posts/img/Plantey_saturated.jpg" width="100" height="100"></td>
<td>Leafey</td>
<td>Leafey is here to provide some plant therapy. Leafey is very simple with just key phrase look ups based on user inputs.</td>
</tr>
</tbody>
</table>
<!---
This is a comment

Accessed from: https://leesahanders.shinyapps.io/Chatbot/ 
Admin link: https://www.shinyapps.io/admin/#/application/5843948/logs 

![Leafey Image Too Big](/files/Plantey_saturated.PNG)
![Leafey Image Too Big](/files/Plantey_saturated.PNG =250x250)
<img src="/files/Plantey_saturated.PNG" width="100" height="100">
-->
<p>It’s just the one bot for now, but check back later and there might be more added.</p>
</section>
<section id="chat-model" class="level2">
<h2 class="anchored" data-anchor-id="chat-model">Chat model</h2>
<p>Shout out to the incredible resource at https://www.r-bloggers.com/2021/01/eliza-chatbot-in-r-build-yourself-a-shrink/ where the core code parts for the chatbot are from.</p>
<p>At it’s most basic the important elements are: 1. List of answers based on key phrases 2. List of default answers if no key phrases are found 3. Pattern matching function</p>
<p>Essentially it works by using an input from the user and searching for key phrases and based on what it finds for a match returning the best matched answer. For more details check out the writeout the folks at r-bloggers did (linked above).</p>
<p>More chatbots can be created by copying the chatbot_leafey file and changing the name and contents to reflect the personality of the new one.</p>
</section>
<section id="hosting" class="level2">
<h2 class="anchored" data-anchor-id="hosting">Hosting</h2>
<p>The chat bot can now be kicked off inside whichever system wanted - whether that is in a shiny app, discord integration, or just in console using a while loop.</p>
<section id="console" class="level3">
<h3 class="anchored" data-anchor-id="console">Console</h3>
<p>Shout out to the incredible resource at https://www.r-bloggers.com/2021/01/eliza-chatbot-in-r-build-yourself-a-shrink/ where this code is from for kicking off your chatbot to interact with in the console until you hit exit:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Leafey: Hello, I am Leafey!</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> (<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb1-3">  input <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readline</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You: "</span>)</span>
<span id="cb1-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quit"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Leafey:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Leafey</span>(input))</span>
<span id="cb1-6">}</span></code></pre></div>
</section>
<section id="shiny" class="level3">
<h3 class="anchored" data-anchor-id="shiny">Shiny</h3>
<p>The Shiny app is essentially just a wrapper for the chatbot functions. The trick was setting it up so that the user could select a chatbot and it would load the rest (so it would be reasonably scaleable), and capturing the chat with a log so that the user can see the full history of the conversation.</p>
<p>In order to use this feel free to clone the project and update the various sections as needed. Pay close attention to the section happening after the submit / chatbot selection action button is triggered. This is where the loading in of the appropriate chatbot is happening and various parameters are being set/reset.</p>
<section id="github-link" class="level4">
<h4 class="anchored" data-anchor-id="github-link">Github link</h4>
<p>The fancy ribbon is courtesy the <a href="https://github.com/colearendt/gitlink">gitlink</a>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ribbon_css</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/leesahanders/Chatbot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Code on Github"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fade =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span></code></pre></div>
<p>A less fancy way to include a link would be:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding div tag to the sidebar with git link           </span></span>
<span id="cb3-2">      tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"header"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">checked=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb3-3">               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tags$p("Raw code located on Git"),</span></span>
<span id="cb3-4">               tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/leesahanders/Chatbot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Raw code located on Git, check it out by clicking here"</span>)</span>
<span id="cb3-5">      ),</span></code></pre></div>
</section>
<section id="using-the-enter-key-for-triggering-the-action-button" class="level4">
<h4 class="anchored" data-anchor-id="using-the-enter-key-for-triggering-the-action-button">Using the enter key for triggering the action button</h4>
<p>Huge thanks to <a href="https://stackoverflow.com/questions/32335951/using-enter-key-with-action-button-in-r-shiny">Rahul Mishra</a> for finding an easy to use solution.</p>
<p>In the initialization of the app include the javascript function:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">jscode <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb4-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$(function() {</span></span>
<span id="cb4-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  var $els = $("[data-proxy-click]");</span></span>
<span id="cb4-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  $.each(</span></span>
<span id="cb4-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    $els,</span></span>
<span id="cb4-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    function(idx, el) {</span></span>
<span id="cb4-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      var $el = $(el);</span></span>
<span id="cb4-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      var $proxy = $("#" + $el.data("proxyClick"));</span></span>
<span id="cb4-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      $el.keydown(function (e) {</span></span>
<span id="cb4-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        if (e.keyCode == 13) {</span></span>
<span id="cb4-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          $proxy.click();</span></span>
<span id="cb4-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb4-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      });</span></span>
<span id="cb4-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb4-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  );</span></span>
<span id="cb4-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb4-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
<p>Then inside the UI include the call to the javascript where “Send” is changed to the label for your actionButton:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">  tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HTML</span>(jscode))),</span>
<span id="cb5-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data-proxy-click</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Send"</span>,</span></code></pre></div>
</section>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Credit where credit is due - jokes are from: - https://www.rd.com/article/plant-puns/</p>
<p>For the Shiny app development I used a bunch of resources for getting the details:</p>
<ul>
<li>https://stackoverflow.com/questions/65365805/how-to-align-button-next-to-text-input</li>
<li>https://stackoverflow.com/questions/56608214/how-can-i-keep-input-track-log-in-shiny-then-print-it-and-save-it</li>
<li>https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html (probably my favorite page on the internet!)</li>
<li>https://clarewest.github.io/blog/post/making-tables-shiny/</li>
<li>https://bookdown.org/yihui/rmarkdown-cookbook/kable.html</li>
<li>https://stackoverflow.com/questions/62139431/how-can-i-make-the-first-col-aligned-to-left-and-the-rest-aligned-to-center-with</li>
</ul>
<p>And some resources that are more aspirational, for future plans and features: - https://shiny.rstudio.com/articles/notifications.html - https://community.rstudio.com/t/shiny-contest-submission-table-editor-shiny-app/23600 - https://stackoverflow.com/questions/32335951/using-enter-key-with-action-button-in-r-shiny</p>
<p>Someday it would be cool to explore integrating a chatbot with discord, these resources look like they’d be useful: - https://github.com/jljsio/discordr - wrapper for Python package https://realpython.com/how-to-make-a-discord-bot-python/ - https://www.reddit.com/r/rprogramming/comments/epqfnl/making_a_discord_bot_in_r/</p>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/blog/posts/chatbot.html</guid>
  <pubDate>Mon, 19 Sep 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/Plantey_saturated.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Phone games</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/lists/phone_games.html</link>
  <description><![CDATA[ 





<section id="random-assortment-of-games-that-i-particularly-enjoy-and-would-endorse" class="level2">
<h2 class="anchored" data-anchor-id="random-assortment-of-games-that-i-particularly-enjoy-and-would-endorse">Random assortment of games that I particularly enjoy and would endorse</h2>
<section id="seedship" class="level3">
<h3 class="anchored" data-anchor-id="seedship">Seedship</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/lists/img/seedship.png" class="img-fluid figure-img"></p>
<figcaption>Seedship</figcaption>
</figure>
</div>
<p>A fun (and free game) where you are an AI exploring space trying to find the new home for the 1000 remaining survivors of the human race stored onboard.</p>
<p>Link: <a href="https://philome.la/johnayliff/seedship/play/index.html" class="uri">https://philome.la/johnayliff/seedship/play/index.html</a></p>
</section>
<section id="garticphone" class="level3">
<h3 class="anchored" data-anchor-id="garticphone">Garticphone</h3>
<p><a href="https://garticphone.com/" class="uri">https://garticphone.com/</a></p>
</section>
<section id="urban-dead" class="level3">
<h3 class="anchored" data-anchor-id="urban-dead">Urban dead</h3>
<p><a href="https://www.urbandead.com/" class="uri">https://www.urbandead.com/</a></p>
</section>
<section id="robot-odyssey" class="level3">
<h3 class="anchored" data-anchor-id="robot-odyssey">Robot Odyssey</h3>
<p><a href="https://robotodyssey.online/" class="uri">https://robotodyssey.online/</a></p>
</section>
<section id="skribl.io" class="level3">
<h3 class="anchored" data-anchor-id="skribl.io">skribl.io</h3>
<p><a href="https://skribbl.io/" class="uri">https://skribbl.io/</a></p>
</section>
<section id="trickser-cards" class="level3">
<h3 class="anchored" data-anchor-id="trickser-cards">Trickser cards</h3>
<p><a href="https://www.trickstercards.com/home/euchre/" class="uri">https://www.trickstercards.com/home/euchre/</a></p>
</section>
<section id="codenames" class="level3">
<h3 class="anchored" data-anchor-id="codenames">Codenames</h3>
<p><a href="https://codenames.game/" class="uri">https://codenames.game/</a></p>
</section>
<section id="mario-cart-tour" class="level3">
<h3 class="anchored" data-anchor-id="mario-cart-tour">Mario Cart Tour</h3>
<p>Track your coverage gaps with: <a href="https://www.mkttoolbox.com/login/?ret_url=%2F" class="uri">https://www.mkttoolbox.com/login/?ret_url=%2F</a></p>
</section>
<section id="semantle" class="level3">
<h3 class="anchored" data-anchor-id="semantle">Semantle</h3>
<p><a href="https://semantle.com/" class="uri">https://semantle.com/</a></p>
</section>
<section id="sky-children-of-light" class="level3">
<h3 class="anchored" data-anchor-id="sky-children-of-light">Sky Children of Light</h3>
</section>
<section id="home-quest" class="level3">
<h3 class="anchored" data-anchor-id="home-quest">Home Quest</h3>
</section>
<section id="hungry-shark" class="level3">
<h3 class="anchored" data-anchor-id="hungry-shark">Hungry Shark</h3>
</section>
<section id="mine-sweeper" class="level3">
<h3 class="anchored" data-anchor-id="mine-sweeper">Mine Sweeper</h3>
</section>
<section id="neko-atsune" class="level3">
<h3 class="anchored" data-anchor-id="neko-atsune">Neko Atsune</h3>
</section>
<section id="noras-dream" class="level3">
<h3 class="anchored" data-anchor-id="noras-dream">Nora’s Dream</h3>
</section>
<section id="spaceflight-simulator" class="level3">
<h3 class="anchored" data-anchor-id="spaceflight-simulator">SpaceFlight Simulator</h3>
</section>
<section id="wordle" class="level3">
<h3 class="anchored" data-anchor-id="wordle">Wordle</h3>
</section>
<section id="space-team" class="level3">
<h3 class="anchored" data-anchor-id="space-team">Space Team</h3>
</section>
<section id="one-night-werewolf" class="level3">
<h3 class="anchored" data-anchor-id="one-night-werewolf">One Night Werewolf</h3>
</section>
<section id="royal-game-of-ur" class="level3">
<h3 class="anchored" data-anchor-id="royal-game-of-ur">Royal Game of Ur</h3>
</section>
<section id="boardgamearena" class="level3">
<h3 class="anchored" data-anchor-id="boardgamearena">BoardGameArena</h3>
</section>
<section id="jackbox-games" class="level3">
<h3 class="anchored" data-anchor-id="jackbox-games">Jackbox Games</h3>
</section>
<section id="wiki-race" class="level3">
<h3 class="anchored" data-anchor-id="wiki-race">Wiki race</h3>
</section>
<section id="longwave-wavelength" class="level3">
<h3 class="anchored" data-anchor-id="longwave-wavelength">Longwave (Wavelength)</h3>
</section>
<section id="neopets" class="level3">
<h3 class="anchored" data-anchor-id="neopets">Neopets</h3>
</section>
<section id="kingdom-of-loathing" class="level3">
<h3 class="anchored" data-anchor-id="kingdom-of-loathing">Kingdom of Loathing</h3>


</section>
</section>

 ]]></description>
  <category>365</category>
  <category>games</category>
  <guid>https://questionable.quarto.pub/blog/lists/phone_games.html</guid>
  <pubDate>Thu, 04 Aug 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/lists/img/seedship.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Observable JS for snappy datascience</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/ojs_lyme.html</link>
  <description><![CDATA[ 





<section id="observable-js" class="level2">
<h2 class="anchored" data-anchor-id="observable-js">Observable JS</h2>
<p>This Quarto document is made interactive using Observable JS. Interactive documents allow readers to modify parameters and see the results immediately. Learn more about OJS interactive documents at <a href="https://quarto.org/docs/interactive/ojs/" class="uri">https://quarto.org/docs/interactive/ojs/</a>.</p>
</section>
<section id="data-wrangling" class="level2">
<h2 class="anchored" data-anchor-id="data-wrangling">Data wrangling</h2>
<p>Load the data, using <a href="https://www.cdc.gov/lyme/stats/survfaq.html">Lyme data from the CDC</a>.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" data-startfrom="25" data-source-offset="0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 24;"><span id="cb1-25">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FileAttachment</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/lyme_data.csv"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csv</span>({ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">typed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span> })</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="ojs-cell-1" data-nodetype="declaration">

</div>
</div>
</div>
<p>Filter options</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" data-startfrom="32" data-source-offset="-0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 31;"><span id="cb2-32">viewof state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Stname</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiple</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alaska"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Choose a state: "</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">sort</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unique</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span>})</span>
<span id="cb2-33">filtered <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(data) {</span>
<span id="cb2-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">includes</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Stname</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-35">})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-2-1" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-2-2" data-nodetype="declaration">

</div>
</div>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Plot</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Data</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Stacked bar chart of cases by state by year, remember to select an option above.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" data-startfrom="43" data-source-offset="0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 42;"><span id="cb3-43">Plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>({</span>
<span id="cb3-44">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb3-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">grid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-46">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-47">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">marks</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb3-48">    Plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">barY</span>(filtered<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_cases"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">fill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#bab0ab"</span>})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-49">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!--</span> plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(filtered<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_cases"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stname"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">textAnchor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-50">    Plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ruleY</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb3-51">  ]</span>
<span id="cb3-52">})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="ojs-cell-3" data-nodetype="expression">

</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Aggregated dataset for all states.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" data-startfrom="60" data-source-offset="0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 59;"><span id="cb4-60">Inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">sort</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">reverse</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span> })</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="ojs-cell-4" data-nodetype="expression">

</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0260122" class="uri">https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0260122</a></li>
<li><a href="https://www.hopkinslymetracker.org/" class="uri">https://www.hopkinslymetracker.org/</a></li>
<li><a href="https://quarto.org/docs/interactive/ojs/" class="uri">https://quarto.org/docs/interactive/ojs/</a></li>
<li>Data from: <a href="https://www.cdc.gov/lyme/stats/survfaq.html\" class="uri">https://www.cdc.gov/lyme/stats/survfaq.html\</a></li>
<li>Additional data options: <a href="https://data.world/datasets/lyme-disease" class="uri">https://data.world/datasets/lyme-disease</a></li>
<li>Some plots options using observable: <a href="https://github.com/observablehq/plot" class="uri">https://github.com/observablehq/plot</a> and <a href="https://observablehq.com/@observablehq/plot-bar" class="uri">https://observablehq.com/@observablehq/plot-bar</a></li>
<li>Some various tutorials: <a href="https://observablehq.com/tutorials" class="uri">https://observablehq.com/tutorials</a></li>
</ul>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/blog/posts/ojs_lyme.html</guid>
  <pubDate>Thu, 04 Aug 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/ojs_bar_chart.JPG" medium="image"/>
</item>
<item>
  <title>AI generated art</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/ai_art.html</link>
  <description><![CDATA[ 





<section id="but-first-a-disclaimer" class="level2">
<h2 class="anchored" data-anchor-id="but-first-a-disclaimer">But first, a disclaimer</h2>
<p>AI is controversial, and I’d recommend watching these two videos to understand some technical points on why that is:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=ajGX7odA87k">Keynote talk “USENIX Security ’18-Q: Why Do Keynote Speakers Keep Suggesting That Improving Security Is Possible?”</a></li>
<li><a href="https://www.youtube.com/watch?v=AaU6tI2pb3M">Here’s What Ethical AI Really Means - YouTube philosophy tube</a></li>
</ul>
</section>
<section id="ai-generated-art" class="level2">
<h2 class="anchored" data-anchor-id="ai-generated-art">AI Generated Art</h2>
<p>AI isn’t a new concept. Using AI’s to generate art isn’t a new concept. Having that available as app that actually creates some pretty fun results is pretty new.</p>
<p>As someone whose artistic ambitions always are greater than my actual ability, this has been a surprisingly fun and rewarding technology to play around with.</p>
<p>The three that I recommend are:</p>
<ul>
<li><p>My first AI art generating app (5 free pieces of art per day): <a href="https://www.starryai.com/" class="uri">https://www.starryai.com/</a></p></li>
<li><p>Doesn’t require log in (5 free pieces of art per day, however using incognito mode or edge counts as a separate user for 15 pieces of art per day): <a href="https://creator.nightcafe.studio/" class="uri">https://creator.nightcafe.studio/</a></p></li>
<li><p>No limit to number of pieces, landscapes only: <a href="https://www.wombo.art/" class="uri">https://www.wombo.art/</a></p></li>
</ul>
<p>There are a bunch more I’m looking forward to trying: &lt;https://www.unite.ai/10-best-ai-art-generators/#:~:text=Another one of the best,trained with millions of images&gt;</p>
</section>
<section id="highlights" class="level2">
<h2 class="anchored" data-anchor-id="highlights">Highlights</h2>
<p>Images in : img/starryai/</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="3">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s1.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-1" title="solarpunk"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/s1.png" class="img-fluid figure-img" alt="solarpunk"></a></p>
<figcaption>solarpunk</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s3.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-2" title="solar panel satellite"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/s3.png" class="img-fluid figure-img" alt="solar panel satellite"></a></p>
<figcaption>solar panel satellite</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s11.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-3" title="pluto"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/s11.png" class="img-fluid figure-img" alt="pluto"></a></p>
<figcaption>pluto</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s10.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-4" title="spaceship flying down the sidewalk"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/s10.png" class="img-fluid figure-img" alt="spaceship flying down the sidewalk"></a></p>
<figcaption>spaceship flying down the sidewalk</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s7.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-5" title="Hydraulic dam fairytale"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/s7.png" class="img-fluid figure-img" alt="Hydraulic dam fairytale"></a></p>
<figcaption>Hydraulic dam fairytale</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s2.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-6" title="the storm rolled in"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/s2.png" class="img-fluid figure-img" alt="the storm rolled in"></a></p>
<figcaption>the storm rolled in</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s8.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-7" title="I believe in a thing called love"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/s8.png" class="img-fluid figure-img" alt="I believe in a thing called love"></a></p>
<figcaption>I believe in a thing called love</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/placeholder.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-8" title="Placeholder"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/placeholder.png" class="img-fluid figure-img" alt="Placeholder"></a></p>
<figcaption>Placeholder</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/spacecat.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-9" title="Spacecat"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/spacecat.png" class="img-fluid figure-img" alt="Spacecat"></a></p>
<figcaption>Spacecat</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/party around a bonfire.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-10" title="party around a bonfire"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/party around a bonfire.png" class="img-fluid figure-img" alt="party around a bonfire"></a></p>
<figcaption>party around a bonfire</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/fireflies.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-11" title="fireflies"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/fireflies.png" class="img-fluid figure-img" alt="fireflies"></a></p>
<figcaption>fireflies</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/thunderstorm over galveston.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-12" title="thunderstorm over galveston"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/thunderstorm over galveston.png" class="img-fluid figure-img" alt="thunderstorm over galveston"></a></p>
<figcaption>thunderstorm over galveston</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/woodland creatures having a tea party.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-13" title="woodland creatures having a tea party"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/woodland creatures having a tea party.png" class="img-fluid figure-img" alt="woodland creatures having a tea party"></a></p>
<figcaption>woodland creatures having a tea party</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/pacific rim.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-14" title="Pacific Rim"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/pacific rim.png" class="img-fluid figure-img" alt="Pacific Rim"></a></p>
<figcaption>Pacific Rim</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/mind_the_gap.png" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-15" title="Mind the Gap"><img src="https://questionable.quarto.pub/blog/posts/img/starryai/mind_the_gap.png" class="img-fluid figure-img" alt="Mind the Gap"></a></p>
<figcaption>Mind the Gap</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Images in : img/nightcafe</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="3">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/robotic owl in space.JPG" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-16" title="Robotic owl in space"><img src="https://questionable.quarto.pub/blog/posts/img/nightcafe/robotic owl in space.JPG" class="img-fluid figure-img" alt="Robotic owl in space"></a></p>
<figcaption>Robotic owl in space</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/The monster from alien on a date.JPG" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-17" title="The monster from alien on a date"><img src="https://questionable.quarto.pub/blog/posts/img/nightcafe/The monster from alien on a date.JPG" class="img-fluid figure-img" alt="The monster from alien on a date"></a></p>
<figcaption>The monster from alien on a date</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/selfie.JPG" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-18" title="selfie"><img src="https://questionable.quarto.pub/blog/posts/img/nightcafe/selfie.JPG" class="img-fluid figure-img" alt="selfie"></a></p>
<figcaption>selfie</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/brain on fire.JPG" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-19" title="brain on fire"><img src="https://questionable.quarto.pub/blog/posts/img/nightcafe/brain on fire.JPG" class="img-fluid figure-img" alt="brain on fire"></a></p>
<figcaption>brain on fire</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/cyborg bartender.JPG" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-20" title="cyborg bartender"><img src="https://questionable.quarto.pub/blog/posts/img/nightcafe/cyborg bartender.JPG" class="img-fluid figure-img" alt="cyborg bartender"></a></p>
<figcaption>cyborg bartender</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/ammonite seashell on the beach being worshipped by monsters.JPG" class="lightbox" data-gallery="my-gallery" data-glightbox="description: .lightbox-desc-21" title="ammonite seashell on the beach being worshipped by monsters"><img src="https://questionable.quarto.pub/blog/posts/img/nightcafe/ammonite seashell on the beach being worshipped by monsters.JPG" class="img-fluid figure-img" alt="ammonite seashell on the beach being worshipped by monsters"></a></p>
<figcaption>ammonite seashell on the beach being worshipped by monsters</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Tips on dealing with displaying images in a rendered quarto document: <a href="https://quarto.org/docs/authoring/figures.html#figure-panels" class="uri">https://quarto.org/docs/authoring/figures.html#figure-panels</a></p>



</section>

 ]]></description>
  <category>art</category>
  <guid>https://questionable.quarto.pub/blog/posts/ai_art.html</guid>
  <pubDate>Wed, 03 Aug 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/starryai/placeholder.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>A little data goes a long way</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/lists/data.html</link>
  <description><![CDATA[ 





<p>A little data goes a long way… here are some examples that I think illustrte this in a particularly fascinating way (at least to me).</p>
<section id="fighting-the-gender-pay-gap-one-twitter-bot-at-a-time" class="level2">
<h2 class="anchored" data-anchor-id="fighting-the-gender-pay-gap-one-twitter-bot-at-a-time">Fighting the gender pay gap one twitter bot at a time</h2>
<p><a href="https://www.washingtonpost.com/lifestyle/2022/03/08/twitter-pay-gap-bot-international-womens-day/">Companies tweeted for International Women’s Day. Then this account called out their pay gaps.</a></p>
<p>Check out <a href="https://twitter.com/PayGapApp">the bot</a> for yourself.</p>
</section>
<section id="for-better-science" class="level2">
<h2 class="anchored" data-anchor-id="for-better-science">For Better Science</h2>
</section>
<section id="for-better-science-1" class="level2">
<h2 class="anchored" data-anchor-id="for-better-science-1"><a href="https://forbetterscience.com/"><img src="https://questionable.quarto.pub/blog/lists/img/fbs.jpg" class="img-fluid" alt="For Better Science"></a></h2>
<p>The rabbit hole of learning about how bad science is uncovered and recalled started with:</p>
<ul>
<li><p><a href="https://forbetterscience.com/2022/07/27/silvain-lesne-is-a-failed-scientist/">Sylvain Lesné is a failed scientist</a></p></li>
<li><p><a href="https://forbetterscience.com/2021/12/15/cassava-fraud-and-alzheimers-capitalism/">Cassava fraud and Alzheimer’s capitalism</a></p></li>
</ul>
</section>
<section id="researchers-uncover-the-use-of-coal-ash-for-playground-materials-in-small-town" class="level2">
<h2 class="anchored" data-anchor-id="researchers-uncover-the-use-of-coal-ash-for-playground-materials-in-small-town">Researchers uncover the use of coal ash for playground materials in small town</h2>
<p>A recent story about coal ash that was used in a playground and the work the local newspaper and the University (Duke) is doing to figure out the path forward:</p>
<ul>
<li><a href="https://www.knoxnews.com/story/news/local/tennessee/tvacoalash/2020/05/17/duke-testing-shows-kingston-coal-ash-uranium-triple-report-levels/5035210002/" class="uri">https://www.knoxnews.com/story/news/local/tennessee/tvacoalash/2020/05/17/duke-testing-shows-kingston-coal-ash-uranium-triple-report-levels/5035210002/</a></li>
<li><a href="https://www.knoxnews.com/story/news/crime/2021/08/09/claxton-playground-contaminated-radioactive-dust-still-open/5470284001/" class="uri">https://www.knoxnews.com/story/news/crime/2021/08/09/claxton-playground-contaminated-radioactive-dust-still-open/5470284001/</a></li>
<li><a href="https://www.knoxnews.com/story/news/2017/07/21/kingston-coal-ash-spill-workers-treated-expendables-lawsuit-sick-and-dying-contends/451537001/" class="uri">https://www.knoxnews.com/story/news/2017/07/21/kingston-coal-ash-spill-workers-treated-expendables-lawsuit-sick-and-dying-contends/451537001/</a></li>
</ul>
</section>
<section id="unprecedented-access-to-food-safety-and-consumer-recalls" class="level2">
<h2 class="anchored" data-anchor-id="unprecedented-access-to-food-safety-and-consumer-recalls">Unprecedented access to food safety and consumer recalls</h2>
<ul>
<li><a href="https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts">Food safety</a></li>
<li><a href="https://www.cpsc.gov/Recalls">Consumer products</a></li>
</ul>


</section>

 ]]></description>
  <category>datascience</category>
  <category>opinions</category>
  <guid>https://questionable.quarto.pub/blog/lists/data.html</guid>
  <pubDate>Tue, 02 Aug 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/lists/img/fbs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>What is Quarto?</title>
  <link>https://questionable.quarto.pub/blog/posts/quarto.html</link>
  <description><![CDATA[ 





<p>The obligatory starting template with a couple links.</p>
<section id="quarto" class="level2">
<h2 class="anchored" data-anchor-id="quarto">Quarto</h2>
<p>It’s a whole new exciting world! And the default project has a lot of exciting files to explore.</p>
<p>I’m using:</p>
<ul>
<li><p>https://quarto.org/docs/websites/website-blog.html</p></li>
<li><p>https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html</p></li>
</ul>
</section>
<section id="example" class="level2">
<h2 class="anchored" data-anchor-id="example">Example</h2>
<p>Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <a href="https://quarto.org" class="uri">https://quarto.org</a>.</p>
</section>
<section id="running-code" class="level2">
<h2 class="anchored" data-anchor-id="running-code">Running Code</h2>
<p>When you click the <strong>Render</strong> button a document will be generated that includes both content and the output of embedded code. You can embed code like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
</div>
<p>You can add options to executable code like this</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4</code></pre>
</div>
</div>
<p>The <code>echo: false</code> option disables the printing of code (only output is displayed).</p>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/blog/posts/quarto.html</guid>
  <pubDate>Thu, 28 Jul 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/welcome.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Resin Dice</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/resin.html</link>
  <description><![CDATA[ 





<style>
table, th, td {
}

th, td {
  padding: 10px;
}
</style>
<section id="recent-dice-highlights" class="level2">
<h2 class="anchored" data-anchor-id="recent-dice-highlights">Recent dice highlights</h2>
<section id="flourescent-glitter-dice-set" class="level3">
<h3 class="anchored" data-anchor-id="flourescent-glitter-dice-set">Flourescent Glitter Dice Set</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20211226_172938496.jpg" class="img-fluid figure-img"></p>
<figcaption>Flourescent dice set (all glitter dice)</figcaption>
</figure>
</div>
<blockquote class="instagram-media blockquote" data-instgrm-captioned="" data-instgrm-permalink="https://www.instagram.com/tv/CYPDqkhI0Xb/?utm_source=ig_embed&amp;utm_campaign=loading" data-instgrm-version="14" style=" background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);">
<div style="padding:16px;">
<a href="https://www.instagram.com/tv/CYPDqkhI0Xb/?utm_source=ig_embed&amp;utm_campaign=loading" style=" background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;" target="_blank">
<div style=" display: flex; flex-direction: row; align-items: center;">
<div style="background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;">

</div>
<div style="display: flex; flex-direction: column; flex-grow: 1; justify-content: center;">
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;">

</div>
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;">

</div>
</div>
</div>
<div style="padding: 19% 0;">

</div>
<div style="display:block; height:50px; margin:0 auto 12px; width:50px;">
<svg width="50px" height="50px" viewbox="0 0 60 60" version="1.1" xmlns="https://www.w3.org/2000/svg" xlink="https://www.w3.org/1999/xlink">
<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-511.000000, -20.000000)" fill="#000000"><g><path d="M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631"></path></g></g></g>
</svg>
</div>
<div style="padding-top: 8px;">
<div style=" color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;">
View this post on Instagram
</div>
</div>
<div style="padding: 12.5% 0;">

</div>
<div style="display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;">
<div>
<div style="background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);">

</div>
<div style="background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;">

</div>
<div style="background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);">

</div>
</div>
<div style="margin-left: 8px;">
<div style=" background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;">

</div>
<div style=" width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)">

</div>
</div>
<div style="margin-left: auto;">
<div style=" width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);">

</div>
<div style=" background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);">

</div>
<div style=" width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);">

</div>
</div>
</div>
<div style="display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;">
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;">

</div>
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;">

</div>
</div>
</a>
<p style=" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;">
<a href="https://www.instagram.com/tv/CYPDqkhI0Xb/?utm_source=ig_embed&amp;utm_campaign=loading" style=" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;" target="_blank">A post shared by <span class="citation" data-cites="lisa.needs.to.make">@lisa.needs.to.make</span></a>
</p>
</div>
</blockquote>
<script async="" src="//www.instagram.com/embed.js"></script>
<!-- ::: {layout-nrow=1} -->
<!-- ![Fire glitter](img/resin/glitterdice_3.gif) -->
<!-- ![UV Flourescent and glitter filled giant D20](img/resin/glitterdice_2.gif) -->
<!-- ::: -->
</section>
<section id="royal-purple-dice-set" class="level3">
<h3 class="anchored" data-anchor-id="royal-purple-dice-set">Royal Purple Dice Set</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/resin/Dice_purple.jpg" class="img-fluid figure-img"></p>
<figcaption>Royal purple dice set with beautiful crystals due to cold temperatures</figcaption>
</figure>
</div>
</section>
<section id="fire-red-dice-set" class="level3">
<h3 class="anchored" data-anchor-id="fire-red-dice-set">Fire Red Dice Set</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/img/resin/Dice_red.jpg" class="img-fluid figure-img"></p>
<figcaption>Fire red dice set, with some glitter dice!</figcaption>
</figure>
</div>
<!-- ![Fire dice set](img/resin/PXL_20210214_233000132.MP.jpg) -->
<!-- ::: {layout-nrow=1} -->
<!-- ![Flourescent dice set (all glitter dice)](img/resin/PXL_20211226_172938496.jpg) -->
<!-- ![Royal gold and purple dice set](img/resin/PXL_20211224_033628654.jpg) -->
<!-- ::: -->
</section>
</section>
<section id="experiments" class="level2">
<h2 class="anchored" data-anchor-id="experiments">Experiments</h2>
<section id="silicone-mold" class="level3">
<h3 class="anchored" data-anchor-id="silicone-mold">Silicone Mold</h3>
<table style="width: 100%">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201005_031026679.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>The basics I’ve gathered for learning how to make molds are:</p>
<ul>
<li>Smooth-On OOMOO</li>
<li>Nitrile Gloves</li>
<li>Small hand torch (originally meant for creme brulee)</li>
<li>A Safety Pin</li>
<li>Plasticine Clay</li>
<li>Various small disposable cups, disposable plastic fork, measuring cup</li>
<li>Handful of my least favorite dice</li>
</ul>
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201005_013447645.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>Going to the crafts store the whole time I was thinking “this is going to go GREAT. How hard could it be? The videos are so calming, surely the whole process is straight up zen.”</p>
<p>WRONG.</p>
After learning how difficult it is to attach a pin into a D6 (I would describe it more as teetering perilously rather than actually mounted) we got to move onto lessons into practically what pot time is. While on thebox it may say pot time of 30 minutes in practice I had less than 20 minutes to get the silicone into the mold before it was hardening to the point of not flowing smoothly.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201005_015535872.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Also had complete failure of the attempt at a vacuum chamber using my hand vaccuum, a small bell jar, and the valve on one of those clothes bags that let you vacuum the air out for better storage. No bubbles were successfully pulled out using this method, whether due to lack of a seal between the bell jar and the valve or if just wasn’t a strong enough vacuum.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201005_022732163.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
The three mold attempts are sitting out to cure overnight before I’ll begin the process of removing the die and trying out adding resin. I’m doubtful any of these turned out but what a wonderful way to spend a couple hours!
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/4/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%;">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201005_161849020.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Try 2 of creating the silicone mold. I was able to use the lessons from last time and create a mold with the sprue large enough to get a good amount in there while still having it be small enough that hopefully polishing won’t be horrible.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201005_163835042.MP_2.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Interesting enough I think that the mixture is very sensitive to the quantities of each part. While I was very careful to match the volumes using my trusty 1/2 cup measuring spoon we can notice a distinct change in color. Despite this change in color it did successfully set and it doesn’t feel different and will do nicely as a mold.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201005_160755962.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
I’m a little concerned with my splits in the mold for removing the pieces. Hopefully it will seal up well enough that we won’t have the resin leaking out or really large obvious lines.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/5-6/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="pouring-the-resin" class="level3">
<h3 class="anchored" data-anchor-id="pouring-the-resin">Pouring the Resin</h3>
<table style="width: 100%" cellpadding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201007_004924418.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>The ingredients for pouring the resin:</p>
<ul>
<li>Dried flowers</li>
<li>Food coloring</li>
<li>Mica powders</li>
<li>EasyCast resin</li>
<li>Dixie cups, pipettes, nitrile glove, facemask (not pictured)</li>
</ul>
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201008_054415456.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>This batch I decided to focus on blues.</p>
<p>Recipe:</p>
<ul>
<li>2 drops blue food coloring</li>
<li>For 2 of the dice added the green mica powder</li>
</ul>
Since I layered it in with pure blue on bottom and the blue + mica powder on top it really developed a beautiful layering effect.
</td>
</tr><tr>
</tr><tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/6/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%" cellpadding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201009_010445950.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>Recipe:</p>
<ul>
<li>1 drop ‘kiwi’ food coloring</li>
<li>Half of a handle full of green metallic mica powder</li>
<li>Blue flower</li>
</ul>
Thoroughly mix equal parts of resin for 2 minutes, transfer to second container and add coloring. Mix for an additional minute and use pipettes (two pipette method where one can fill while you use the other one) to fill each mold. Gently insert a flower once 3/4 full. Swish the containers by rotating to encourage air bubbles to exit from difficult places in the mold.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201009_010433085.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Wow this just turned out BEAUTIFUL.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/7/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201010_030648486.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Same recipe as before, still looks beautiful and we now have a matching set of 6!
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/8/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="polishing" class="level3">
<h3 class="anchored" data-anchor-id="polishing">Polishing</h3>
<table style="width: 100%">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201008_180158037.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
I’ve gathered my polishing components: namely various grits of sandpaper and some car automotive buff.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201008_053345606.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>First step is trimming off the sprue. This was done using a pair of shears (I used wirecutters). The ends come off pretty explosively (think nail trimming but times a million) so definitely be careful which direction you are pointing the die and the sprue.</p>
All three have some kind of bubble where resin wasn’t able to really fill the mold. Maybe doing a “swish” after filling will help next time for preventing this?
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201008_054320983.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Here we have the before polishing with all the imperfections and remainder of the sprue.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201008_180436917.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>And here is our after with all the edges buffed out. Looking better, right? I think we can do better though because I did notice that the sides that came out looking good and shiny after being buffedstarted looking cloudy.</p>
Ideas for next time are to spend more time polishing on the finest grit. Maybe that will help get it super shiny? And spend longer polishing. It’s about time for a netflix marathon anyway.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/8/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%" border-spacing="5" border-padding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201009_010423494.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Very happy to report success with the “swish”. Only 1 out of the three dice has a bubble in the corner disrupting the pattern (and this one is the hardest mold, with the highest point being higher than where the sprue intersects).
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/9/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="glitter-dice" class="level3">
<h3 class="anchored" data-anchor-id="glitter-dice">Glitter Dice</h3>
<hr>
<table style="width: 100%" border-spacing="5" border-padding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/blog/posts/img/resin/Dice_glitter_balls.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
I’ve been playing with making glitterdice lately. Glitterdice are where there is a sphere of liquid and glitter with a cap (UV curable resin) in the center of the dice (think snow globe). It’s hard to capture on camera but creates some really striking and fun to roll dice.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
4/3/2021
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="rolling-the-dice" class="level3">
<h3 class="anchored" data-anchor-id="rolling-the-dice">Rolling the Dice</h3>
<p>Now that our unique dice have been cured, painted, and polished it was time to put them to the test. Sure they look pretty (minus the occasional bubble and polish mark) but can they ROLL?</p>
<p>Here, I am proud to present to you, are our candidates for the roll off!</p>
<p><img src="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201010_033639772.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="center"></p>
<p>Each die was rolled 50 times to give some statistical significance to the results. Ideally we would have a hundred rolls or more per die (1,000 would be a really great number) but I decided to balance statistics with the chances of developing arthritis.</p>
<p>In addition to rolling each of our manufactured dice 50 times a professional metal die was rolled 50 times to give a reference for our measurements.</p>
<p>The conclusion:<br>
Well. Looks like my metal dice is weighted (both literally but also rolls 6 much more often). The resin dice performed better than I expected. I was expected to see the dice with remnants of a bubble or bumps to really have a very significant impact, but honestly they look comparable to the metal die.</p>
<p>Our results:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"readxl"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#library(rjags)</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">rolls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./img/resin/Dice_rolls.xlsx"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">rolls_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rolls <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-11"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dice"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RollValue"</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">rolls_summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rolls_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Dice, RollValue) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb1-16"></span>
<span id="cb1-17">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rolls_summary, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>RollValue, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>Count, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Dice )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_stack</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Dice) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-20"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>)</span>
<span id="cb1-21"></span>
<span id="cb1-22">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/resin_files/figure-html/cars-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rolls_summary) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>Dice, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>Count, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> RollValue ), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_stack</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/resin_files/figure-html/cars-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p style="color:grey; font-style:italic;" align="right">
10/10/2020
</p>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p>Here are some of the resources that helped me on my journey down this exciting path (in no particular order):</p>
<ul>
<li><a href="https://www.evewynn.com/moldmaking" class="uri">https://www.evewynn.com/moldmaking</a></li>
<li><a href="http://www.hanleybrady.com/making-dice-part-1-molds/" class="uri">http://www.hanleybrady.com/making-dice-part-1-molds/</a></li>
<li><a href="https://www.instructables.com/Custom-Dice/" class="uri">https://www.instructables.com/Custom-Dice/</a></li>
<li><a href="https://www.thingiverse.com/thing:3795542" class="uri">https://www.thingiverse.com/thing:3795542</a></li>
<li><a href="https://www.youtube.com/watch?v=iRDte2j54F0" class="uri">https://www.youtube.com/watch?v=iRDte2j54F0</a></li>
<li><a href="https://www.reddit.com/r/dice/comments/8zemqn/looking_to_resin_cast_my_own_dice/" class="uri">https://www.reddit.com/r/dice/comments/8zemqn/looking_to_resin_cast_my_own_dice/</a></li>
<li><a href="https://www.youtube.com/watch?v=FQ1A7ZjTsx8" class="uri">https://www.youtube.com/watch?v=FQ1A7ZjTsx8</a></li>
<li><a href="https://rpubs.com/benjamin_chittick/59278" class="uri">https://rpubs.com/benjamin_chittick/59278</a></li>
<li><a href="https://rstudio-education.github.io/hopr/project-1-weighted-dice.html" class="uri">https://rstudio-education.github.io/hopr/project-1-weighted-dice.html</a></li>
<li><a href="http://ditraglia.com/Econ103Public/Rtutorials/Rtutorial4.html" class="uri">http://ditraglia.com/Econ103Public/Rtutorials/Rtutorial4.html</a></li>
<li><a href="https://dk81.github.io/dkmathstats_site/rvisual-bargraphs.html" class="uri">https://dk81.github.io/dkmathstats_site/rvisual-bargraphs.html</a></li>
<li><a href="https://cran.r-project.org/web/packages/tidydice/vignettes/tidydice.html" class="uri">https://cran.r-project.org/web/packages/tidydice/vignettes/tidydice.html</a></li>
<li><a href="https://quarto.org/docs/authoring/figures.html#figure-panels" class="uri">https://quarto.org/docs/authoring/figures.html#figure-panels</a></li>
</ul>


</section>

 ]]></description>
  <category>datascience</category>
  <category>dice</category>
  <category>games</category>
  <guid>https://questionable.quarto.pub/blog/posts/resin.html</guid>
  <pubDate>Sun, 04 Apr 2021 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/resin/PXL_20201008_180539533.MP.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>BATTLEBOTS 2021</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/posts/battlebots 2021.html</link>
  <description><![CDATA[ 





<section id="what-is-battlebots" class="level2">
<h2 class="anchored" data-anchor-id="what-is-battlebots">What is Battlebots?</h2>
<p>BattleBots is a robotic combat TV show. It is an amazing community and clearly a hobby of love by the people that join the show. Robots weigh 250lbs, 500 lbs in special circumstances, and there are strict rules around what is and isn’t allowed for weapons. The show spends time both on the 3 minute match and behind the scenes with interviews with the builders, footage of repairs, and last minute modifications as teams compete for the ultimate trophy.</p>
<section id="about-battlebots" class="level3">
<h3 class="anchored" data-anchor-id="about-battlebots">About Battlebots</h3>
<ul>
<li><a href="https://battlebots.com/">Official BattleBots page</a></li>
<li><a href="http://reddit.com/r/battlebots">Reddit Battlebots</a></li>
<li><a href="https://www.reddit.com/r/battlebots/comments/grst5y/the_battlebots_season_5_rumor_mill/">Season 5 Rumor Mill at Reddit/r/Battlebots</a></li>
<li><a href="https://docs.google.com/document/d/1tXSzwzEM2jNGjZ2KYn00ldeHvEru0y3_zlNkVw-F9iI/edit#heading=h.1wa7o4efnhdl">Combat Robot Resource Guide by Robert Cowan</a></li>
</ul>
</section>
<section id="best-fight-videos" class="level3">
<h3 class="anchored" data-anchor-id="best-fight-videos">Best Fight Videos</h3>
<p>All rights are owned by Battlebots on ABC</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Minotaur vs.&nbsp;Bombshell</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Yeti vs.&nbsp;Lock Jaw</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Tombstone vs.&nbsp;Bronco</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false">Hypershock + Rake</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-5" aria-controls="tabset-1-5" aria-selected="false">Death Roll vs.&nbsp;End Game</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-6" aria-controls="tabset-1-6" aria-selected="false">HUGE vs.&nbsp;Bronco</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-7-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-7" aria-controls="tabset-1-7" aria-selected="false">Witch Doctor Vs. actual household items</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/89LYj3d1jCw" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/AqM8zxjfV1M" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/X2vSMMXmGdg" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/UNk5-3fGNqI" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-5" class="tab-pane" aria-labelledby="tabset-1-5-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/RrA1XCtUs8I" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-6" class="tab-pane" aria-labelledby="tabset-1-6-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/jJRskcggTnI" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-7" class="tab-pane" aria-labelledby="tabset-1-7-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/DZLs52pRQis" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
</div>
</div>
</section>
</section>
<section id="battlebots-analysis" class="level2">
<h2 class="anchored" data-anchor-id="battlebots-analysis">Battlebots Analysis</h2>
<p>Below is my attempt at diving deep into the world of Battlebots to understand what makes some bots more successful than others. All data is from the Battlebots official website, scraped from the web using the Rvest R package developed by Hadley Wickam.</p>
<section id="messy-web-scraping-to-get-data" class="level3">
<h3 class="anchored" data-anchor-id="messy-web-scraping-to-get-data">Messy web scraping to get data</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rvest)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#devtools::install_github("lchiffon/wordcloud2")</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(wordcloud2)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RColorBrewer)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggmap)</span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(maps)</span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnaturalearth"</span>)</span>
<span id="cb1-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnaturalearthdata"</span>)</span>
<span id="cb1-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(htmlwidgets)</span>
<span id="cb1-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(webshot)</span>
<span id="cb1-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidygeocoder)</span>
<span id="cb1-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rgeos)</span>
<span id="cb1-21"></span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set URL list</span></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#urls = c("https://battlebots.com/robot/yeti-2019/")</span></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#url &lt;- "https://battlebots.com/robot/yeti-2019/"</span></span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if data already exists, if not download it</span></span>
<span id="cb1-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsinfo.csv"</span>)){</span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading saved files"</span>)</span>
<span id="cb1-30">  </span>
<span id="cb1-31">  battlebotsinfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsinfo.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-32">  battlebotsmatch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsmatch.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-33">  battlebotsstat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsstat.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-34">  </span>
<span id="cb1-35">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Generating battlebots data files"</span>)</span>
<span id="cb1-37">  </span>
<span id="cb1-38">  urls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsurls.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-39">  </span>
<span id="cb1-40">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>( i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(urls) ){</span>
<span id="cb1-41">    url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> urls[i,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-42">    </span>
<span id="cb1-43">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reading "</span>, i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" of "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(urls), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": "</span>, url))</span>
<span id="cb1-44">    </span>
<span id="cb1-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read info and arrange into table </span></span>
<span id="cb1-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (note that this isn't actually a table in the html source so we had to jump through some hoops to make that happen)</span></span>
<span id="cb1-47">    info <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(url) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-48">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_nodes</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".info-grid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-49">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_text</span>()</span>
<span id="cb1-50">    </span>
<span id="cb1-51">    info_df_tmp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(info, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {</span>
<span id="cb1-52">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">n"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-53">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowid_to_column</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>)</span>
<span id="cb1-54">    })</span>
<span id="cb1-55">    </span>
<span id="cb1-56">    info_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(info_df_tmp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"page"</span>) </span>
<span id="cb1-57">    </span>
<span id="cb1-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Trim off leading whitespace</span></span>
<span id="cb1-59">    info_trim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(info_df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.max</span>(text <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Robot:"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-60">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(text)</span>
<span id="cb1-61">    </span>
<span id="cb1-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split into multiple rows , remediate any cases where Values are part of the Record</span></span>
<span id="cb1-63">    info_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> info_trim <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-64">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_trim</span>(text)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-65">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Record =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), text, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-66">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(Record, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">into =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Record"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-67">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(Record) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-68">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Value), </span>
<span id="cb1-69">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, text), Value )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-70">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Record, Value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-71">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-72">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s*$"</span>, Value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-73">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-74">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Record) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-75">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(Value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-76">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-77">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> Record, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> Value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-78">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(as.character)</span>
<span id="cb1-79">    </span>
<span id="cb1-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Robot name </span></span>
<span id="cb1-81">    robot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> info_split<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Robot</span>
<span id="cb1-82">    </span>
<span id="cb1-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read both history tables and wrangle into table form</span></span>
<span id="cb1-84">    history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(url) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-85">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_nodes</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".igsv-table"</span>) </span>
<span id="cb1-86">    </span>
<span id="cb1-87">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb1-88">    stat_history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> history[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-89">    stat_history_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stat_history[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-90">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Robot =</span> robot) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-91">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(as.character)</span>
<span id="cb1-92">    }</span>
<span id="cb1-93">    </span>
<span id="cb1-94">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb1-95">      match_history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> history[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-96">      match_history_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> match_history[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-97">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Robot =</span> robot) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-98">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(as.character)</span>
<span id="cb1-99">    }</span>
<span id="cb1-100">    </span>
<span id="cb1-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compile</span></span>
<span id="cb1-102">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb1-103">      battlebotsinfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> info_split</span>
<span id="cb1-104">      battlebotsmatch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> match_history_df</span>
<span id="cb1-105">      battlebotsstat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> stat_history_df</span>
<span id="cb1-106">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-107">      battlebotsinfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(battlebotsinfo, info_split)</span>
<span id="cb1-108">      </span>
<span id="cb1-109">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb1-110">        battlebotsstat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(battlebotsstat, stat_history_df)</span>
<span id="cb1-111">      }</span>
<span id="cb1-112">      </span>
<span id="cb1-113">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb1-114">        battlebotsmatch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(battlebotsmatch, match_history_df)</span>
<span id="cb1-115">      }</span>
<span id="cb1-116">      </span>
<span id="cb1-117">    }</span>
<span id="cb1-118">    </span>
<span id="cb1-119">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># End for loop </span></span>
<span id="cb1-120">  </span>
<span id="cb1-121">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save files to make it easier next time</span></span>
<span id="cb1-122">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(battlebotsinfo, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsinfo.csv"</span>)</span>
<span id="cb1-123">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(battlebotsmatch, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsmatch.csv"</span>)</span>
<span id="cb1-124">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(battlebotsstat, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsstat.csv"</span>)</span>
<span id="cb1-125"></span>
<span id="cb1-126">}</span>
<span id="cb1-127"></span>
<span id="cb1-128"></span>
<span id="cb1-129"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># References:</span></span>
<span id="cb1-130"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://community.rstudio.com/t/convert-character-string-into-table/9158</span></span>
<span id="cb1-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://stackoverflow.com/questions/42419765/convert-one-column-into-a-new-column-every-5-rows-a-numeric-interval</span></span>
<span id="cb1-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  - [Scraping in R rvest](https://www.dataquest.io/blog/web-scraping-in-r-rvest/)</span></span>
<span id="cb1-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  - [Tidy Web Scraping in R Tutorial and Resources](https://towardsdatascience.com/tidy-web-scraping-in-r-tutorial-and-resources-ac9f72b4fe47)</span></span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Frequency of Battlebots Weapon Types</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># type_frequency &lt;- battlebotsinfo %&gt;%</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   group_by(Type) %&gt;%</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   summarize(freq = n()) %&gt;%</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   rename("word" = "Type")</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   </span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># my_wordcloud1 &lt;- wordcloud2(data=type_frequency, size = 0.5, shape = 'pentagon', color='random-dark')</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># my_wordcloud1</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#saveWidget(my_wordcloud, "tmp.html", selfcontained = F)</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#webshot("tmp.html", "./images/wc1.png", delay = 5)</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#wordcloud2(demoFreq, color = "random-light", backgroundColor = "grey")</span></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://towardsdatascience.com/create-a-word-cloud-with-r-bde3e7422e8a</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://cran.r-project.org/web/packages/wordcloud2/vignettes/wordcloud.html#lettercloud-function</span></span></code></pre></div>
</details>
</div>
</section>
<section id="frequency-of-builder-day-jobs" class="level3">
<h3 class="anchored" data-anchor-id="frequency-of-builder-day-jobs">Frequency of Builder Day Jobs</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">job_frequency <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> battlebotsinfo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Job) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"word"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job"</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6">job_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>word <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">iconv</span>(job_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8">my_wordcloud2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wordcloud2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>job_frequency, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random-dark'</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10">my_wordcloud2</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="wordcloud2 html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-e593a4b782d93e8b12b8" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-e593a4b782d93e8b12b8">{"x":{"word":["3D Wizard","Architectural Draftsman","Attorney in the Intellectual Property Litigation Practice Group at Alston & Bird","Bugglebots Producer and host","Builder","Builder and driver","Builder/Driver","CEO","CTO at Double Robotics","Circus Clown","Creative Engineer","Design Specialist at the Jacobs Institute for Design Innovation, UC Berkeley","Design, Build, Manage, Drive!","Design, Fabricator and Pilot","Designer and machinist","Designer, Builder, Driver","Designer, Builder, and Driver","Designer, Driver","Designer, builder","Designer, builder and driver","Designer/builder","Driver, Organizer","Driver, electrical, pneumatics, welding, design, and social media","Driver, minister of disinformation",null,"Electro-Mechanical Technician","Embedded Software Engineer","Engineer","Engineer at Westar LLC","Engineering Apprentice","Engineering student","Entrepreneur","Execute the awesomeness.","Fabricator, Driver","Founder, CEO of Domovi","Freelance mechanical design engineer","Fuzzy lives on a ranch in Texas where he raises cows, modifies Jeeps, and builds fighting robots.","Hardware Engineer","Hydrographic Surveyor","Independent Consultant","Inventor","Inventor, Maker, Student, Dentist","Jeans Model","Lead Mechanical Engineer at Moog Space and Defense.","Lecturer","M.E. Student","Mech Engineering Student","Mechanical Design Engineer","Mechanical Designer / Robotics Engineer","Mechanical Engineer","Mechanical Specialist / Mechanical Engineer","Medical Device R&D Engineer","Medical device engineer","Modelmaker","Navy Diver","Owner, Operator","President of Bot Bash Parties","Principal Mechanical Engineer at frog","Process Engineer","Professor of Engineering, Mt. San Antonio College","Professor of Mechanical Engineering at PUC-Rio (Pontifical Catholic University of Rio de Janeiro)","QA Test Analyst (Video Games)","R&D Engineer","Research Engineer","Retired Computer Scientist","Retired Electrical Engineer","Robot Design, coordination of build, design, fabrication, funding","Robot Doctor","Robotics Engineer","Robotics Engineer. Sean designs military EoD robots for Harris Corporation. These robots are used in theater to save human life by identifying, neutralizing, and removing IEDs.","Rocket Scientist (Engineer)","Senior Engineering Technician at Meggitt Airframe Systems","Software Engineer","Software Engineer and Mechatronics Engineer","Student","Tank mechanic","Teacher","Technology Sales and Marketing","Undergraduate Student","User Experience Researcher","WaterJet Coordinator","Weapons/Electronics"],"freq":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1],"fontFamily":"Segoe UI","fontWeight":"bold","color":"random-dark","minSize":0,"weightFactor":9,"backgroundColor":"white","gridSize":0,"minRotation":-0.7853981633974483,"maxRotation":0.7853981633974483,"shuffle":true,"rotateRatio":0.4,"shape":"circle","ellipticity":0.65,"figBase64":null,"hover":null},"evals":[],"jsHooks":{"render":[{"code":"function(el,x){\n                        console.log(123);\n                        if(!iii){\n                          window.location.reload();\n                          iii = False;\n\n                        }\n  }","data":null}]}}</script>
</div>
</div>
</section>
<section id="map-of-builder-locations" class="level3">
<h3 class="anchored" data-anchor-id="map-of-builder-locations">Map of Builder Locations</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Load location data</span></span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotslocation.csv"</span>)){</span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading saved files"</span>)</span>
<span id="cb4-4">  </span>
<span id="cb4-5">  bbmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotslocation.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb4-6">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Generating battlebots location files"</span>)</span>
<span id="cb4-8">  </span>
<span id="cb4-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Set up the API key for google </span></span>
<span id="cb4-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#This now costs money</span></span>
<span id="cb4-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Go to: https://cloud.google.com/maps-platform/</span></span>
<span id="cb4-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#register_google(key = "", write = TRUE)</span></span>
<span id="cb4-13">  </span>
<span id="cb4-14">  bbmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> battlebotsinfo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Robot, Hometown) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Team =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Team"</span>, Robot, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", from"</span>, Hometown)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_geocode</span>(Hometown)</span>
<span id="cb4-18">  </span>
<span id="cb4-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(bbmap, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotslocation.csv"</span>)</span>
<span id="cb4-20">}</span>
<span id="cb4-21">  </span>
<span id="cb4-22">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ne_countries</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnclass =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>)</span>
<span id="cb4-23"></span>
<span id="cb4-24">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> world) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Longitude"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Latitude"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>bbmap, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span>Team), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ggrepel::geom_label_repel(data = bbmap,</span></span>
<span id="cb4-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            aes(x = lon, y = lat, label = Robot),</span></span>
<span id="cb4-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            size = 1.5, alpha = 0.8,</span></span>
<span id="cb4-31">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            label.r = unit(0.5, "lines"), label.size = 0.25,</span></span>
<span id="cb4-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            segment.color = "red", segment.size = 1,</span></span>
<span id="cb4-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            seed = 1002) +</span></span>
<span id="cb4-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#geom_text_repel(data=bbmap,aes(x = lon, y = lat, label = Robot),box.padding = 0.4,point.padding = 0.25,size=4,show.legend=FALSE)+</span></span>
<span id="cb4-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Battlebots Hometowns World map"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(bbmap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Robot)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" teams)"</span>))</span>
<span id="cb4-36"></span>
<span id="cb4-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#pp &lt;- ggplotly(p, tooltip="text")</span></span>
<span id="cb4-38"></span>
<span id="cb4-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#assign("pp", plotly::ggplotly(p, tooltip="text"), envir=parent.frame())</span></span>
<span id="cb4-40"></span>
<span id="cb4-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#pp</span></span>
<span id="cb4-42"></span>
<span id="cb4-43">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/battlebots-2021_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#htmlwidgets::saveWidget( plotly::ggplotly(p, tooltip="text"), "tmp3.html")</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print( htmltools::tags$iframe(src="temp.html", width=640, height=480) )</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;iframe src="temp.html" width='1000px' height='800px'&gt;&lt;/iframe&gt; </span></span>
<span id="cb5-6"></span>
<span id="cb5-7">  </span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/29037851/how-do-i-plot-us-cities-using-ggplot</span></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/22752009/plot-on-ggmap-by-using-city-and-state</span></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://towardsdatascience.com/plotting-spatial-data-in-r-a38a405a07f1</span></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://cran.r-project.org/web/packages/usmap/vignettes/advanced-mapping.html </span></span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://www.r-graph-gallery.com/330-bubble-map-with-ggplot2.html</span></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://ggplot2-book.org/maps.html</span></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#http://yluo86.github.io/rmaps</span></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://www.r-spatial.org/r/2018/10/25/ggplot2-sf.html</span></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://www.statsandr.com/blog/world-map-of-visited-countries-in-r/</span></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://cran.r-project.org/web/packages/tidygeocoder/vignettes/tidygeocoder.html</span></span>
<span id="cb5-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://towardsdatascience.com/reverse-geocoding-in-r-f7fe4b908355</span></span>
<span id="cb5-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/13905098/how-to-get-the-longitude-and-latitude-coordinates-from-a-city-name-and-country-i</span></span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/59144842/why-does-ggplotly-does-not-work-in-rmarkdown-the-same-way-ggplot-does</span></span></code></pre></div>
</details>
</div>
<p><br></p>
</section>
<section id="win-frequency-by-robot-type" class="level3">
<h3 class="anchored" data-anchor-id="win-frequency-by-robot-type">Win Frequency by Robot Type</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#TODO: Add plot showing frequency of type of robot </span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># type_frequency &lt;- battlebotsinfo %&gt;%</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   group_by(Type) %&gt;%</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   summarize(freq = n()) %&gt;%</span></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   rename("word" = "Type")</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">win_frequency_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(battlebotsinfo, battlebotsstat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Robot"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Stats, Career, Robot, Type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Stats <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total matches"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total wins"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mutate(Career = as.numeric(Stats)) %&gt;%</span></span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> Stats, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> Career) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>),</span>
<span id="cb6-15">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>))</span>
<span id="cb6-16"></span>
<span id="cb6-17">type_wins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> win_frequency_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wins =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>))</span>
<span id="cb6-20"></span>
<span id="cb6-21">robot_wins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> win_frequency_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CountType =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Robot, Type, CountType) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wins =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(CountType <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(wins)</span>
<span id="cb6-29"></span>
<span id="cb6-30"></span>
<span id="cb6-31"></span>
<span id="cb6-32">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(robot_wins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>Type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>wins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb6-33"></span>
<span id="cb6-34"></span>
<span id="cb6-35">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(robot_wins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Type, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>wins, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>wins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wins"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type"</span>)</span>
<span id="cb6-36">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/blog/posts/battlebots-2021_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p>Battlebots:</p>
<ul>
<li><a href="https://battlebots.com/">Official BattleBots page</a></li>
<li><a href="http://reddit.com/r/battlebots">Reddit Battlebots</a></li>
<li><a href="https://www.reddit.com/r/battlebots/comments/grst5y/the_battlebots_season_5_rumor_mill/">Season 5 Rumor Mill at Reddit/r/Battlebots</a></li>
<li><a href="https://docs.google.com/document/d/1tXSzwzEM2jNGjZ2KYn00ldeHvEru0y3_zlNkVw-F9iI/edit#heading=h.1wa7o4efnhdl">Combat Robot Resource Guide by Robert Cowan</a></li>
</ul>
<p>Resources for building a similar RMarkdown page:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/42631642/creating-dynamic-tabs-in-rmarkdown">Creating dynamic tabs in Rmarkdown</a></li>
<li><a href="https://cran.r-project.org/web/packages/stationery/vignettes/HTML_special_features.html">HTML Special Features: KU CRMDA Markdown</a></li>
<li>https://github.com/rstudio/rmarkdown/issues/1681</li>
<li><a href="https://stackoverflow.com/questions/58837184/r-2-column-layout-in-rmarkdown-with-tabset">R: 2 column layout in Rmarkdown with tabset</a></li>
<li><a href="https://www.dataquest.io/blog/web-scraping-in-r-rvest/">Scraping in R rvest</a></li>
<li><a href="https://towardsdatascience.com/tidy-web-scraping-in-r-tutorial-and-resources-ac9f72b4fe47">Tidy Web Scraping in R Tutorial and Resources</a></li>
</ul>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/blog/posts/battlebots 2021.html</guid>
  <pubDate>Mon, 04 Jan 2021 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/posts/img/bb/BB.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Technical writeups and musings</title>
  <link>https://questionable.quarto.pub/blog/posts-no-pictures.html</link>
  <description><![CDATA[ 





<p>Some random technical writeups for things I’ve found useful, all brought to you by Quarto’s blogging capability.</p>




<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">
<div class="quarto-post image-right" data-index="0" data-categories="code" data-listing-date-sort="1704956400000" data-listing-file-modified-sort="1713570028204" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="4" data-listing-word-count-sort="705">
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts-no-pictures/delta-lake-and-azure.html" class="no-external">Accessing data in Azure Data Lake (delta files)</a>
</h3>
<div class="listing-subtitle">
<a href="./posts-no-pictures/delta-lake-and-azure.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts-no-pictures/delta-lake-and-azure.html" class="no-external">
<div class="listing-date">
Jan 11, 2024
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
4 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="1" data-categories="code" data-listing-date-sort="1693288800000" data-listing-file-modified-sort="1713569333593" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="3" data-listing-word-count-sort="458">
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts-no-pictures/git-and-sagemaker.html" class="no-external">Problems with persistence when in the cloud</a>
</h3>
<div class="listing-subtitle">
<a href="./posts-no-pictures/git-and-sagemaker.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts-no-pictures/git-and-sagemaker.html" class="no-external">
<div class="listing-date">
Aug 29, 2023
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
3 min
</div>
</a>
</div>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div> ]]></description>
  <guid>https://questionable.quarto.pub/blog/posts-no-pictures.html</guid>
  <pubDate>Wed, 01 May 2024 16:56:38 GMT</pubDate>
</item>
<item>
  <title>Presentations</title>
  <link>https://questionable.quarto.pub/blog/presentations.html</link>
  <description><![CDATA[ 




<p>Check out some of the presentations I’ve made while working at Posit:</p>
<center>
<p><strong>2024</strong></p>
</center>
<div class="column-screen-inset">
<div class="mycards-container">
<div class="mycard">
<div class="angle-open">
<p>&gt;</p>
</div>
<div class="mycard-title">
<p>It’s dangerous to go alone - take this!</p>
</div>
<div class="mycard-description">
<p>Lisa’s best practices for pain-free data science</p>
</div>
<div class="mycard-link">
<p><br> <a href="https://questionable.quarto.pub/its-dangerous-to-go-alone-take-this/" target="_blank">Check out the slides</a> <a href="https://github.com/leesahanders/painfree_data_science_demo_and_presentation" target="_blank">Check out the repo</a></p>
</div>
</div>
</div>
</div>
<center>
<p><strong>2023 and 2022</strong></p>
</center>
<div class="column-screen-inset">
<div class="mycards-container">
<div class="mycard">
<div class="angle-open">
<p>&gt;</p>
</div>
<div class="mycard-title">
<p>Reporting in R with Posit Team</p>
</div>
<div class="mycard-description">
<p>Using the Posit Team set of products to create data science reports.</p>
</div>
<div class="mycard-link">
<p><a href="https://questionable.quarto.pub/reporting-in-r-with-posit-team/" target="_blank">Check out the slides</a></p>
</div>
</div>
<div class="mycard">
<div class="angle-open">
<p>&gt;</p>
</div>
<div class="mycard-title">
<p>Improving app performance</p>
</div>
<div class="mycard-description">
<p>Analyzing your R scripts for performance improvements using profvis, shinyloadtest, and shinytest2.</p>
</div>
<div class="mycard-link">
<p><a href="https://questionable.quarto.pub/improving-app-performance-with-profvis/" target="_blank">Check out the slides</a></p>
</div>
</div>
<div class="mycard">
<div class="angle-open">
<p>&gt;</p>
</div>
<div class="mycard-title">
<p>Reproduceable Workflows</p>
</div>
<div class="mycard-description">
<p>Creating reproduceable data science workflows.</p>
</div>
<div class="mycard-link">
<p><a href="https://questionable.quarto.pub/reproduceable-workflows/" target="_blank">Check out the slides</a></p>
</div>
</div>
</div>
</div>



 ]]></description>
  <guid>https://questionable.quarto.pub/blog/presentations.html</guid>
  <pubDate>Wed, 01 May 2024 16:56:38 GMT</pubDate>
</item>
</channel>
</rss>
