[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I’m a former product engineer with experience in biotech, semiconductor, and MEMS/BioMEMS manufacturing that stumbled into computational shenanigans in my journey of trying to make the most out of the data available to me. I was fortunate enough to set up a RStudio / Posit Connect server at a previous company and from then on was hooked. Luckily this is what I get to do for work now.\nIn my spare time I enjoy playing board games at the local game shop, building things, hot chocolate, and talking about anything SciFi.\nResume"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Index",
    "section": "",
    "text": "Grab a cup of coffee, I hope you enjoy the pages you find here."
  },
  {
    "objectID": "posts/Day-1.html",
    "href": "posts/Day-1.html",
    "title": "Day 1",
    "section": "",
    "text": "It’s a whole new exciting world! And the default project has a lot of exciting files to explore.\nI’m using:\n\nhttps://quarto.org/docs/websites/website-blog.html\nhttps://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html"
  },
  {
    "objectID": "posts/Day-1.html#example",
    "href": "posts/Day-1.html#example",
    "title": "Day 1",
    "section": "Example",
    "text": "Example\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "posts/Day-1.html#running-code",
    "href": "posts/Day-1.html#running-code",
    "title": "Day 1",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "posts/Day-2.html",
    "href": "posts/Day-2.html",
    "title": "Day 2",
    "section": "",
    "text": "I’m really interested in building a RSS reader in R/Quarto.\nWhat is RSS? It stands for “Really Simple Syndication” and is a web feed for content being added to websites in a standardized way.\nrss_feeds examples: - “https://appsilon.com/rss” - “https://blog.rstudio.com/index.xml” - “https://www.r-bloggers.com/feed/” - “http://www.hackaday.com/rss.xml”\nSo much code out there to refer to:\n\nhttps://stackoverflow.com/questions/51762965/getting-rss-feed-in-r-shiny-web-app\nhttps://community.rstudio.com/t/shinyfeed-shiny-contest-submission/104723\nhttps://quarto.org/docs/websites/website-blog.html\nhttps://stackoverflow.com/questions/27772079/how-to-consume-streaming-xml-rss-feeds-with-r\nhttps://www.cdata.com/kb/tech/rss-jdbc-r.rst\nhttps://www.r-bloggers.com/2021/11/rss-feeds-of-package-updates-in-r-universe/\nhttps://www.r-bloggers.com/2016/08/feeder-reading-rss-and-atom-feeds-from-r/\nhttps://rss.app/blog/how-to-add-auto-updated-news-feeds-to-your-website-6KP2RL\nhttps://www.lifewire.com/what-is-an-rss-feed-4684568\nhttps://medium.com/samsung-internet-dev/add-rss-feeds-to-your-website-to-keep-your-core-readers-engaged-3179dca9c91e\nhttps://www.feedforall.com/displaying-rss.htm\nhttps://rhodygarden.org/sitehelp-show-rss-feed-in-ie/\nhttps://medium.com/@spians/how-to-get-rss-feed-of-popular-websites-c5cb2af83d71\nhttps://www.r-bloggers.com/2019/12/creating-an-rss-feed-to-add-your-jekyll-github-pages-blog-to-r-bloggers/\nhttps://www.w3schools.com/xml/xml_rss.asp\nhttps://github.com/rstudio/distill/issues/33\nhttps://blog.ouseful.info/2017/06/28/hexjson-htmlwidget-for-r-part-1/\nhttps://www.r-bloggers.com/2011/04/how-to-build-a-dataset-in-r-using-an-rss-feed-or-web-page/\nhttps://github.com/noahhl/r-does-rss\nhttps://datawookie.github.io/feedeR/index.html\nhttps://quarto.org/docs/websites/website-listings-custom.html\nhttps://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto/\nhttps://www.r-bloggers.com/2022/07/how-to-set-up-quarto-with-docker-part-1-static-content/\n\nAlternatively a program like feedly could be used on a local device (not sure about integration with quarto)."
  },
  {
    "objectID": "posts/Day-3.html",
    "href": "posts/Day-3.html",
    "title": "Day 3",
    "section": "",
    "text": "Retracted science papers. Particularly with the engaging way the stories are told on For Better Science."
  },
  {
    "objectID": "posts/Day-3.html#for-better-science",
    "href": "posts/Day-3.html#for-better-science",
    "title": "Day 3",
    "section": "",
    "text": "The rabbit hole started with:\n\nSylvain Lesné is a failed scientist: https://forbetterscience.com/2022/07/27/silvain-lesne-is-a-failed-scientist/\nCassava fraud and Alzheimer’s capitalism: https://forbetterscience.com/2021/12/15/cassava-fraud-and-alzheimers-capitalism/"
  },
  {
    "objectID": "posts/Day-4.html",
    "href": "posts/Day-4.html",
    "title": "Day 4",
    "section": "",
    "text": "My first AI art generating app (5 free pieces of art per day): https://www.starryai.com/\nImages in : img/starryai/\n\nDoesn’t require log in (5 free pieces of art per day, however using incognito mode or edge counts as a separate user for 15 pieces of art per day): https://creator.nightcafe.studio/\nImages in : img/nightcafe\n     \nThere are a bunch more I’m looking forward to trying: https://www.unite.ai/10-best-ai-art-generators/#:~:text=Another%20one%20of%20the%20best,trained%20with%20millions%20of%20images\nTips on dealing with displaying images in a rendered document: https://rpubs.com/RatherBit/90926"
  },
  {
    "objectID": "posts/Day-5.html",
    "href": "posts/Day-5.html",
    "title": "Day 5",
    "section": "",
    "text": "A fun (and free game) where you are an AI exploring space trying to find the new home for the 1000 remaining survivors of the human race stored onboard.\nLink: https://philome.la/johnayliff/seedship/play/index.html"
  },
  {
    "objectID": "posts/Day-6.html",
    "href": "posts/Day-6.html",
    "title": "Day 6",
    "section": "",
    "text": "Link to the app: https://marwahaha.github.io/otomata/\n\nSome historic links:\n\nOriginally at (but now no longer works): https://earslap.com/page/otomata.html\nFrom the reddit post: https://www.reddit.com/r/otomata/comments/lrd7n4/otomata_lives_again_web_version/\nGithub: https://github.com/marwahaha/otomata\n\n\n\n\nreddit post"
  },
  {
    "objectID": "posts/Day-7.html",
    "href": "posts/Day-7.html",
    "title": "Day 7",
    "section": "",
    "text": "https://www.adafruit.com/product/5128\nFor a project example: https://learn.adafruit.com/adafruit-macropad-rp2040/circuitpython"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Recipes",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "battlebots.html",
    "href": "battlebots.html",
    "title": "BATTLEBOTS",
    "section": "",
    "text": "BattleBots is a robotic combat TV show. It is an amazing community and clearly a hobby of love by the people that join the show. Robots weigh 250lbs, 500 lbs in special circumstances, and there are strict rules around what is and isn’t allowed for weapons. The show spends time both on the 3 minute match and behind the scenes with interviews with the builders, footage of repairs, and last minute modifications as teams compete for the ultimate trophy.\n\n\n\nOfficial BattleBots page\nReddit Battlebots\nSeason 5 Rumor Mill at Reddit/r/Battlebots\nCombat Robot Resource Guide by Robert Cowan\n\n\n\n\nAll rights are owned by Battlebots on ABC\n\nMinotaur vs. BombshellYeti vs. Lock JawTombstone vs. BroncoHypershock + RakeDeath Roll vs. End GameHUGE vs. BroncoWitch Doctor Vs. actual household items"
  },
  {
    "objectID": "battlebots.html#what-is-battlebots",
    "href": "battlebots.html#what-is-battlebots",
    "title": "BATTLEBOTS",
    "section": "What is Battlebots?",
    "text": "What is Battlebots?\nBattleBots is a robotic combat TV show. It is an amazing community and clearly a hobby of love by the people that join the show. Robots weigh 250lbs, 500 lbs in special circumstances, and there are strict rules around what is and isn’t allowed for weapons. The show spends time both with the 3 minute match and behind the scenes with interviews with the builders, footage of repairs, last minute modifications.\n\nAbout Battlebots\n\nOfficial BattleBots page\nReddit Battlebots\nSeason 5 Rumor Mill at Reddit/r/Battlebots\nCombat Robot Resource Guide by Robert Cowan\n\n\n\n2019 Official Battlebots Teams\n2019 Battlebots teams\n\n<p>\nYour browser does not support iframes\n</p>\n\n\n\nBest Fight Videos\nAll rights are owned by Battlebots on ABC\n\nMinotaur vs. Bombshell\n\n\n\n\nYeti vs. Lock Jaw\n\n\n\n\nTombstone vs. Bronco\n\n\n\n\nHypershock + Rake\n\n\n\n\nDeath Roll vs. End Game\n\n\n\n\nHUGE vs. Bronco\n\n\n\n\nWitch Doctor Vs. actual household items\n\n\n\n\n\nOfficial Brackets\nBracket Results by Season (1-4)\n\n2019 (season 4)\n\n<p>\nYour browser does not support iframes\n</p>\n\n\n\n2018 (season 3)\n\n<p>\nYour browser does not support iframes\n</p>\n\n\n\n2016 (season 2)\n\n<p>\nYour browser does not support iframes\n</p>\n\n\n\n2015 (season 1)\n\n<p>\nYour browser does not support iframes\n</p>"
  },
  {
    "objectID": "battlebots.html#battlebots-analysis",
    "href": "battlebots.html#battlebots-analysis",
    "title": "BATTLEBOTS",
    "section": "Battlebots Analysis",
    "text": "Battlebots Analysis\nBelow is my attempt at diving deep into the world of Battlebots to understand what makes some bots more successful than others. All data is from the Battlebots official website, scraped from the web using the Rvest R package developed by Hadley Wickam.\n\nMessy web scraping to get data\n\n\nShow the code\nlibrary(rvest)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(data.table)\nlibrary(stringr)\n#devtools::install_github(\"lchiffon/wordcloud2\")\nlibrary(wordcloud2)\nlibrary(RColorBrewer)\nlibrary(ggmap)\nlibrary(maps)\nlibrary(ggrepel)\nlibrary(sf)\nlibrary(\"rnaturalearth\")\nlibrary(\"rnaturalearthdata\")\nlibrary(htmlwidgets)\nlibrary(webshot)\nlibrary(tidygeocoder)\nlibrary(rgeos)\n\n\n# Set URL list\n#urls = c(\"https://battlebots.com/robot/yeti-2019/\")\n#url <- \"https://battlebots.com/robot/yeti-2019/\"\n\n# Check if data already exists, if not download it\nif(file.exists(\"./files/battlebotsinfo.csv\")){\n  message(\"Loading saved files\")\n  \n  battlebotsinfo = read.csv(\"./files/battlebotsinfo.csv\", stringsAsFactors=FALSE)\n  battlebotsmatch = read.csv(\"./files/battlebotsmatch.csv\", stringsAsFactors=FALSE)\n  battlebotsstat = read.csv(\"./files/battlebotsstat.csv\", stringsAsFactors=FALSE)\n  \n} else {\n  message(\"Generating battlebots data files\")\n  \n  urls = read.csv(\"./files/battlebotsurls.csv\", stringsAsFactors=FALSE)\n  \n  for( i in 1:nrow(urls) ){\n    url = urls[i,1]\n    \n    print(paste0(\"Reading \", i, \" of \", nrow(urls), \": \", url))\n    \n    # Read info and arrange into table \n    # (note that this isn't actually a table in the html source so we had to jump through some hoops to make that happen)\n    info <- read_html(url) %>%\n      html_nodes(\".info-grid\") %>%\n      html_text()\n    \n    info_df_tmp <- map(info, function(x) {\n      tibble(text = unlist(str_split(x, pattern = \"\\\\n\"))) %>%\n        rowid_to_column(var = \"line\")\n    })\n    \n    info_df <- bind_rows(info_df_tmp, .id = \"page\") \n    \n    # Trim off leading whitespace\n    info_trim <- slice(info_df, which.max(text == \"Robot:\") : n()) %>%\n      select(text)\n    \n    # Split into multiple rows , remediate any cases where Values are part of the Record\n    info_split <- info_trim %>%\n      mutate(text = str_trim(text)) %>% \n      mutate(Record = ifelse(grepl(\":\", text, fixed = TRUE), text, NA)) %>%\n      separate(Record, into = c(\"Record\", \"Value\"), sep = \":\", remove = FALSE) %>%\n      fill(Record) %>%\n      mutate(Value = ifelse(is.na(Value), \n               ifelse(grepl(\":\", text, fixed = TRUE), NA, text), Value )) %>%\n      select(Record, Value) %>%\n      filter(!is.na(Value)) %>%\n      filter(!grepl(\"^\\\\s*$\", Value)) %>%\n      unique() %>%\n      group_by(Record) %>%\n      summarize(Value = paste0(Value, collapse = \", \")) %>%\n      ungroup() %>%\n      pivot_wider(names_from = Record, values_from = Value) %>%\n      mutate_all(as.character)\n    \n    # Robot name \n    robot = info_split$Robot\n    \n    # Read both history tables and wrangle into table form\n    history <- read_html(url) %>%\n      html_nodes(\".igsv-table\") \n    \n    if(length(history) > 0){\n    stat_history <- history[1] %>% html_table(header = TRUE, fill = TRUE)\n    stat_history_df <- stat_history[[1]] %>%\n      mutate(Robot = robot) %>%\n      mutate_all(as.character)\n    }\n    \n    if(length(history) > 1){\n      match_history <- history[2] %>% html_table(header = TRUE, fill = TRUE)\n      match_history_df <- match_history[[1]] %>%\n        mutate(Robot = robot) %>%\n        mutate_all(as.character)\n    }\n    \n    # Compile\n    if(i==1){\n      battlebotsinfo = info_split\n      battlebotsmatch = match_history_df\n      battlebotsstat = stat_history_df\n    } else {\n      battlebotsinfo = bind_rows(battlebotsinfo, info_split)\n      \n      if(length(history) > 0){\n        battlebotsstat = bind_rows(battlebotsstat, stat_history_df)\n      }\n      \n      if(length(history) > 1){\n        battlebotsmatch = bind_rows(battlebotsmatch, match_history_df)\n      }\n      \n    }\n    \n  } # End for loop \n  \n  # Save files to make it easier next time\n  write.csv(battlebotsinfo, \"./files/battlebotsinfo.csv\")\n  write.csv(battlebotsmatch, \"./files/battlebotsmatch.csv\")\n  write.csv(battlebotsstat, \"./files/battlebotsstat.csv\")\n\n}\n\n\n# References:\n# https://community.rstudio.com/t/convert-character-string-into-table/9158\n# https://stackoverflow.com/questions/42419765/convert-one-column-into-a-new-column-every-5-rows-a-numeric-interval\n#  - [Scraping in R rvest](https://www.dataquest.io/blog/web-scraping-in-r-rvest/)\n#  - [Tidy Web Scraping in R Tutorial and Resources](https://towardsdatascience.com/tidy-web-scraping-in-r-tutorial-and-resources-ac9f72b4fe47)\n\n\n\n\nShow the code\n### Frequency of Battlebots Weapon Types\n\n# type_frequency <- battlebotsinfo %>%\n#   group_by(Type) %>%\n#   summarize(freq = n()) %>%\n#   rename(\"word\" = \"Type\")\n#   \n# my_wordcloud1 <- wordcloud2(data=type_frequency, size = 0.5, shape = 'pentagon', color='random-dark')\n# \n# my_wordcloud1\n\n#saveWidget(my_wordcloud, \"tmp.html\", selfcontained = F)\n#webshot(\"tmp.html\", \"./images/wc1.png\", delay = 5)\n\n#wordcloud2(demoFreq, color = \"random-light\", backgroundColor = \"grey\")\n\n# https://towardsdatascience.com/create-a-word-cloud-with-r-bde3e7422e8a\n# https://cran.r-project.org/web/packages/wordcloud2/vignettes/wordcloud.html#lettercloud-function\n\n\n\n\nFrequency of Builder Day Jobs\n\n\nShow the code\njob_frequency <- battlebotsinfo %>%\n  group_by(Job) %>%\n  summarize(freq = n()) %>%\n  rename(\"word\" = \"Job\")\n\nmy_wordcloud2 <- wordcloud2(data=job_frequency, size = 0.25, color='random-dark')\n\nmy_wordcloud2\n\n\n\n\n\n\n\n\nMap of Builder Locations\n\n\nShow the code\n#Load location data\nif(file.exists(\"./files/battlebotslocation.csv\")){\n  message(\"Loading saved files\")\n  \n  bbmap = read.csv(\"./files/battlebotslocation.csv\", stringsAsFactors=FALSE)\n} else {\n  message(\"Generating battlebots location files\")\n  \n  #Set up the API key for google \n  #Go to: https://cloud.google.com/maps-platform/\n  #register_google(key = \"AIzaSyDmZUFZ-RzL0mnpO9-CELahrnEWdJwYqDw\", write = TRUE)\n  \n  bbmap <- battlebotsinfo %>%\n    select(Robot, Hometown) %>%\n    mutate(Team = paste(\"Team\", Robot, \", from\", Hometown)) %>%\n    mutate_geocode(Hometown)\n  \n  write.csv(bbmap, \"./files/battlebotslocation.csv\")\n}\n  \nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\np <- ggplot(data = world) + \n  geom_sf(color = \"black\", fill = \"lightgray\") +\n  xlab(\"Longitude\") + ylab(\"Latitude\") +\n  geom_point( data=bbmap, aes(x=lon, y=lat, text=Team), color=\"red\", size=1) +\n  # ggrepel::geom_label_repel(data = bbmap,\n  #            aes(x = lon, y = lat, label = Robot),\n  #            size = 1.5, alpha = 0.8,\n  #            label.r = unit(0.5, \"lines\"), label.size = 0.25,\n  #            segment.color = \"red\", segment.size = 1,\n  #            seed = 1002) +\n  #geom_text_repel(data=bbmap,aes(x = lon, y = lat, label = Robot),box.padding = 0.4,point.padding = 0.25,size=4,show.legend=FALSE)+\n  ggtitle(\"Battlebots Hometowns World map\", subtitle = paste0(\"(\", length(unique(bbmap$Robot)), \" teams)\"))\n\n#pp <- ggplotly(p, tooltip=\"text\")\n\n#assign(\"pp\", plotly::ggplotly(p, tooltip=\"text\"), envir=parent.frame())\n\n#pp\n\np\n\n\n\n\n\nShow the code\n#htmlwidgets::saveWidget( plotly::ggplotly(p, tooltip=\"text\"), \"tmp3.html\")\n\n#print( htmltools::tags$iframe(src=\"temp.html\", width=640, height=480) )\n\n# <iframe src=\"temp.html\" width='1000px' height='800px'></iframe> \n\n  \n#https://stackoverflow.com/questions/29037851/how-do-i-plot-us-cities-using-ggplot\n#https://stackoverflow.com/questions/22752009/plot-on-ggmap-by-using-city-and-state\n#https://towardsdatascience.com/plotting-spatial-data-in-r-a38a405a07f1\n#https://cran.r-project.org/web/packages/usmap/vignettes/advanced-mapping.html \n#https://www.r-graph-gallery.com/330-bubble-map-with-ggplot2.html\n#https://ggplot2-book.org/maps.html\n#http://yluo86.github.io/rmaps\n#https://www.r-spatial.org/r/2018/10/25/ggplot2-sf.html\n#https://www.statsandr.com/blog/world-map-of-visited-countries-in-r/\n#https://cran.r-project.org/web/packages/tidygeocoder/vignettes/tidygeocoder.html\n#https://towardsdatascience.com/reverse-geocoding-in-r-f7fe4b908355\n#https://stackoverflow.com/questions/13905098/how-to-get-the-longitude-and-latitude-coordinates-from-a-city-name-and-country-i\n#https://stackoverflow.com/questions/59144842/why-does-ggplotly-does-not-work-in-rmarkdown-the-same-way-ggplot-does\n\n\n\n\n\nWin Frequency by Robot Type\n\n\nShow the code\n#TODO: Add plot showing frequency of type of robot \n\n# type_frequency <- battlebotsinfo %>%\n#   group_by(Type) %>%\n#   summarize(freq = n()) %>%\n#   rename(\"word\" = \"Type\")\n\nwin_frequency_raw <- merge(battlebotsinfo, battlebotsstat, by=\"Robot\") %>%\n  select(Stats, Career, Robot, Type) %>%\n  filter(Stats %in% c(\"Total matches\", \"Total wins\")) %>%\n  #mutate(Career = as.numeric(Stats)) %>%\n  pivot_wider(names_from = Stats, values_from = Career) %>%\n  unnest(`Total wins`) %>%\n  mutate(`Total wins` = as.numeric(`Total wins`),\n         `Total matches` = as.numeric(`Total matches`))\n\ntype_wins <- win_frequency_raw %>%\n  group_by(Type) %>%\n  summarize(wins = sum(`Total wins`) / sum(`Total matches`))\n\nrobot_wins <- win_frequency_raw %>%\n  group_by(Type) %>%\n  mutate(CountType = n()) %>%\n  ungroup() %>%\n  group_by(Robot, Type, CountType) %>%\n  summarize(wins = sum(`Total wins`) / sum(`Total matches`)) %>%\n  filter(CountType > 1) %>%\n  arrange(wins)\n\n\n\np <- ggplot(robot_wins, aes(x=Type, y=wins)) + geom_boxplot() + theme(axis.text.x = element_text(angle = -90, hjust = 1))\n\n\np <- ggplot(robot_wins, aes(x=reorder(Type, -wins, na.rm = TRUE), y=wins)) + geom_boxplot() + theme(axis.text.x = element_text(angle = -90, hjust = 1)) +  labs(y=\"Wins\", x=\"Type\")\np"
  },
  {
    "objectID": "battlebots.html#resources",
    "href": "battlebots.html#resources",
    "title": "BATTLEBOTS",
    "section": "Resources",
    "text": "Resources\nBattlebots:\n\nOfficial BattleBots page\nReddit Battlebots\nSeason 5 Rumor Mill at Reddit/r/Battlebots\nCombat Robot Resource Guide by Robert Cowan\n\nResources for building a similar RMarkdown page:\n\nCreating dynamic tabs in Rmarkdown\nHTML Special Features: KU CRMDA Markdown\nhttps://github.com/rstudio/rmarkdown/issues/1681\nR: 2 column layout in Rmarkdown with tabset\nScraping in R rvest\nTidy Web Scraping in R Tutorial and Resources"
  },
  {
    "objectID": "recipes.html",
    "href": "recipes.html",
    "title": "Blog",
    "section": "",
    "text": "365\n\n\ngames\n\n\n\n\nAdafruit macropad\n\n\n\n\n\n\nAug 7, 2022\n\n\nLisa\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n365\n\n\nmusic\n\n\n\n\nOtomata\n\n\n\n\n\n\nAug 5, 2022\n\n\nLisa\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n365\n\n\ngames\n\n\n\n\nSeedship\n\n\n\n\n\n\nAug 4, 2022\n\n\nLisa\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n365\n\n\nart\n\n\n\n\nAI Art\n\n\n\n\n\n\nAug 3, 2022\n\n\nLisa\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n365\n\n\nscience\n\n\n\n\nFor Better Science\n\n\n\n\n\n\nAug 2, 2022\n\n\nLisa\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n365\n\n\ncode\n\n\n\n\nRSS\n\n\n\n\n\n\nJul 30, 2022\n\n\nLisa\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n365\n\n\ncode\n\n\n\n\nQuarto\n\n\n\n\n\n\nJul 28, 2022\n\n\n\n\n\n\nNo matching items"
  }
]