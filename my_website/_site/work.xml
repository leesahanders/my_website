<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lisa Anders - questionable.quarto</title>
<link>https://questionable.quarto.pub/blog/work.html</link>
<atom:link href="https://questionable.quarto.pub/blog/work.xml" rel="self" type="application/rss+xml"/>
<description>Making the most out of data</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Tue, 29 Apr 2025 06:00:00 GMT</lastBuildDate>
<item>
  <title>Mounting drives on a server for Posit Team</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/mounting-drives-server.html</link>
  <description><![CDATA[ 





<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>Workbench and Connect will work with the underlying linux system to make resources available to users. This includes things like mounted drives.</p>
<p>Neither Workbench nor Connect natively mount drives, this isn’t done through a config. Drive mounts are done through linux operations.</p>
<section id="nfs" class="level3">
<h3 class="anchored" data-anchor-id="nfs">NFS</h3>
<p>Typically we see this looking like</p>
<ol type="1">
<li>Create a local directory</li>
<li><code>mount -t nfs -o optionshere sharehost:sharepath</code></li>
</ol>
<p>The important bit would be to set permissions with chown, chmod, and maybe facl for either the rstudio-connect user, or the alternate user they choose, for example something like:</p>
<pre><code>sudo chown user:group /folder
chmod 764 /folder</code></pre>
<p>It can also involve <a href="https://www.baeldung.com/linux/network-drive-etc-fstab">fstab</a> or <a href="https://help.ubuntu.com/community/Autofs">AutoFS</a>.</p>
<p>Some specific situations may have some complexity: specific formats, cloud situations, or verifying NFS export options, but in general the mounting process is much simpler than installing the posit products and configuring them and is the same as what would be done on any linux server.</p>
<p>If running in kubernetes then the mount needs to be added to each job pod and it gets more complicated.</p>
</section>
</section>
<section id="smbcifs" class="level2">
<h2 class="anchored" data-anchor-id="smbcifs">SMB/CIFS</h2>
<p>For SMB/CIFS this could look like mounting via PAM, discussed here: <a href="https://support.posit.co/hc/en-us/articles/360044190234-How-to-mount-a-Windows-SMB-CIFS-share-via-PAM" class="uri">https://support.posit.co/hc/en-us/articles/360044190234-How-to-mount-a-Windows-SMB-CIFS-share-via-PAM</a></p>
<p>Alternatively, the SMB/CIFS could be <a href="https://www.techrepublic.com/article/how-to-permanently-mount-a-windows-share-on-linux/">mounted directly</a> with <code>cifs-utils</code> using a service account if traceability or access controls aren’t needed with <code>sudo mount -t cifs -o username=&lt;user&gt;,password=&lt;password&gt; //&lt;server&gt;/&lt;share&gt; /mnt/&lt;mountpoint&gt;</code>.</p>
<p><a href="https://infohub.delltechnologies.com/en-us/l/dell-unity-nas-capabilities/multiprotocol-17/">Multiprotocol NAS</a> is another option for a more enterprise solution.</p>
</section>
<section id="copying-a-project-from-one-users-home-directory-to-another" class="level2">
<h2 class="anchored" data-anchor-id="copying-a-project-from-one-users-home-directory-to-another">Copying a project from one users home directory to another</h2>
<p>Reference: <a href="https://support.posit.co/hc/en-us/articles/12959116352663-Transferring-project-ownership-in-Posit-Workbench" class="uri">https://support.posit.co/hc/en-us/articles/12959116352663-Transferring-project-ownership-in-Posit-Workbench</a></p>
<p>This will recursively copy the project from user1’s home directory to user2’s home directory</p>
<p>`sudo cp -R /home/user1/project /home/user2/``</p>
<p>And this will change the owner recursively to user2</p>
<p><code>sudo chown -R user2:user2 /home/user2/project</code></p>
</section>
<section id="permissions" class="level2">
<h2 class="anchored" data-anchor-id="permissions">Permissions</h2>
<p>When mounting on the server it will need the appropriate permissions so that users are able to access the contents of the drive.</p>
<p>For example for content running on Posit Connect the rstudio-connect user will need access to the drive, for example via <code>chmod 644</code>. Alternatively the drive could be mapped so that an alternate linux user has access and a user with admin access through the Connect UI can set the runAs user to the selected linux user. This will provide more security around protecting the files that are mounted.</p>
</section>
<section id="logging-user-actions" class="level2">
<h2 class="anchored" data-anchor-id="logging-user-actions">Logging user actions</h2>
<p>For customers wanting to log user actions on NFS shares that is done through linux admin utilities, like <code>auditd</code>.</p>
<p>Alternatively kerberized NFS shares can be used for centralized logging/auditing but is significantly more admin overhead.</p>
</section>
<section id="failures" class="level2">
<h2 class="anchored" data-anchor-id="failures">Failures</h2>
<section id="checking-mounted-drives-and-noexec-option" class="level3">
<h3 class="anchored" data-anchor-id="checking-mounted-drives-and-noexec-option">Checking mounted drives and noexec option</h3>
<p>Check if <code>/home</code> on the server, or is it a network mount (NFS or CIFS). In NFS, for example, there can be the use of access control lists which can impact permissions. Similarly, when working in a system that has a mounted share drive then would want to check that libraries are being written to that share so you get persistence. Typically this means writing to inside the home directory. Check mounted drives with: <code>df -h</code></p>
<p>Check <code>/etc/fstab</code> to see if the home directories are mounted with <code>noexec</code></p>
<p>For example, this shows that the home directories were mounted with <code>noexec</code>: <code>/dev/mapper/rhel-home  /home  xfs    defaults,noexec,nosuid,nodev   0 0</code></p>
<p>This resulted in this error message:</p>
<pre><code>library(stringi)Error: package or namespace load failed for 'stringi' in dyn.load(file, DLLpath = DLLpath, ...):
unable to load shared object '/home/username/x86_64-pc-linux-gnu-library/4.3/stringi/libs/stringi.so':
  /home/username/R/x86_64-pc-linux-gnu-library/4.3/stringi/libs/stringi.so: failed to map segment from shared object</code></pre>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p>A linux based forum like <a href="https://serverfault.com/">serverfault</a> can be useful for getting more answers for linux topics like this.</p>
<ul>
<li><a href="https://www.golinuxcloud.com/linux-mount-nfs/" class="uri">https://www.golinuxcloud.com/linux-mount-nfs/</a></li>
<li><a href="https://planetscale.com/blog/io-devices-and-latency#storage-in-the-cloud" class="uri">https://planetscale.com/blog/io-devices-and-latency#storage-in-the-cloud</a></li>
<li><a href="https://solutions.posit.co/admin-training/courses/workbench/04_datasources.html#smbcifs" class="uri">https://solutions.posit.co/admin-training/courses/workbench/04_datasources.html#smbcifs</a></li>
<li>Really interesting community post with script for automounting windows shares: <a href="https://community.rstudio.com/t/active-directory-ad-permissions-and-file-share-mounting-for-rsp/5427/5" class="uri">https://community.rstudio.com/t/active-directory-ad-permissions-and-file-share-mounting-for-rsp/5427/5</a></li>
<li>Example for mounting a drive: <a href="https://superuser.com/questions/134734/how-to-mount-a-drive-from-terminal-in-ubuntu" class="uri">https://superuser.com/questions/134734/how-to-mount-a-drive-from-terminal-in-ubuntu</a></li>
</ul>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/mounting-drives-server.html</guid>
  <pubDate>Tue, 29 Apr 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Setting the R package repository on Posit Workbench</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/r-repository-settings-workbench.html</link>
  <description><![CDATA[ 





<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>The repository for packages being used for installation by users is often important to configure. When using something like Package Manager you’ll want users to install packages from there, rather than the broader internet.</p>
</section>
<section id="at-a-glance" class="level2">
<h2 class="anchored" data-anchor-id="at-a-glance">At a glance</h2>
<p>The best pattern is to configure the repository across R sessions using R config options, not RStudio configs. A shared site library can be created (leveraging <code>Rprofile.site</code> and <code>Renviron.site</code> for example) or using <code>renv</code> with a shared <code>renv</code> package cache (maintaining reproduceability through the <code>renv.lock</code> file).</p>
<p>The <code>Renviron.site</code> would override the <code>Rprofile.site</code> setting and therefore may be more robust.</p>
<section id="renviron.site" class="level3">
<h3 class="anchored" data-anchor-id="renviron.site">Renviron.site</h3>
<p>Referencing: <a href="https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R" class="uri">https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R</a></p>
<p>Create a <code>Renviron.site</code> file and define:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Renviron.site</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="/opt/R/Some-R-Version/lib/R/etc/Renviron.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_PREFIX_AUTO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>TRUE</span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_CACHE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/scratch/renv</span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>R_LIBS_SITE=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib64/R/library:/usr/share/R/library'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</section>
<section id="rprofile.site" class="level3">
<h3 class="anchored" data-anchor-id="rprofile.site">.Rprofile.site</h3>
<p>Set <code>.libPaths()</code> in <code>.Rprofile.site</code>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Rprofile.site</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="/opt/R/Some-R-Version/lib/R/etc/Rprofile.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repos</span> = c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CRAN</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/all/latest"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interactive()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">width</span> = 120<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.info()</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sysname"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]]</span> == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Windows"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Sys.setenv</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RENV_DOWNLOAD_METHOD</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curl"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"folder"</span> %in% tolower<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">list.files</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rlib"</span> %in% list.files<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/username/"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">print</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating Rlib folder"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dir.create</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/username/Rlib"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,mode</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0777"</span>,recursive = T<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[0;32;1mSetting local user lib\033[0m\n"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.libPaths</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">c</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/username/Rlib"</span> , .libPaths<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[0;33;1mYou should consider getting the access right so we can put your local R-lib there, instead of OneDrive.\033[0m\n"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</section>
<section id="test" class="level3">
<h3 class="anchored" data-anchor-id="test">Test</h3>
<p>Test this by running and checking the outputs of:</p>
<ul>
<li><code>.libPaths()</code></li>
<li><code>options()$repos</code></li>
</ul>
</section>
</section>
<section id="long-winded" class="level2">
<h2 class="anchored" data-anchor-id="long-winded">Long-winded</h2>
<section id="startup-behavior-of-r-when-loading-package-environment-details" class="level3">
<h3 class="anchored" data-anchor-id="startup-behavior-of-r-when-loading-package-environment-details">Startup behavior of R when loading package environment details</h3>
<p>R Startup behavior (funny): <a href="https://rstats.wtf/r-startup.html" class="uri">https://rstats.wtf/r-startup.html</a></p>
<blockquote class="blockquote">
<p>Credit: This section was largely taken from an internal Posit resource of unknown authorship</p>
</blockquote>
<p>From bash it is different than from the editor.</p>
<p>See <a href="https://stat.ethz.ch/R-manual/R-devel/library/base/html/Startup.html" title="https://stat.ethz.ch/R-manual/R-devel/library/base/html/Startup.html">here</a> for the official startup docs from R.</p>
<p>R from the command line/bash will take the user’s environment. It will not read any additional bash files during start-up (which the RStudio products will do). It will still read in the R startup files (Renviron/Rprofile).</p>
<p>Prior to loading the R session from the bash shell any commands in this file will be read and execute commands if it exists: <code>/etc/profile</code></p>
<p>Next, the the first of the following files that exists and is readable will have commands executed from (only one of these files will be read and executed):</p>
<ul>
<li><p><code>~/.bash_profile</code></p></li>
<li><p><code>~/.bash_login</code></p></li>
<li><p><code>~/.profile</code></p></li>
</ul>
<p>R then always loads the following (in order):</p>
<ul>
<li><p><code>R_HOME/etc/Renviron.site</code> (set for all users)</p></li>
<li><p><code>.Renviron</code> - user-specific, typically in the user’s home directory, but can be elsewhere (for instance, in a Project folder)</p></li>
<li><p><code>R_HOME/etc/Rprofile.site</code> (set for all users)</p></li>
<li><p><code>.Rprofile</code> - user-specific, typically in the user’s home directory, but can be elsewhere (for instance, in a Project folder)</p></li>
</ul>
<p>Beyond this, what gets put in the environment depends on the product.</p>
<ul>
<li><p>RStudio Server / Workbench: before any of this executes, RStudio Server will first include the contents of /etc/rstudio/rsession-profile if it exists. It will also add anything set in rsession-ld-library-path in rserver.conf to the LD_LIBRARY_PATH environment variable.</p></li>
<li><p>Shiny Server / Connect: you can affect the environment variables for a specific application using program supervisors</p></li>
</ul>
<p>This page in the documentation is the new home for the golden source of info for startup behavior: <a href="https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html" class="uri">https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html</a></p>
</section>
<section id="r-sessions-across-all-workbench-ides" class="level3">
<h3 class="anchored" data-anchor-id="r-sessions-across-all-workbench-ides">R sessions across all Workbench IDE’s</h3>
<p>Relying on <code>repos.conf</code> for R repository configuration IMHO is a clear anti-pattern which especially large customers with large setups should not use. <code>repos.conf</code> is a relic from a time where there was only RSP.</p>
<p>Configure the repository settings in R directly, rather than through the RStudio settings.</p>
<p>Resources:</p>
<ul>
<li><p>A great resource for setting this up simply is: <a href="https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html" class="uri">https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html</a></p></li>
<li><p>For a more complex example that could be used in slurm environments refer to: <a href="https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R" class="uri">https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R</a></p></li>
</ul>
<p>The <code>Renviron.site</code> would override the <code>Rprofile.site</code> setting and therefore may be more robust.</p>
<section id="renviron.site-1" class="level4">
<h4 class="anchored" data-anchor-id="renviron.site-1">Renviron.site</h4>
<p>Create a <code>Renviron.site</code> file and define:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Renviron.site</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="/opt/R/Some-R-Version/lib/R/etc/Renviron.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Key1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>value1</span>
<span id="cb3-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_PREFIX_AUTO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>TRUE</span>
<span id="cb3-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_CACHE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/scratch/renv</span>
<span id="cb3-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>R_LIBS_SITE=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib64/R/library:/usr/share/R/library'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>And then <code>Sys.getenv("Key1")</code> will return <code>"value1"</code> in a users R session.</p>
<p>This can be set at the user or system level. Users have the choice between user or project level (project taking preference). The <a href="https://usethis.r-lib.org/">usethis</a> package includes a helper function for editing <code>.Renviron</code> files from an R session with&nbsp;<code>usethis::edit_r_environ()</code>. For a system level install it is placed per R version, for example at <code>/opt/R/4.1.1/lib/R/etc/Renviron.site</code>.</p>
</section>
<section id="rprofile.site-1" class="level4">
<h4 class="anchored" data-anchor-id="rprofile.site-1">.Rprofile.site</h4>
<p>Set <code>.libPaths()</code> in <code>.Rprofile.site</code>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Rprofile.site</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="/opt/R/Some-R-Version/lib/R/etc/Rprofile.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repos</span> = c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CRAN</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/all/latest"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interactive()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">width</span> = 120<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>Again this file can be se at the user or system level. At the user level the easiest way to edit your <code>.Rprofile</code> file is to use the <code>usethis::edit_r_profile()</code> function from within an R session. You can specify whether you want to edit the user or project level <code>.Rprofile.</code> For a system level install it is placed per R version, for example at <code>/opt/R/4.2.0/lib/R/etc/Rprofile.site</code>.</p>
</section>
<section id="configuring-a-shared-library" class="level4">
<h4 class="anchored" data-anchor-id="configuring-a-shared-library">Configuring a shared library</h4>
<p>Taken from an <a href="https://positpbc.slack.com/archives/C2P7MTJKE/p1738088423395249?thread_ts=1737982807.176319&amp;cid=C2P7MTJKE">internal discussion</a></p>
<p>Set <code>.libPaths()</code> in <code>.Rprofile.site</code>.</p>
<p>There are two main options:</p>
<ul>
<li><p>Install a set of R packages in a shared library. The users here would need to specify which packages they really need and then their IT team could install those into a <code>site-library</code> in each R version, ideally leveraging a time-based snapshot from package manager for reproducibility reason. Users in this case would be limited to a certain package version for some time. They however can update those packages regularly (e.g.&nbsp;quarterly) to lessen the pain here. As mentioned above, do <strong>NOT</strong> use any recommendation from the Posit Admin guide for this setup but follow the standard approach to configure the same in R (leveraging <code>Rprofile.site</code> and <code>Renviron.site</code> for example).</p></li>
<li><p>Educate/train the users to all use <code>renv</code> - then every user would have maximum degree of freedom to choose which packages and which version they want to use for each project. They then would maintain <code>renv.lock</code> files for each project and the admin team can then configure a shared <code>renv</code> package cache to ensure that any given package/version combination is only stored once.</p></li>
</ul>
<p>Both options in their own right also protect the data scientists from producing irreproducible code since in neither case they rely on that melting pot of R package mess that typically piles up in <code>R_LIBS_USER</code> (in particular for systems where R points to latest CRAN which IMHO is another anti-pattern)</p>
<section id="script-for-updating-packages-from-rspm-that-have-changed-to-site-library" class="level5">
<h5 class="anchored" data-anchor-id="script-for-updating-packages-from-rspm-that-have-changed-to-site-library">Script for updating packages from rspm that have changed to site library</h5>
<pre><code># update existing packages
update.packages(lib.loc=&lt;site.library&gt;, repos=&lt;PPM Repo&gt;, ask=FALSE)

# add any new packages
new.packages(lib.loc=&lt;site.library&gt;, repos=&lt;PPM Repo&gt;, ask=FALSE)</code></pre>
</section>
</section>
</section>
<section id="workbench-and-rstudio-sessions-only" class="level3">
<h3 class="anchored" data-anchor-id="workbench-and-rstudio-sessions-only">Workbench and RStudio sessions only</h3>
<p>The oft recommended path is to use the <code>repos.conf</code> or <code>rsession.conf</code> file to configure the repository URL.</p>
<p>This might look like:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/rsession.conf</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="/etc/rstudio/rsession.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">r-cran-repos=http://cran.at.r-project.org/</span></span></code></pre></div>
</div>
<p>Or:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/repos.conf</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="/etc/rstudio/repos.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://packagemanager.posit.co/cran/__linux__/jammy/latest</span>
<span id="cb7-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CRAN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://packagemanager.posit.co/cran/__linux__/jammy/latest</span>
<span id="cb7-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Australia</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://cran.ms.unimelb.edu.au/</span>
<span id="cb7-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Austria</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://lib.ugent.be/CRAN/</span></code></pre></div>
</div>
<p>And adding to <code>rsession.conf</code>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/rsession.conf</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="/etc/rstudio/rsession.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use this to change the location / name of the repos.conf file</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">r-cran-repos-file=/etc/rstudio/repos.conf</span></span></code></pre></div>
</div>
<p>Reference: <a href="https://docs.posit.co/ide/server-pro/rstudio_pro_sessions/package_installation.html" class="uri">https://docs.posit.co/ide/server-pro/rstudio_pro_sessions/package_installation.html</a></p>
</section>
<section id="ld_library_path" class="level3">
<h3 class="anchored" data-anchor-id="ld_library_path">LD_LIBRARY_PATH</h3>
<p>Reference: <a href="https://rstudioide.zendesk.com/agent/tickets/107856" class="uri">https://rstudioide.zendesk.com/agent/tickets/107856</a></p>
<p>There are a few different places the LD_LIBRARY_PATH can be modified within Workbench settings, only some of which will work for packages like <code>rJava</code>. For instance, including the ldpaths script in <code>/etc/rstudio/r-versions</code> can ensure the correct library is set on R session startup. The final step in this support article shows a method of setting this up which should work even on non-containerized Workbench sessions (the mkdir command can be excluded, since that directory should already exist on a server-installed version of Workbench):</p>
<p>We need to force the installed R version to use it’s own ldpaths startup script when it starts inside the container.</p>
<p><code>RUN mkdir -p /etc/rstudio &amp;&amp; printf "Path: /opt/R/${R_VERSION}\nScript: /opt/R/${R_VERSION}/lib/R/etc/ldpaths" &gt; /etc/rstudio/r-versions</code></p>
<p>These steps are good to follow: <a href="https://solutions.posit.co/envs-pkgs/using-rjava/index.html#additional-steps-for-workbench" class="uri">https://solutions.posit.co/envs-pkgs/using-rjava/index.html#additional-steps-for-workbench</a></p>
<p>The additional steps that need to be followed on Workbench are:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/r-versions</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="/etc/rstudio/r-versions" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Path:</span> /opt/R/4.2.0</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Script:</span> /opt/R/4.2.0/lib/R/etc/ldpaths</span></code></pre></div>
</div>
</section>
<section id="troubleshooting" class="level3">
<h3 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h3>
<p>To determine the environment details it can be useful to run <code>Sys.getenv()</code> from inside and outside RStudio, to see if the user’s bash files are setting environment variables inappropriately for the system.</p>
<p>If the issue is occurring within RStudio it can be helpful to capture the output of<code>system("ldd /usr/lib/rstudio-server/bin/rsession")</code> from inside and outside RStudio to see which R libraries are being loaded.</p>
<p>Test from a user session the repository details with:</p>
<ul>
<li><code>.libPaths()</code></li>
<li><code>options()$repos</code></li>
</ul>
<p>Permissions on the various configs can cause various issues with soft fails, for example a working permission is: <code>chmod 644</code>, or for the rstudio directory consider <code>chmod 0755 /etc/rstudio</code> or <code>chmod o+x /etc/rstudio</code> to add the <code>x</code> bit for just rstudio-server without opening up the other permissions if it is desired to keep it restricted (may result in odd behavior).</p>
<p>Check permissions with: <code>ls -la /etc/rstudio</code></p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/r-repository-settings-workbench.html</guid>
  <pubDate>Thu, 24 Apr 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Using the remote CLI with package manager</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/rspm_remote_admin_cli.html</link>
  <description><![CDATA[ 





<section id="overview" class="level3">
<h3 class="anchored" data-anchor-id="overview">Overview</h3>
<p>Remote CLI use: <a href="https://docs.posit.co/rspm/admin/admin-cli/#cli-remote-use" class="uri">https://docs.posit.co/rspm/admin/admin-cli/#cli-remote-use</a></p>
<blockquote class="blockquote">
<p>The entire admin CLI is now available for use remotely, with the exception of the offline, online and cluster commands. API tokens can be generated with the new global:admin scope to allow full access to the CLI.</p>
</blockquote>
<p>In order to use the admin CLI remotely you need an admin to create an API token for you (<code>rspm create token</code>)</p>
<p>The admin will likely need to follow these steps:</p>
<ul>
<li>Enable the <code>Authentication.APITokenAuth</code> configuration setting and restart the Package Manager service.</li>
<li>Create a token using the <code>rspm create token</code> command. For example <code>rspm create token --scope=global:admin --expires=never</code></li>
<li>Give the token and the full address of the server (including the port if not using a default port like 80/443) to the remote user.</li>
</ul>
<p>As a user these are needed:</p>
<ul>
<li>Download the Package Manager CLI, ensuring that the CLI version matches the server version.</li>
<li>Set an environment variable named <code>PACKAGEMANAGER_TOKEN</code> with the value of the token.</li>
<li>Set an environment variable named <code>PACKAGEMANAGER_ADDRESS</code> with the address of the Package Manager server.</li>
</ul>
<p>Some other commands useful to know about:</p>
<ul>
<li><code>rspm encrypt generate</code> for creating the encryption token from the CLI before setting up the server.</li>
<li>Generate a bootstrap key programmatically: <a href="https://docs.posit.co/rspm/admin/appendix/bootstrap/" class="uri">https://docs.posit.co/rspm/admin/appendix/bootstrap/</a></li>
<li><code>rspm create token --scope=sources:write --description 'meatballhat is testing' --sources='*' --expires=1h</code> generates an API key for one hour</li>
<li><code>rspm create token --description="user A" --sources=local-src --expires=30d --scope=sources:write</code> creates a token for adding binary packages remotely</li>
<li>useful example showing setup instructions for a package manager instance: <a href="https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh" class="uri">https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh</a></li>
<li>here’s the way we included the rspm cli in the container images: <a href="https://github.com/rstudio/sol-eng-demo-server/pull/110/files" class="uri">https://github.com/rstudio/sol-eng-demo-server/pull/110/files</a></li>
<li>list of all commands: <a href="https://docs.posit.co/rspm/admin/appendix/cli/rspm/" class="uri">https://docs.posit.co/rspm/admin/appendix/cli/rspm/</a></li>
</ul>
</section>
<section id="environment-set-up" class="level3">
<h3 class="anchored" data-anchor-id="environment-set-up">Environment set-up</h3>
<p>Current environment token:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PACKAGEMANAGER_ADDRESS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PACKAGEMANAGER_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</section>
<section id="running-commands" class="level3">
<h3 class="anchored" data-anchor-id="running-commands">Running commands</h3>
<p>As a user we can test our access with something like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the Package Manager CLI, ensuring that the CLI version matches the server version. For example RSPM_SERVER_VERSION=2024.04.2-29 or RSPM_SERVER_VERSION=2023.12.0-13, find the version through the UI or with rspm --version</span></span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM_SERVER_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2024.08.2-9</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM_SERVER_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2024.08.4-10</span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM_SERVER_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2024.11.0-7</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> rspm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> https://cdn.posit.co/package-manager/linux/amd64/rspm-cli-linux-<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${RSPM_SERVER_VERSION}</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> +x rspm</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set an environment variable named PACKAGEMANAGER_TOKEN with the value of the token.</span></span>
<span id="cb2-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PACKAGEMANAGER_TOKEN</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set an environment variable named PACKAGEMANAGER_ADDRESS with the address of the Package Manager server. </span></span>
<span id="cb2-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PACKAGEMANAGER_ADDRESS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PACKAGEMANAGER_ADDRESS</span></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test it! </span></span>
<span id="cb2-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> verify</span>
<span id="cb2-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> list tokens</span>
<span id="cb2-19"></span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test it! </span></span>
<span id="cb2-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> list blocklist-rules</span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test it! Need a package to try to push to test these</span></span>
<span id="cb2-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>internal <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lisaPackageManagerDemo_0.0.1.tar.gz</span></code></pre></div>
<p>Let’s create a new repository for blocked packages that is inspired by <a href="https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh" class="uri">https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh</a></p>
<p>First we should create our .txt files with the desired subset of packages:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># curated cran</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dplyr\nggplot2\narrow\nlubridate\njsonlite\nreadxl\nhaven\ngdata\nigraph\ncommonmark'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> package_subset_r.csv</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># curated pypi</span></span>
<span id="cb3-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotnine\npolars\npillow\ngreat-tables'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> package_subset_py.txt</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">snapshot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2025-01-22</span></code></pre></div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># blocked packages -- R</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>curated-cran <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r </span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ggplot2 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation of 'ggplot2' is blocked"</span></span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--file-in</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'package_subset_r.csv'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--commit</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--snapshot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${snapshot}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Curated CRAN with vulnerability blocking enabled. Downloads of ggplot2 are also disallowed."</span></span>
<span id="cb4-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># blocked packages -- python</span></span>
<span id="cb4-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>curated-pypi</span>
<span id="cb4-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span>
<span id="cb4-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plotnine <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation of 'plotnine' is blocked."</span></span>
<span id="cb4-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--file-in</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>package_subset_py.txt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--snapshot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${snapshot}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--commit</span></span>
<span id="cb4-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Curated PyPI with vulnerability blocking enabled. Downloads of plotnine are also disallowed."</span></span>
<span id="cb4-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python</span></code></pre></div>
<p>Let’s check for package versions that violate the blocklist rule for blocking vulnerabilities:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#rspm test blocklist-rules --repo=[repo name] --package-name=[package name] --version=[version]</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pillow</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pillow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>10.0.1</span></code></pre></div>
<p>Let’s set up a cran that has all vulnerable packages blocked (rather than a subset). This wasn’t possible until the newest release.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Access CRAN packages with known vulnerabilities blocked'</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span></code></pre></div>
<p>Let’s now do the same for pypi:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Access PyPi packages with known vulnerabilities blocked'</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span></code></pre></div>
<p>Let’s check for package versions that violate the blocklist rule for blocking vulnerabilities:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#rspm test blocklist-rules --repo=[repo name] --package-name=[package name] --version=[version]</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>jsonlite <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1.8.7</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pillow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>10.0.1</span></code></pre></div>
<p>Let’s create a blocklist rule to block a specific package:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ggplot2 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation of 'ggplot2' is blocked"</span></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ggplot2</span></code></pre></div>
<p>Remove a repository (oops!):</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> delete repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked</span></code></pre></div>
<p>Try to download a blocked package:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(remotes)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CRAN =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://pkg.demo.posit.team/cran-vulns-blocked/__linux__/noble/latest"</span>))</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_version</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jsonlite"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.8.7"</span>)</span></code></pre></div>
<p>or we can instead curl it to see what happens:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> https://pkg.demo.posit.team/cran-vulns-blocked/latest/src/contrib/Archive/jsonlite/jsonlite_1.8.7.tar.gz</span></code></pre></div>
</section>
<section id="rosv" class="level3">
<h3 class="anchored" data-anchor-id="rosv">rosv</h3>
<p>rosv r package: <a href="https://github.com/cran/rosv" class="uri">https://github.com/cran/rosv</a></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rosv)</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pull the entire set of PyPI vulnerability data</span></span>
<span id="cb13-4">pkg_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">osv_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ecosystem =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PyPI'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all_affected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb13-5">pypi_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_osv_list</span>(pkg_vul, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as.data.frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NA_value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pull the entire set of cran vulnerability data</span></span>
<span id="cb13-8">pkg_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">osv_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ecosystem =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CRAN'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all_affected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb13-9">cran_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_osv_list</span>(pkg_vul, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as.data.frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NA_value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb13-10"></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scan an R project </span></span>
<span id="cb13-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">osv_scan</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r_project'</span>)</span></code></pre></div>
</section>
<section id="r-advisory-database" class="level3">
<h3 class="anchored" data-anchor-id="r-advisory-database">r-advisory-database</h3>
<p>r-advisory-database: <a href="https://github.com/RConsortium/r-advisory-database" class="uri">https://github.com/RConsortium/r-advisory-database</a></p>
</section>
<section id="troubleshooting" class="level3">
<h3 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h3>
<blockquote class="blockquote">
<p>“unsupported protocol scheme”“”</p>
</blockquote>
<p>This error is due to the missing <code>https://</code> in front of the URL. Add that and try again.</p>
<blockquote class="blockquote">
<p>“Error: unable to get the claims from the token: signature is invalid”</p>
</blockquote>
<p>Was the package manager server recently updated? The encryption key changes between versions (is re-generated). It is used for all secret management in PPM, including JWT tokens, encrypted configuration values like database passwords, and credentials for git builders. Logic needs to be added to manage the key across versions if you want things like API keys to persist. Follow the docs <a href="https://docs.posit.co/rspm/admin/appendix/encryption/">here</a> and consider setting the supported env var <code>PACKAGEMANAGER_ENCRYPTION_KEY</code>.</p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/rspm_remote_admin_cli.html</guid>
  <pubDate>Wed, 22 Jan 2025 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>AWS Connections from Posit Team</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/aws-data-sources.html</link>
  <description><![CDATA[ 





<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>This article walks through the different access options for data resources in AWS. Access patterns for AWS resources will vary based on several general factors:</p>
<ol type="1">
<li>Where the code is running (e.g.&nbsp;Posit Workbench vs.&nbsp;Posit Connect)</li>
<li>The credential (e.g.&nbsp;OIDC, IAM roles, kerberos authentication, IAM instance profile and policy, username/password, etc.)</li>
<li>The connection method (e.g.&nbsp;Workbench managed credentials, R or Python package, ODBC, etc.)</li>
<li>Which AWS resource is being accessed</li>
</ol>
<section id="aws-data-resources" class="level3">
<h3 class="anchored" data-anchor-id="aws-data-resources">AWS data resources</h3>
<p>Popular data storage options in AWS include S3, Aurora, Redshift, and Athena. Each type is useful for different workflows.</p>
<table class="table">
<colgroup>
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Service</strong></th>
<th><strong>Type</strong></th>
<th><strong>Data Type</strong></th>
<th><strong>Best For</strong></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Amazon S3</strong></td>
<td>Object Storage</td>
<td>Unstructured, Semi-structured</td>
<td>Data lakes, blob storage, backups, archive</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>Amazon RDS / Aurora</strong></td>
<td>Relational Database</td>
<td>Structured</td>
<td>Real-time transactions, enterprise apps, Aurora/MySQL/PostgreSQL/MariaDB/Microsoft SQL Server/Oracle database engines</td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td><strong>Amazon Redshift</strong></td>
<td>Data Warehouse</td>
<td>Structured, Semi-structured</td>
<td>Analytics, Business Intelligence</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>Amazon Athena</strong></td>
<td>Interactive Query to S3</td>
<td>Semi-structured, Structured</td>
<td>Ad-hoc queries on S3 data</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</section>
<section id="aws-identity-and-access-management-iam" class="level3">
<h3 class="anchored" data-anchor-id="aws-identity-and-access-management-iam">AWS Identity and Access Management (IAM)</h3>
<p>The foundation of identity management on AWS is through the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html">Identity and Access Management (IAM) web service</a>. The basic principles are:</p>
<ul>
<li>A user is set up on IAM (this can be synced with an external authentication agent)</li>
<li>Their sign-in credentials are used to authenticate with AWS (either as an AWS account root user, an IAM user, or assuming an IAM role)</li>
<li>Sign-in credentials are matched to a principal (an IAM user, federated user, IAM role, or application)</li>
<li>Access is requested and granted to a specific service according to the relevant services policy</li>
</ul>
<p>Vocabulary:</p>
<ul>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html">IAM users</a> are individual entities, typically a human user. By default IAM users have minimum permissions and access must be granted to them.</p></li>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html">IAM groups</a> can be used to describe a collection of IAM users and grant permissions to a larger set of users, rather than individually.</p></li>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">Roles</a> are an identity that has specific permissions. Any IAM user can be granted a role which would then give them access to those permissions for the time alotted. Services can also be granted roles which allows the service to perform actions on your behalf.</p></li>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html">Policies</a> define permissions. They can be attached to identities or resources. These permissions define if a request is allowed or denied.</p></li>
</ul>
</section>
</section>
<section id="credentials" class="level2">
<h2 class="anchored" data-anchor-id="credentials">Credentials</h2>
<p>This guide will focus on the recommended tools for authentication to AWS resources when using Posit. The different methods that are commonly used are:</p>
<ul>
<li>User: Workbench Managed Credentials using Identity and Access Management (IAM) (recommended) 🔗</li>
<li>User: Developer managed credentials using Identity and Access Management (IAM), Secrets manager, or Key Management Service (KMS) 🔗</li>
<li>User or One-to-many: Developer managed keypair using an AWS secret key and access key 🔗</li>
<li>One-to-many: Grant trusted access to resource from VM using an IAM instance profile and policy or role 🔗</li>
</ul>
<p>Not supported:</p>
<ul>
<li>Browser authentication methods. Posit Workbench does not support this method. After a successful login, AWS will redirect you to <code>localhost</code> instead of your Workbench instance.</li>
</ul>
</section>
<section id="connection-methods" class="level2">
<h2 class="anchored" data-anchor-id="connection-methods">Connection Methods</h2>
<p>AWS supports many different types of connection methods. This guide will focus on the recommended connection methods when using Posit Workbench and Posit Connect.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Connection authentication is through the <a href="https://www.paws-r-sdk.com/">paws</a> package. In addition it provides the ability to return data objects for many of the resources inside AWS. For resources that are databases the <a href="https://odbc.r-dbi.org/reference/dbConnect-OdbcDriver-method.html">odbc</a> and <a href="https://dbi.r-dbi.org/">DBI</a> packages are also needed in order to create connection objects. Your Posit admin should follow the instructions on the <a href="https://docs.posit.co/pro-drivers/">Install Pro Drivers</a> page of the documentation.</p>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Connection authentication is through the <a href="https://pypi.org/project/boto3/">boto3</a> package. For resources that are databases this can be used in conjunction with data frame libraries like <a href="https://docs.pola.rs/">polars</a> or <a href="https://pandas.pydata.org/">pandas</a>. Your Posit admin should follow the instructions on the <a href="https://docs.posit.co/pro-drivers/">Install Pro Drivers</a> page of the documentation.</p>
</div>
</div>
</div>
</section>
<section id="user-credential-examples" class="level2">
<h2 class="anchored" data-anchor-id="user-credential-examples">User Credential Examples</h2>
<section id="development-environments-ie-workbench" class="level3">
<h3 class="anchored" data-anchor-id="development-environments-ie-workbench">Development Environments (IE Workbench)</h3>
<p>Development environments refer to environments where users write and execute cod, which include Posit Workbench. In the development environment the running user is executing the code, so both interactive and non-interactive authentiation methods are possible. Most commonly the credential method chosen uses the credetials of the running user.</p>
<p>The admin for Workbench can configure credentials on Workbench to help make this process easier for developers. Currently, this feature is only supported for RStudio Pro and VS Code sessions.</p>
</section>
<section id="example-access-patterns" class="level3">
<h3 class="anchored" data-anchor-id="example-access-patterns">Example Access Patterns</h3>
<section id="workbench-managed-creds-iam" class="level4">
<h4 class="anchored" data-anchor-id="workbench-managed-creds-iam">Workbench Managed Credentials</h4>
<p>Workbench Managed Credentials is the recommended way to access data on AWS from Posit Workbench. This method is secure and provides a nice user experience because Workbench manages the credentials for the user.This uses the AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">web identity federation</a> mechanism to securely set credentials in individual sessions.</p>
<p>An admin can configure Workbench to provide user-specific AWS credentials for sessions that are tied to their Single Sign-On credentials. Under the hood Workbench uses the AWS web identity federation mechanism (IAM with OpenID Connect) to set these credentials in individual sessions. For more details the administrator should refer to the <a href="https://docs.posit.co/ide/server-pro/authenticating_users/aws_credentials.html">AWS Credentials</a> page in the Posit Workbench Admin Guide.</p>
<section id="aws-configuration" class="level5">
<h5 class="anchored" data-anchor-id="aws-configuration">AWS Configuration</h5>
<p>AWS will need to be configured with an appropriate IAM Identity Provider and IAM Roles that Workbench users will assume. See the <a href="https://docs.posit.co/ide/server-pro/authenticating_users/aws_credentials.html#aws-configuration">AWS Configuration</a> page for step-by-step directions.</p>
<p>Users that need access to resources will need the policy associated with their IAM role updated.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="resource">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">S3</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">RDS / Aurora</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">Redshift</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-4" aria-controls="tabset-2-4" aria-selected="false">Athena</a></li></ul>
<div class="tab-content" data-group="resource">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<p>For access from Workbench to S3 that could look like <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/security_iam_service-with-iam.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Allow user complete access to create and remove objects in the bucket",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::12345678901:user/user"
            },
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::amzn-s3-demo-bucket"
        }
    ]
}</code></pre>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<p>For access from Workbench to RDS / Aurora that could look like <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.IAMPolicy.html">this</a> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.IAMPolicy.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "rds-db:connect"
            ],
            "Resource": [
                "arn:aws:rds:us-east-2:637485797898:db:cluster-db/username"
            ]
        }
    ]
}</code></pre>
<p>The database will need to have user access granted, for example <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.DBAccounts.html#UsingWithRDS.IAMDBAuth.DBAccounts.PostgreSQL">for postgres use <code>GRANT rds_iam TO db_userx;</code></a>.</p>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<p>For access from Workbench to Redshift that could look like <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-user-credentials.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "redshift:GetClusterCredentials",
            "Resource": "arn:aws:redshift:us-east-2:637485797898:dbuser:demo-cluster/username"
        }
    ]
}</code></pre>
<p>The database will need to have user access granted, use the <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_GRANT.html">GRANT</a> command. For more details refer to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-iam-credentials-steps.html">the AWS documentation</a>.</p>
</div>
<div id="tabset-2-4" class="tab-pane" aria-labelledby="tabset-2-4-tab">
<p>For access from Workbench to Aurora that could look like <a href="https://docs.aws.amazon.com/athena/latest/ug/example-policies-workgroup.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "athena:*"
            ],
            "Resource": [
                "*"
            ]
        }
    ]
}</code></pre>
<p>There are two managed policies for Athena that are needed to grant access <code>AmazonAthenaFullAccess</code> and <code>AWSQuicksightAthenaAccess</code>.</p>
<p>Additional permissions may be needed in order to access the underlying dataset stored in S3.</p>
</div>
</div>
</div>
</section>
<section id="workbench-managed-creds-user" class="level5">
<h5 class="anchored" data-anchor-id="workbench-managed-creds-user">User Configuration</h5>
<p>When starting a new Workbench session, users should click on the AWS credential selection widget to login to AWS. After selecting and starting the session with attached credentials, the credentials needed to connect to AWS resources (<code>AWS_ROLE_ARN</code> and <code>AWS_WEB_IDENTITY_TOKEN_FILE</code>) are available within the session.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/aws-new-connection.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" data-glightbox="description: .lightbox-desc-1" title="AWS accounts in the New Session dialog’s credential selection widget"><img src="https://questionable.quarto.pub/blog/work/img/aws-new-connection.png" class="img-fluid figure-img" alt="AWS accounts in the New Session dialog’s credential selection widget"></a></p>
<figcaption>AWS accounts in the New Session dialog’s credential selection widget</figcaption>
</figure>
</div>
<p>The <a href="https://docs.posit.co/ide/server-pro/user/posit-workbench/managed-credentials/aws.html">Posit Workbench User Guide - Workbench-managed AWS Credentials</a> page in the Posit Workbench User Guide provides more details on logging into AWS via Posit Workbench.</p>
<p>It is not possible to share credentials amongst users with Workbench Managed Credentials.</p>
</section>
<section id="workbench-managed-credentials-r-and-python-examples" class="level5">
<h5 class="anchored" data-anchor-id="workbench-managed-credentials-r-and-python-examples">R and Python Examples</h5>
<p>Users can verify the available credentials within their Workbench session by installing the <a href="https://aws.amazon.com/cli/">AWS CLI</a>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awscliv2.zip"</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span> awscliv2.zip</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./aws/install</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ~/.local/aws-cli <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> ~/.local/bin</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> sts get-caller-identity</span></code></pre></div>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="r-resource">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">S3</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">RDS / Aurora</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-3" aria-controls="tabset-3-3" aria-selected="false">Redshift</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-4" aria-controls="tabset-3-4" aria-selected="false">Athena</a></li></ul>
<div class="tab-content" data-group="r-resource">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create an S3 service object in the region you are working on</span></span>
<span id="cb6-4">s3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paws<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">s3</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">config =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>))</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is this needed? </span></span>
<span id="cb6-7">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_auth_token</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">endpoint =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>) </span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># locate the s3 bucket you want</span></span>
<span id="cb6-11">bucket <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-projects'</span></span>
<span id="cb6-12">s3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_objects</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Bucket =</span> bucket)</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># upload data to s3 bucket</span></span>
<span id="cb6-15">s3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">put_object</span>(</span>
<span id="cb6-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Bucket =</span> bucket,</span>
<span id="cb6-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data.csv'</span></span>
<span id="cb6-18">)</span>
<span id="cb6-19"></span>
<span id="cb6-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read data from s3 bucket</span></span>
<span id="cb6-21">s3_download <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_object</span>(</span>
<span id="cb6-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Bucket =</span> bucket,</span>
<span id="cb6-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Key =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-24">)</span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<p>Currently there is an <a href="https://github.com/paws-r/paws/issues/324">issue</a> preventig the credentials from being correctly loaded. In order to get this working (until the issue is fixed) the AWS CLI can be used to retrieve a functional token with <code>aws rds generate-db-auth-token --hostname demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com --port 5432 --region us-east-2 --username username</code> or call out to Python and use boto3 (for example with reticulate).</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(odbc)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DBI)</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb7-4">rds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paws<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rds</span>()</span>
<span id="cb7-5">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_auth_token</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">endpoint =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>) </span>
<span id="cb7-6">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb7-7">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PostgreSQL"</span>,</span>
<span id="cb7-8">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>,</span>
<span id="cb7-9">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo_db"</span>,</span>
<span id="cb7-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>,</span>
<span id="cb7-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> token,</span>
<span id="cb7-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb7-13">                      )</span></code></pre></div>
</div>
<div id="tabset-3-3" class="tab-pane" aria-labelledby="tabset-3-3-tab">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(odbc)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DBI)</span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb8-4">DB_NAME <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span></span>
<span id="cb8-5">CLUSTER_IDENTIFIER <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster'</span></span>
<span id="cb8-6">DB_USER <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span></span>
<span id="cb8-7">redshift <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paws<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">redshift</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb8-8">temp_credentials <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> redshift<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_cluster_credentials</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbUser =</span> DB_USER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbName =</span> DB_NAME, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ClusterIdentifier =</span> CLUSTER_IDENTIFIER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AutoCreate =</span> F)</span>
<span id="cb8-9">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb8-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Redshift"</span>,</span>
<span id="cb8-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com"</span>,</span>
<span id="cb8-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> DB_NAME,</span>
<span id="cb8-13">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbUser,</span>
<span id="cb8-14">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbPassword,</span>
<span id="cb8-15">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span></span>
<span id="cb8-16">                      )</span></code></pre></div>
</div>
<div id="tabset-3-4" class="tab-pane" aria-labelledby="tabset-3-4-tab">
<p>For R developers the <a href="https://www.paws-r-sdk.com/docs/athena/">paws</a> package can be used. More commonly, users connect directly to the data stored in S3.</p>
</div>
</div>
</div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="python-resource">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">S3</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">RDS / Aurora</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-3" aria-controls="tabset-4-3" aria-selected="false">Redshift</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-4" aria-controls="tabset-4-4" aria-selected="false">Athena</a></li></ul>
<div class="tab-content" data-group="python-resource">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install boto3</span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb10-3">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s3'</span>)</span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is this needed?</span></span>
<span id="cb10-5">token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.generate_db_auth_token(DBHostname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>, Port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,DBUsername<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>, Region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb10-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(token)</span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb10-8">bucket <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s3.Bucket(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amzn-s3-demo-bucket'</span>)</span>
<span id="cb10-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> bucket.objects.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>():</span>
<span id="cb10-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(obj.key)</span></code></pre></div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pyodbc boto3</span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb12-3">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rds'</span>, region_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb12-4">token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.generate_db_auth_token(DBHostname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>, Port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,DBUsername<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>, Region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb12-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(token)</span>
<span id="cb12-6">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{PostgreSQL}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb12-7">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span>,</span>
<span id="cb12-8">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span>,</span>
<span id="cb12-9">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token,</span>
<span id="cb12-10">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>,</span>
<span id="cb12-11">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb12-12">                   )</span>
<span id="cb12-13">con</span></code></pre></div>
</div>
<div id="tabset-4-3" class="tab-pane" aria-labelledby="tabset-4-3-tab">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pyodbc boto3</span></code></pre></div>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb14-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb14-3">DB_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span></span>
<span id="cb14-4">CLUSTER_IDENTIFIER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster'</span></span>
<span id="cb14-5">DB_USER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span></span>
<span id="cb14-6">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'redshift'</span>, region_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb14-7">cluster_creds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.get_cluster_credentials(DbUser<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_USER, DbName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME, ClusterIdentifier<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CLUSTER_IDENTIFIER, AutoCreate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb14-8">temp_user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbUser'</span>]</span>
<span id="cb14-9">temp_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbPassword'</span>]</span>
<span id="cb14-10">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{Redshift}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb14-11">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME,</span>
<span id="cb14-12">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_user,</span>
<span id="cb14-13">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_password,</span>
<span id="cb14-14">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com'</span>,</span>
<span id="cb14-15">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span>,</span>
<span id="cb14-16">                   )</span>
<span id="cb14-17">con</span></code></pre></div>
</div>
<div id="tabset-4-4" class="tab-pane" aria-labelledby="tabset-4-4-tab">
<p>For Python developers the <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/athena.html">boto3</a> package can be used. More commonly, users connect directly to the data stored in S3.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<p>For more in depth information and examples, see:</p>
<ul>
<li>The Workbench User Guide section on <a href="https://docs.posit.co/ide/server-pro/user/posit-workbench/managed-credentials/aws.html">Workbench managed AWS credentials</a></li>
<li>The Connect User Guide <a href="https://docs.posit.co/connect/user/oauth-integrations/">OAuth Integrations</a> section for more detail on these concepts</li>
<li>The <a href="https://docs.posit.co/connect/cookbook/">Connect Cookbook</a> for complete examples of using OAuth credentials for deployment</li>
<li>The Connect Admin Guide section on <a href="https://docs.posit.co/connect/admin/integrations/oauth-integrations/">Oauth Integrations</a></li>
</ul>
</section>
</section>
<section id="workbench-developer-creds" class="level4">
<h4 class="anchored" data-anchor-id="workbench-developer-creds">Developer Managed Credentials</h4>
<p>If Workbench isn’t managing credentials on the behalf of users then users need the additional step of populating their credentials.</p>
<p>The AWS CLI can be used to retrieve a functional token with <code>aws rds generate-db-auth-token --hostname cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com --port 5432 --region us-east-2 --username username</code>. This will grant a temporary token that by default lasts for 15 minutes. The developer will need to manually refresh the token as needed while working, unlike the case where Workbench will manage the token on their behalf.</p>
<p>After loading the token and performing appropriate authentication steps then the above steps can be taken to request resources from AWS.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-6-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-1" aria-controls="tabset-6-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-6-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-2" aria-controls="tabset-6-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-6-1" class="tab-pane active" aria-labelledby="tabset-6-1-tab">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(odbc)</span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DBI)</span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build a token </span></span>
<span id="cb15-6">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_auth_token</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">endpoint =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>) </span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the token with the ODBC connection </span></span>
<span id="cb15-9">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb15-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PostgreSQL"</span>,</span>
<span id="cb15-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>,</span>
<span id="cb15-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo_db"</span>,</span>
<span id="cb15-13">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>,</span>
<span id="cb15-14">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> token,</span>
<span id="cb15-15">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb15-16">                      )</span>
<span id="cb15-17"></span>
<span id="cb15-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gather temp credentials </span></span>
<span id="cb15-19">temp_credentials <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> redshift<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_cluster_credentials</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbUser =</span> DB_USER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbName =</span> DB_NAME, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ClusterIdentifier =</span> CLUSTER_IDENTIFIER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AutoCreate =</span> F)</span>
<span id="cb15-20"></span>
<span id="cb15-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the temp credentials with the ODBC connection</span></span>
<span id="cb15-22">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb15-23">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Redshift"</span>,</span>
<span id="cb15-24">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com"</span>,</span>
<span id="cb15-25">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> DB_NAME,</span>
<span id="cb15-26">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbUser,</span>
<span id="cb15-27">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbPassword,</span>
<span id="cb15-28">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span></span>
<span id="cb15-29">                      )</span></code></pre></div>
</div>
<div id="tabset-6-2" class="tab-pane" aria-labelledby="tabset-6-2-tab">
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pyodbc boto3</span></code></pre></div>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb17-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build a token </span></span>
<span id="cb17-5">token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.generate_db_auth_token(DBHostname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>, Port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,DBUsername<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>, Region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the token with the ODBC connection </span></span>
<span id="cb17-8">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{PostgreSQL}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb17-9">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span>,</span>
<span id="cb17-10">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span>,</span>
<span id="cb17-11">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token,</span>
<span id="cb17-12">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>,</span>
<span id="cb17-13">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb17-14">                   )</span>
<span id="cb17-15"></span>
<span id="cb17-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gather temp credentials </span></span>
<span id="cb17-17">DB_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span></span>
<span id="cb17-18">CLUSTER_IDENTIFIER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster'</span></span>
<span id="cb17-19">DB_USER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span></span>
<span id="cb17-20">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'redshift'</span>, region_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb17-21">cluster_creds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.get_cluster_credentials(DbUser<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_USER, DbName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME, ClusterIdentifier<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CLUSTER_IDENTIFIER, AutoCreate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb17-22">temp_user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbUser'</span>]</span>
<span id="cb17-23">temp_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbPassword'</span>]</span>
<span id="cb17-24"></span>
<span id="cb17-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the temp credentials with the ODBC connection</span></span>
<span id="cb17-26">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{Redshift}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb17-27">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME,</span>
<span id="cb17-28">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_user,</span>
<span id="cb17-29">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_password,</span>
<span id="cb17-30">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com'</span>,</span>
<span id="cb17-31">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span>,</span>
<span id="cb17-32">                   )</span></code></pre></div>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="one-to-many-credential-examples" class="level2">
<h2 class="anchored" data-anchor-id="one-to-many-credential-examples">One-to-many Credential Examples</h2>
<section id="other-environments-ie-connect-etc" class="level3">
<h3 class="anchored" data-anchor-id="other-environments-ie-connect-etc">Other Environments (IE Connect, etc)</h3>
<p>In this section we will describe authentication patterns for all other environments for example production environments, deployed environments, etc. In these cases typically the code is executed by a service account making only non-interactive authentication methods possible.</p>
</section>
<section id="example-access-patterns-1" class="level3">
<h3 class="anchored" data-anchor-id="example-access-patterns-1">Example Access Patterns</h3>
<section id="trusted-creds-iam" class="level4">
<h4 class="anchored" data-anchor-id="trusted-creds-iam">Grant trusted access to resource from VM using an IAM instance profile and policy</h4>
<p>Trusted access between the server running the content and the resource can be granted using an IAM instance profile and policy. In this case all content running on the server has access to the resource.</p>
<section id="aws-configuration-1" class="level5">
<h5 class="anchored" data-anchor-id="aws-configuration-1">AWS Configuration</h5>
<p>Instead of assigning the roles to the IAM user it can be assigned to the AWS EC2 instance, slurm environment, or k8s cluster to allow access. This will broadlly allow access to that resource specifically for only that environment.</p>
<p>In this case the admin will need to:</p>
<ul>
<li>Create an AWS role that has the correct trusted entity type (for example, EC2)</li>
<li>Create a custom policy that provides access to the needed resources</li>
<li>Attach the IAM role to the environment (for example, the EC2 server)</li>
<li>Verify network connectivity</li>
</ul>
<p>See the AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html">use IAM roles to grant permissions to applications running on EC2 instances</a> and the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html">EC2 IAM roles</a> pages for more details.</p>
</section>
</section>
<section id="keypair-creds" class="level4">
<h4 class="anchored" data-anchor-id="keypair-creds">Developer Managed Credentials</h4>
<p>If granting access through a trusted relationship between the VM and the resource isn’t feasible, then a non-interactive authentication method can be used like a developer managed keypair using an AWS secret key and access key. However this approach comes with security risks if the keypair isn’t closely guarded. In this case <a href="https://solutions.posit.co/connections/db/best-practices/managing-credentials/">securing credentials</a> is critical.</p>
<p>The documentation for <a href="https://www.paws-r-sdk.com/">paws</a> and <a href="https://pypi.org/project/boto3/">boto3</a> have extensive examples using keypair authentication.</p>



</section>
</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/aws-data-sources.html</guid>
  <pubDate>Tue, 21 Jan 2025 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/aws-new-connection.png" medium="image" type="image/png" height="78" width="144"/>
</item>
<item>
  <title>Dealing with ssh keys with ansible and pulumi</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/ansible-and-pulumi-ssh-keys.html</link>
  <description><![CDATA[ 





<p>Very specific learning for the day but if you are trying to run pulumi-with-ansible IAC and in a world of ssh key pain this bypasses the ssh-agent:</p>
<p>Pulumi.yaml</p>
<pre><code>  keypath: "~/.ssh/mykey.pem"</code></pre>
<p><strong>main</strong>.py</p>
<pre><code>pulumi.export('keypath', config.require("keypath"))</code></pre>
<p>playbook.yml</p>
<pre><code>    ansible_ssh_private_key_file: "{{ keypath }}"</code></pre>
<p>Or just add things properly to your ssh-agent (even better, start using the config):</p>
<pre><code># Set permissions 
chmod -R 400 ~/.ssh/mykey.pem # 600 is also fine

# Add keys to ssh-agent 
ssh-agent -s
eval `ssh-agent -s`
ssh-add ~/.ssh/mykeyaws.pem
ssh-add ~/.ssh/mykeyazure.pem</code></pre>



 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/ansible-and-pulumi-ssh-keys.html</guid>
  <pubDate>Wed, 02 Oct 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Handling secrets and pinning files to Posit Connect</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/secrets-and-pinning-files.html</link>
  <description><![CDATA[ 





<p>Imagine a world where you can sleep peacefully at night knowing that your secrets (that you need for connecting to data sources) are being handled responsibly and will never leak.</p>
<section id="built-in-with-your-version-control" class="level2">
<h2 class="anchored" data-anchor-id="built-in-with-your-version-control">Built in with your version control</h2>
<p>Github has secret scanning for enterprise accounts or public repositories: <a href="https://docs.github.com/en/code-security/secret-scanning/introduction/about-secret-scanning" class="uri">https://docs.github.com/en/code-security/secret-scanning/introduction/about-secret-scanning</a></p>
</section>
<section id="environment-variables" class="level2">
<h2 class="anchored" data-anchor-id="environment-variables">Environment variables</h2>
<p>When working with pulling data from secure databases or other sources a developer might find themselves in a situation of needing to provide very sensitive information, such as a password or a token, in order to access the data that is needed or to successfully deploy a project. Handling those secrets in way that doesn’t expose them in the code directly is critical and where using <a href="https://db.rstudio.com/best-practices/deployment/">environmental variable’s for securing sensitive variables</a> is strongly recommended.</p>
<p>Additionally there may be parameters that are often needed that can be accessed as a variable more easily rather than having to type in every time.</p>
<p>For both of these cases knowing how environment variables can be leveraged can be very rewarding and it is surprising how little effort it can to take to set up.</p>
</section>
<section id="python-os-package" class="level2">
<h2 class="anchored" data-anchor-id="python-os-package">Python: <code>os</code> package</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Setting a new environment variable</span></span>
<span id="cb1-4">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"API_KEY"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YOUR_API_KEY"</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieving the environment variable</span></span>
<span id="cb1-7">var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable_name"</span>]</span></code></pre></div>
</section>
<section id="r-usethis-package" class="level2">
<h2 class="anchored" data-anchor-id="r-usethis-package">R: <code>usethis</code> package</h2>
<p><code>usethis</code> has a function for creating and editing the .Renviron file:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(usethis)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Edit the global .Renviron file</span></span>
<span id="cb2-4">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_environ</span>()</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Edit the project specific .Renviron file</span></span>
<span id="cb2-7">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_environ</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scope =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project"</span>)</span></code></pre></div>
<p>Add the variables to that file in the format variable_name = “variable_value” and save it. Restart the session so the new environment variables will be loaded with ctrl shift f10 or through the RStudio IDE with session -&gt; restart R.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Saved variables can be accessed with:</span></span>
<span id="cb3-2">variable_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable_name"</span>)</span></code></pre></div>
<p>While it’s recommended to add env vars to the environ file and not use in your code (otherwise it defeats the point), you can set an env var on the fly with:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>)</span></code></pre></div>
</section>
<section id="r-working-with-the-.renviron-file" class="level2">
<h2 class="anchored" data-anchor-id="r-working-with-the-.renviron-file">R: Working with the .Renviron file</h2>
<p>When R starts it loads a bunch of variables, settings, and configs for the user. This is really powerful and some of the magic for how it can work so apparently seamlessly.</p>
<p>However for power users we can leverage these behind the scenes config files so that we can include such things as variables in our project without including it in our code. The .Renviron file is the one most commonly interacted with for adding sensitive variables to a project in order to protect them from being exposed in the code.</p>
<p>With increased use of these behind the scenes config files and the growing direction of arranging code into projects there was the development of giving, on startup, having multiple options for each config file that can be loaded depending on what the user specifies. Broadly speaking there are two levels of config files: - User - Project</p>
<p>On startup, since R is trying to make things as seamless as possible for the user, it will use some logic to figure out which config to use. It will assume that if a project level config exists it should load that one (and not any others). If that project level config doesn’t exist, then it will default to the user level config. For more details on the different config files and the nuances see <a href="https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">Managing R with .Rprofile, .Renviron, Rprofile.site, Renviron.site, rsession.conf, and repos.conf</a>.</p>
<p>Just to re-iterate the key takeaway: When in doubt note that the <strong>project level file is given preference over user level config files</strong>. Only if the project level config file doesn’t exist will the user level file be sourced/pulled in.</p>
<p>There is a really excellent <a href="https://rviews.rstudio.com/2017/04/19/r-for-enterprise-understanding-r-s-startup/">overview of R’s startup process here</a> but in short it can be thought of this way:</p>
<section id="example-with-a-user-level-.renviron-config-file" class="level4">
<h4 class="anchored" data-anchor-id="example-with-a-user-level-.renviron-config-file">Example with a user level .Renviron config file</h4>
<p>usethis has a function for creating and editing the .Renviron file</p>
<pre><code>library(usethis)
usethis::edit_r_environ()</code></pre>
<p>Add the variables to that file in the format <code>variable_name = "variable_value"</code> and save it. Restart the session so the new environment variables will be loaded with ctrl shift f10 or through the RStudio IDE</p>
<p>Saved variables can be accessed with:</p>
<pre><code>variable_name &lt;- Sys.getenv("variable_name")</code></pre>
<p>When working in a more complex environment structure where separate project, site, and user environments are being support <a href="https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">this support article has useful information</a> with a <a href="https://rviews.rstudio.com/2017/04/19/r-for-enterprise-understanding-r-s-startup/">deeper dive into R’s startup here</a>.</p>
</section>
<section id="example-with-a-project-level-.renviron-config-file" class="level4">
<h4 class="anchored" data-anchor-id="example-with-a-project-level-.renviron-config-file">Example with a project level .Renviron config file</h4>
<p>Storing secrets securely can be done using the <a href="https://usethis.r-lib.org/reference/edit.html">edit_r_environ function from the usethis package</a>. For more overview see <a href="https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">this overview</a>.</p>
<p>Example:</p>
<pre><code>library(usethis)
usethis::edit_r_environ(scope = "project")</code></pre>
<p>Accessing those stored parameters later can be done using <code>Sys.getenv("DB_NAME")</code>.</p>
<p>Be sure to add the project level .Renviron file to your .gitignore so you aren’t exposing secrets when code is being saved to your git repository. Similarly this can be done with the <code>edit_git_ignore(scope = c("user", "project"))</code> function. For more best practices see <a href="https://db.rstudio.com/best-practices/managing-credentials">securing credentials</a>.</p>
<p>After updating these files the project should be closed and re-opened for any additions to be pulled in. One way to do this is through session -&gt; restart R (ctrl-shift-f10).</p>
</section>
<section id="gitignore" class="level4">
<h4 class="anchored" data-anchor-id="gitignore">Gitignore</h4>
<p>While typically explicitly listing the file name is the desired addition, wildcards can be added to exclude a type of file. For example: <code>*.html</code>.</p>
<p>Example excluding a number of pieces that would be undesirable to check into version control:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>.gitignore</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename=".gitignore" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># History files</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.Rhistory</span></span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.Rapp.history</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Session Data files</span></span>
<span id="cb8-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.RData</span></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example code in package build process</span></span>
<span id="cb8-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*-Ex.R</span></span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output files from R CMD build</span></span>
<span id="cb8-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*.tar.gz</span></span>
<span id="cb8-13"></span>
<span id="cb8-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output files from R CMD check</span></span>
<span id="cb8-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*.Rcheck/</span></span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RStudio files</span></span>
<span id="cb8-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.Rproj.user/</span></span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># produced vignettes</span></span>
<span id="cb8-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vignettes/*.html</span></span>
<span id="cb8-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vignettes/*.pdf</span></span>
<span id="cb8-23"></span>
<span id="cb8-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3</span></span>
<span id="cb8-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.httr-oauth</span></span>
<span id="cb8-26"></span>
<span id="cb8-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># knitr and R markdown default cache directories</span></span>
<span id="cb8-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/*_cache/</span></span>
<span id="cb8-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/cache/</span></span>
<span id="cb8-30"></span>
<span id="cb8-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Temporary files created by R markdown</span></span>
<span id="cb8-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*.utf8.md</span></span>
<span id="cb8-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*.knit.md</span></span>
<span id="cb8-34"></span>
<span id="cb8-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shiny token, see https://shiny.rstudio.com/articles/shinyapps.html</span></span>
<span id="cb8-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect/</span></span>
<span id="cb8-37"></span>
<span id="cb8-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Deployment details from rsconnect-python</span></span>
<span id="cb8-39"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect-python/</span></span>
<span id="cb8-40"></span>
<span id="cb8-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Temporary files</span></span>
<span id="cb8-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.DS_Store</span></span>
<span id="cb8-43"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">__pycache__</span></span>
<span id="cb8-44"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.ipynb_checkpoints</span></span>
<span id="cb8-45"></span>
<span id="cb8-46"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rmarkdown-notebook/flights.csv</span></span>
<span id="cb8-47"></span>
<span id="cb8-48"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.venv</span></span>
<span id="cb8-49"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">venv</span></span>
<span id="cb8-50"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env</span></span>
<span id="cb8-51"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.Rprofile</span></span>
<span id="cb8-52"></span>
<span id="cb8-53"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/.luarc.json</span></span>
<span id="cb8-54"></span>
<span id="cb8-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># OS and python artifacts</span></span>
<span id="cb8-56"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.DS_Store</span></span>
<span id="cb8-57"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">__pycache__/</span></span>
<span id="cb8-58"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*.py[cod]</span></span>
<span id="cb8-59"></span>
<span id="cb8-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docs artifacts</span></span>
<span id="cb8-61"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/docs/_site</span></span>
<span id="cb8-62"></span>
<span id="cb8-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Package Manager license</span></span>
<span id="cb8-64"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/ppm.lic</span></span></code></pre></div>
</div>
</section>
<section id="example-with-project-level-github-secrets-for-environment-variables" class="level4">
<h4 class="anchored" data-anchor-id="example-with-project-level-github-secrets-for-environment-variables">Example with project level github secrets for environment variables</h4>
<p>Another approach, particularly useful when automating testing and deployments using github actions, is to include the environment variables as secrets. Once this has been added through the git UI for the project they can then be referenced in the relevant deployment .yaml file with something like <code>CONNECT_ENV_SET_ZD_USER: ${{ secrets.ZD_USER }}</code>. In the R scripts they will be referenced as usual with something like <code>Sys.getenv("DB_NAME")</code>.</p>
</section>
<section id="references-for-adding-environment-variables-through-the-connect-ui" class="level4">
<h4 class="anchored" data-anchor-id="references-for-adding-environment-variables-through-the-connect-ui">References for adding environment variables through the Connect UI</h4>
<p>Starting with version 1.6, RStudio Connect allows <a href="https://docs.rstudio.com/connect/admin/security-and-auditing/#application-environment-variables">Environment Variables</a>. The variables are encrypted on-disk, and in-memory.</p>
<p>This can be done at the project level with <a href="https://db.rstudio.com/best-practices/deployment/">securing deployment</a> through the <a href="https://support.rstudio.com/hc/en-us/articles/228272368-Managing-your-content-in-RStudio-Connect">Connect UI</a>.</p>
</section>
</section>
<section id="handling-secret-files" class="level2">
<h2 class="anchored" data-anchor-id="handling-secret-files">Handling secret files</h2>
<p>Options:</p>
<ul>
<li>base64 encode the json string, set an environment variable, read the env var, and base64 decode it - If it fits in an env var, you could always cache it from the env var to your temp dir right before you use</li>
<li>Save it somewhere on Connect, let developers know the path</li>
<li>Use a supervisor script to save into the sandbox environment</li>
<li>Possibly save it as a pin?</li>
</ul>
<section id="useful-linux-commands-and-generating-a-dummy-key-file" class="level3">
<h3 class="anchored" data-anchor-id="useful-linux-commands-and-generating-a-dummy-key-file">Useful linux commands and generating a dummy key file</h3>
<pre><code># cd ~/.ssh
openssl genrsa -out test_key 4096
openssl rsa -in test_key -pubout -out test_key.pub
openssl pkcs8 -topk8 -inform pem -in test_key -outform PEM -v2 aes-256-cbc -out test_key.p8</code></pre>
<ul>
<li>The second command generate a RDS private key (unencrypted). https://www.openssl.org/docs/man1.1.1/man1/openssl-genrsa.html</li>
<li>The third command generate a public key for the private key above.</li>
<li>The fourth command generate an encrypted private key using a cipher aes-256-cbc. Please refer the following URL for more about AES 256 CBC.https://datatracker.ietf.org/doc/html/rfc3602</li>
</ul>
<pre><code># Set permissions 
chmod -R 400 ~/.ssh/mykey.pem 

# Add key to ssh-agent 
ssh-agent -s
eval `ssh-agent -s`
ssh-add ~/.ssh/mykey.pem</code></pre>
<p>If you already have a ssh key and want to get the key.pub public key info:</p>
<pre><code>ssh-keygen -y -f ~/.ssh/mykey.pem
ssh-keygen -y -f ~/.ssh/mykey.pem &gt; key.pub</code></pre>
</section>
<section id="pin-the-key-to-connect" class="level3">
<h3 class="anchored" data-anchor-id="pin-the-key-to-connect">Pin the key to Connect</h3>
<section id="setup" class="level4">
<h4 class="anchored" data-anchor-id="setup">Setup</h4>
<p>Env variables that need to be set are:</p>
<pre><code>CONNECT_SERVER=&lt;server, eg https://colorado.posit.co&gt;
CONNECT_API_KEY=&lt;API key from Connect server&gt;</code></pre>
</section>
<section id="code-for-pinning-a-file" class="level4">
<h4 class="anchored" data-anchor-id="code-for-pinning-a-file">Code for pinning a file</h4>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb13-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pins)</span>
<span id="cb13-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rsconnect)</span>
<span id="cb13-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(usethis)</span>
<span id="cb13-8"></span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Check our environment variables</span></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># usethis::edit_r_environ()</span></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Needs: </span></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CONNECT_SERVER=&lt;server&gt;</span></span>
<span id="cb13-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CONNECT_API_KEY=&lt;API key from Connect server&gt;</span></span>
<span id="cb13-14"></span>
<span id="cb13-15">board <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">board_connect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">auth =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"envvar"</span>)</span>
<span id="cb13-16"></span>
<span id="cb13-17">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_upload</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paths=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key"</span>)</span>
<span id="cb13-18">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_upload</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paths=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key.p8"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key-p8"</span>)</span>
<span id="cb13-19">board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_upload</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paths=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key.pub"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key-pub"</span>)</span>
<span id="cb13-20"></span>
<span id="cb13-21">cache_path<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>board <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pin_download</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key"</span>)</span>
<span id="cb13-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(cache_path)</span></code></pre></div>
</section>
<section id="python" class="level4">
<h4 class="anchored" data-anchor-id="python">Python</h4>
<p>Python pins package has parity: <a href="https://rstudio.github.io/pins-python/reference/pin_upload.html#pins.boards.BaseBoard.pin_upload" class="uri">https://rstudio.github.io/pins-python/reference/pin_upload.html#pins.boards.BaseBoard.pin_upload</a></p>
</section>
<section id="encode-key-file-as-base64-json-string" class="level4">
<h4 class="anchored" data-anchor-id="encode-key-file-as-base64-json-string">Encode key file as base64 json string</h4>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">librar</span>(readr)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(openssl)</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Locally, encode the key and save as environment variable</span></span>
<span id="cb14-5">key <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> openssl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base64_encode</span>(readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_file</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_key.pub"</span>))</span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save as env var</span></span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TEST_SSH_KEY"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span>)</span>
<span id="cb14-9">test_key_set <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TEST_SSH_KEY"</span>)</span>
<span id="cb14-10"></span>
<span id="cb14-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a tempfile in the sandboxed current location</span></span>
<span id="cb14-12">cached_key <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>()</span>
<span id="cb14-13"></span>
<span id="cb14-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cache the SSH file from the environment variable</span></span>
<span id="cb14-15">readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(openssl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base64_decode</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TEST_SSH_KEY"</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> cached_key)</span></code></pre></div>
<p>it may be useful to nest in an if statement so that this only happens on Connect, but on Workbench it will still use the managed credentials:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use SSH key if on Connect, otherwise use managed credentials</span></span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RSTUDIO_PRODUCT"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CONNECT"</span>){</span>
<span id="cb15-3">}</span></code></pre></div>


</section>
</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/secrets-and-pinning-files.html</guid>
  <pubDate>Tue, 01 Oct 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Python projects set up and maintenance</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/python-projects-setup.html</link>
  <description><![CDATA[ 





<p>Have you ever tried to use someone else’s repo and run into issues with package installation and breaking package versions? Or tried to work on a really old repository and been foiled while trying to set it up?</p>
<p>Projects have a standards problem - we need to realize that all the work we are doing exist in the framework of a project. By defining the elements of a project we can identify the parts that need to be made transparent and the tools (renv/venv) for making that happen.</p>
<p>What is a project?</p>
<ul>
<li>Code, data files, config files, images/assets</li>
<li>Defined / reproducible environment</li>
<li>Defined language version</li>
<li>Defined package versions and requirements</li>
</ul>
<p>What it’s not:</p>
<ul>
<li>Your editor</li>
<li>The actual packages / repositories</li>
<li>System dependencies</li>
</ul>
<section id="reproducible-package-environments-for-python---at-a-glance" class="level2">
<h2 class="anchored" data-anchor-id="reproducible-package-environments-for-python---at-a-glance">Reproducible package environments for Python - At a glance</h2>
<p>Step 1: Use scanned Python packages</p>
<p><code>Pip</code> can be already set up for you by your admins (with <code>sudo pip config set --global global.index-url https://pkg.current.posit.team/blocked-python/latest/simple</code>) whenever you use Workbench to use packages from package manager, no configuration needed. Check with:</p>
<pre><code>pip config list

# pip from stackoverflow article: https://stackoverflow.com/questions/51874974/how-can-i-get-pip-to-list-the-repositories-its-using
pip download --no-cache-dir "foo&lt;0" 2&gt;&amp;1 | grep Looking

# uv: https://docs.astral.sh/uv/guides/integration/alternative-indexes/
cat pyproject.toml</code></pre>
<p>As a user, configure pip to use your repository of choice with:</p>
<pre><code>pip config set global.index-url https://pkg.current.posit.team/blocked-python/latest/simple
pip config set --global global.trusted-host pkg.current.posit.team</code></pre>
<p>Alternatively, for a specific project add these to the top of the <code>requirements.txt</code> file</p>
<pre><code>--index-url https://pkg.current.posit.team/blocked-python/latest/simple
--trusted-host pkg.current.posit.team</code></pre>
<p>Step 2: Use environment tracking</p>
<pre><code># Activate your virtual environment: 
python -m venv .venv
. .venv/bin/activate</code></pre>
<pre><code># Take a snapshot of the environment: 
pip freeze &gt; requirements.txt</code></pre>
<p>Step 3: Easy collaboration</p>
<pre><code># Send a colleague the link to your project on git, they'll restore your environment with:
pip install -r requirements.txt</code></pre>
</section>
<section id="python-projects-setup" class="level2">
<h2 class="anchored" data-anchor-id="python-projects-setup">Python projects setup</h2>
<p>Setup the <code>venv</code> environment:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv .venv</span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> .venv/bin/activate</span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .venv\Scripts\activate # Windows</span></span></code></pre></div>
<p>Upgrade pip and then install needed packages:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip wheel setuptools rsconnect-python</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
<p>Run the application:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">shiny</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--reload</span> app.py</span></code></pre></div>
<p>Leave a virtual environment with:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deactivate</span></span></code></pre></div>
</section>
<section id="jupyter-kernels-quarto-and-vs-code" class="level2">
<h2 class="anchored" data-anchor-id="jupyter-kernels-quarto-and-vs-code">Jupyter kernels, Quarto, and VS Code</h2>
<pre><code># Create a venv and install packages
python -m venv .venv
. .venv/bin/activate
source .venv/bin/activate
pip install -r requirements.txt
pip install --upgrade pip

# Register as kernel
pip install ipykernel jupyter
python3 -m ipykernel install --name "new_venv" --user

# Check for missing dependencies
python -m pip check

# Automatically uprade all packages from requirements.txt 
pip install pip-upgrader
pip-upgrade requirements.txt
pip install -r requirements.txt

# Freeze your requirements
pip freeze &gt; requirements.txt

Requires jupyter extension</code></pre>
<p>For quarto and vs code:</p>
<blockquote class="blockquote">
<p>If you create a virtual environment with venv in the env/ directory as described above, Visual Studio Code should automatically discover that environment when you load a workspace from the environment’s parent directory. Source: https://quarto.org/docs/projects/virtual-environments.html#vs-code</p>
</blockquote>
<pre><code>python3 -m venv env
source env/bin/activate
python3 -m pip freeze &gt; requirements.txt
python3 -m pip install -r requirements.txt</code></pre>
</section>
<section id="deploy" class="level2">
<h2 class="anchored" data-anchor-id="deploy">Deploy</h2>
<section id="rsconnect-python-cli" class="level3">
<h3 class="anchored" data-anchor-id="rsconnect-python-cli">rsconnect-python CLI</h3>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> deploy shiny .</span></code></pre></div>
</section>
<section id="git-backed" class="level3">
<h3 class="anchored" data-anchor-id="git-backed">Git-backed</h3>
<p>Update the code, and then run:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> write-manifest shiny <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--overwrite</span> .</span></code></pre></div>
<p>Commit the new <code>manifest.json</code> file to the git repo along with the code.</p>
</section>
</section>
<section id="project-updates" class="level2">
<h2 class="anchored" data-anchor-id="project-updates">Project updates</h2>
<p>Create the requirements file:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip freeze <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> requirements.txt</span></code></pre></div>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> write-manifest shiny .</span></code></pre></div>
<p>If you are running into deploy issues where there are breaking packages you can edit the requirements file explicitly:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># requirements.txt generated by rsconnect-python on 2022-09-21 14:59:58.865441</span></span>
<span id="cb17-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">streamlit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>=1.11.0</span></code></pre></div>
<p>To use a Package Manager repository with a specific project defined by a <code>requirements.txt</code> file, add <code>-i [repositoryURL]</code> to the top of your file, for example:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-i</span> https://packagemanager.posit.co/pypi/latest/simple</span>
<span id="cb18-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pandas</span></span>
<span id="cb18-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scipy</span></span></code></pre></div>
<p>How to configure a pypi repository globally (using pip.conf): <a href="https://docs.posit.co/resources/install-python/#optional-configure-a-pypi-repository" class="uri">https://docs.posit.co/resources/install-python/#optional-configure-a-pypi-repository</a></p>
</section>
<section id="troubleshooting" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h2>
<section id="issues-with-python-not-being-on-path" class="level3">
<h3 class="anchored" data-anchor-id="issues-with-python-not-being-on-path">Issues with Python not being on path</h3>
<p>Set it manually to an installed Python version with:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> python=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/opt/python/3.9.17/bin/python"</span></span></code></pre></div>
<p>Set it in your .bashrc on mac or linux so that it is set for your profile every time you log in (typically this is located in the root directory of your home folder):</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add this to your .bashrc</span></span>
<span id="cb20-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/python/3.11.9/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span></code></pre></div>
<p>Check for the available python versions (if typically installed):</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ld</span> /opt/python/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p><a href="https://docs.posit.co/connect/user/shiny-python/">Posit Connect User Guide: Shiny for Python</a></p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/python-projects-setup.html</guid>
  <pubDate>Fri, 13 Sep 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>R projects set up and maintenance</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/r-projects-setup.html</link>
  <description><![CDATA[ 





<p>Have you ever tried to use someone else’s repo and run into issues with package installation and breaking package versions? Or tried to work on a really old repository and been foiled while trying to set it up?</p>
<p>Projects have a standards problem - we need to realize that all the work we are doing exist in the framework of a project. By defining the elements of a project we can identify the parts that need to be made transparent and the tools (renv/venv) for making that happen.</p>
<p>What is a project?</p>
<ul>
<li>Code, data files, config files, images/assets</li>
<li>Defined / reproducible environment</li>
<li>Defined language version</li>
<li>Defined package versions and requirements</li>
</ul>
<p>What it’s not:</p>
<ul>
<li>Your editor</li>
<li>The actual packages / repositories</li>
<li>System dependencies</li>
</ul>
<section id="reading" class="level1">
<h1>Reading</h1>
<p>Environment management:</p>
<ul>
<li>Get started with renv in the RStudio IDE: <a href="https://docs.posit.co/ide/user/ide/guide/environments/r/renv.html">https://docs.posit.co/ide/user/ide/guide/environments/r/renv.html</a></li>
<li>You should be using renv: <a href="https://www.youtube.com/watch?v=GwVx_pf2uz4">https://www.youtube.com/watch?v=GwVx_pf2uz4</a></li>
<li>Using Public Package Manager : <a href="https://support.rstudio.com/hc/en-us/articles/360046703913-FAQ-for-RStudio-Public-Package-Manager">https://support.rstudio.com/hc/en-us/articles/360046703913-FAQ-for-RStudio-Public-Package-Manager</a></li>
</ul>
<section id="reproducible-package-environments-for-r---at-a-glance" class="level2">
<h2 class="anchored" data-anchor-id="reproducible-package-environments-for-r---at-a-glance">Reproducible package environments for R - At a glance</h2>
<p>Step 1: Use pre-compiled packages</p>
<ul>
<li>Go to Public Package Manager</li>
<li>Click on Get Started -&gt; Setup -&gt; Distribution and select your OS -&gt; Select Latest or Freeze and follow the instructions below the calendar.</li>
<li>For example:</li>
</ul>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">REPO_NAME =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.rstudio.com/all/latest"</span>))</span></code></pre></div>
<p>Step 2: Use environment tracking</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up a new version controlled R project and install renv:</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv"</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(renv)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize your project with renv and take a snapshot:</span></span>
<span id="cb2-6">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">init</span>()</span>
<span id="cb2-7">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update all packages, or revert back to an earlier snapshot:</span></span>
<span id="cb2-10">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()</span>
<span id="cb2-11">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">revert</span>()</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># History is saved into version control:</span></span>
<span id="cb2-14">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">history</span>()</span></code></pre></div>
<p>Step 3: Easy collaboration</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Have your colleague configure their repository to match yours: </span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">REPO_NAME =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.rstudio.com/all/latest"</span>)) </span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Send a colleague the link to your project on git, they'll restore your environment with:</span></span>
<span id="cb3-5">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>()</span></code></pre></div>
</section>
<section id="r-projects-setup" class="level2">
<h2 class="anchored" data-anchor-id="r-projects-setup">R projects setup</h2>
<p>Setup the <code>renv</code> environment:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>()</span>
<span id="cb4-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>()</span></code></pre></div>
<p>To run the app either open <code>app/app.R</code> and click the “Run App” button at the top of the IDE code pane or use:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runApp</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span>)</span></code></pre></div>
</section>
<section id="deployment" class="level2">
<h2 class="anchored" data-anchor-id="deployment">Deployment</h2>
<section id="push-button" class="level3">
<h3 class="anchored" data-anchor-id="push-button">Push Button</h3>
<p>Open <code>app/app.R</code> and use the blue publish icon in the upper right corner of the IDE code pane.</p>
</section>
<section id="rsconnect-package" class="level3">
<h3 class="anchored" data-anchor-id="rsconnect-package">rsconnect package</h3>
<p>You can also deploy using the rsconnect package:</p>
<pre><code>rsconnect::deployApp(
  appDir = "app",
  appTitle = "Shiny Penguins"
)</code></pre>
</section>
<section id="git-backed" class="level3">
<h3 class="anchored" data-anchor-id="git-backed">Git-backed</h3>
<p>Update the code, and then run:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">rsconnect<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeManifest</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span>)</span></code></pre></div>
<p>Commit the new <code>manifest.json</code> file to the git repo along with the code.</p>
</section>
</section>
<section id="project-updates" class="level2">
<h2 class="anchored" data-anchor-id="project-updates">Project updates</h2>
<p>Use <a href="https://rstudio.github.io/renv/articles/renv.html">renv</a> to record the r package versions used</p>
<p>Create a <a href="https://docs.posit.co/connect/user/git-backed/#creating-a-manifest-file-from-r"><code>manifest.json</code> file</a> to support git-backed publishing</p>
</section>
<section id="all-about-renv" class="level2">
<h2 class="anchored" data-anchor-id="all-about-renv">All about renv</h2>
<p><strong>Why use renv?</strong></p>
<p>There is an excellent video by David Aja discussing why he started using renv at the 2022 RStudio Conference <a href="https://www.rstudio.com/conference/2022/talks/you-should-use-renv/">here</a>.</p>
<p>Ever had your code mysteriously stop working or start producing different results after upgrading packages, and had to spend hours debugging to find which package was the culprit? Ever tried to collaborate on code just to get stuck on trying to decipher various package dependencies?</p>
<p><a href="https://rstudio.github.io/renv/articles/renv.html">renv</a> helps you track and control package changes - making it easy to revert back if you need to. It works with your current methods of installing packages (<code>install.packages()</code>), and was designed to work with most data science workflows.</p>
<p>Who shouldn’t use renv?</p>
<ul>
<li>Package developers</li>
<li>?</li>
</ul>
<p># Terms</p>
<ul>
<li>R Project - a special kind of directory of files and supporting functionality.</li>
<li>Package - a collection of functions beyond base R that developers can install and use.</li>
<li>Library - a directory containing installed packages.</li>
</ul>
</section>
</section>
<section id="workflow" class="level1">
<h1>Workflow</h1>
<p>New project -&gt; updates -&gt; reverting -&gt; advanced</p>
</section>
<section id="new-project" class="level1">
<h1>New project</h1>
<p>Initialize your project with:</p>
<pre><code>library(renv)
renv::init()</code></pre>
<p>Look at the renv.lock file and see the information that has been captured about the packages supporting your project.</p>
</section>
<section id="making-updates" class="level1">
<h1>Making updates</h1>
<p>Try installing a new package and then look at the renv.lock file. What did you expect to happen? What do you see?</p>
<p>Now try running <code>renv::snapshot()</code>. What do you see now when you look at the renv.lock file?</p>
<p>The renv lock file is updated by you when you run the command to snapshot. This means you can update packages, or install new packages, without changing your lock file.</p>
</section>
<section id="how-to-revert" class="level1">
<h1>How to revert</h1>
<p>Practice updating the packages your project relies on, each time saving to git. You can see the history of your changes with:</p>
<p><code>renv::history()</code></p>
<p>If you want to revert back to an earlier snapshot you can do that with:</p>
<pre><code>## Revert to the most recent snapshot 
renv::revert()

## Alternatively we can revert to a specific snapshot by specifying the commit: 
db &lt;- renv::history()

# choose an older commit
commit &lt;- db$commit[5]

# revert to that version of the lockfile
renv::revert(commit = commit)</code></pre>
<p>Note: Currently, only Git repositories are supported by renv::history() and renv::revert().</p>
</section>
<section id="advanced-renv" class="level1">
<h1>Advanced renv</h1>
<p>There are a couple other commands that can be used depending on your workflow that are useful to know about.</p>
<p>Say that your organization has a managed package host, for example Package Manager, and is using the <a href="strategy">Shared Baseline</a>. Meaning that all developers in the organization are pointed to a snapshot of available packages frozen to a particular date when the managing team had intentionally tested and made them available. On some cadence, let’s say quarterly, the managing team goes through, performs testing again, and provides a new updated snapshot that is available for developers to switch to. There are a lot of advantages in switching with new features, resolved bugs, etc.</p>
<p>In order for developers to know that a new release has happened (that the local package dates are out of date in reference to the repo being pointed at) they can run:</p>
<pre><code>view(old.packages())</code></pre>
<p>The same process would be followed with then updating the packages, testing as needed, and then creating a new snapshot so the renv lock file is updated to the latest. This provides the added security that in case it does not pass testing the renv lock file will still point at the supported package versions and not the ones that caused the breakage.</p>
<p>One of the more recent releases of the renv package has included <a href="https://rstudio.github.io/renv/articles/profiles.html">having separate profiles for the project</a>. Meaning that a developer could have a production profile, a validation profile, and testing profile that can be easily switched between while working through their workflow towards deployment into production.</p>
<p>The renv.lock file can be manually changed to update the packages that are included with:</p>
<p><code>renv::modify()</code></p>
<p>Remove packages that are no longer needed with:</p>
<p><code>renv::clean()</code></p>
<p>Update everything to the latest for each package (according to the repository you are pointed at) with:</p>
<p><code>renv::update()</code></p>
</section>
<section id="troubleshooting" class="level1">
<h1>Troubleshooting</h1>
<p>Running a diagnostic:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diagnostics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">project =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span></code></pre></div>
<p>Add more detail to logging:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">renv.download.trace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<p>If you are having particular issue with a package and it keeps being pulled in from the cache then doing a complete purge and reinstall can be useful:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">purge</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringr"</span>)</span>
<span id="cb13-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">purge</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringi"</span>)</span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringr"</span>)</span></code></pre></div>
<p><code>renv::purge</code> removes packages completely from the package cache (which may be shared across projects) rather than just removing the package from the project which is what <code>renv::remove</code> does. This can be useful if a package which had previously been installed in the cache has become corrupted or unusable, and needs to be re-installed.</p>
<p>It may also be useful to verify both the OS you are currently useing as well as checking that the repository you are pointing towards is using the correct OS if it is pulling in the binaries.</p>
<p>For debian/ubuntu distributions:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lsb_release</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span></span></code></pre></div>
<p>For other distributions (more broadly cross-linux compatible command):</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /etc/os-release</span></code></pre></div>
<p>Check the repository being pointed to and update it to use the URL from your package manager instance:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'repos'</span>)</span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">REPO_NAME =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/cran/__linux__/jammy/latest"</span>))</span></code></pre></div>
<p>Some additional options and settings:</p>
<ul>
<li><p><code>Renv</code> comes with an over-ride option for the repository that could be recommended for users to run prior to re-initializing projects: <a href="https://rstudio.github.io/renv/reference/config.html?q=OS#renv-config-repos-override" class="uri">https://rstudio.github.io/renv/reference/config.html?q=OS#renv-config-repos-override</a></p>
<ul>
<li>It was discussed in <a href="https://stackoverflow.com/questions/65326540/how-to-change-r-repository-cran-from-renv-lock-to-get-packages-from-an-internal">this stackoverflow post</a> with this example (run from console): <code>Sys.setenv("RENV_CONFIG_REPOS_OVERRIDE" = "your_private_package_repository_url")</code></li>
</ul></li>
<li><p>As of renv 0.13.0 where it can now construct a prefix based on fields within the system’s /etc/os-release file: <a href="https://rstudio.github.io/renv/reference/paths.html#sharing-state-across-operating-systems" class="uri">https://rstudio.github.io/renv/reference/paths.html#sharing-state-across-operating-systems</a></p></li>
</ul>
</section>
<section id="library-paths" class="level1">
<h1>Library paths</h1>
<p>Find where your library is:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.libPaths</span>()</span>
<span id="cb17-2">[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/sagemaker-user/R/x86_64-pc-linux-gnu-library/4.2"</span></span>
<span id="cb17-3">[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/opt/R/4.2.1/lib/R/library"</span> </span></code></pre></div>
<p>For example when working in a system that has a mounted share drive then would want to check that libraries are being written to that share so you get persistence. Typically this means writing to inside the home directory. Check mounted drives with: <code>df -h</code></p>
<p>The next thing to check is permissions, for example with this command that shows full directory tree permissions</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namei</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> /home/sagemaker-user/test/r-examples</span></code></pre></div>
</section>
<section id="migrations" class="level1">
<h1>Migrations</h1>
<p>Consider using the script in this gist to migrate R and Python libraries: <a href="https://gist.github.com/edavidaja/5996ffeb042df2642c77c065c07f023d" class="uri">https://gist.github.com/edavidaja/5996ffeb042df2642c77c065c07f023d</a></p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete the existing libraries</span></span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv/library"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set repo address</span></span>
<span id="cb19-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">REPO_NAME =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://colorado.posit.co/rspm/all/__linux__/jammy/latest"</span>))</span>
<span id="cb19-6"></span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (optional) add repo address to r profile</span></span>
<span id="cb19-8">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_profile</span>()</span>
<span id="cb19-9"></span>
<span id="cb19-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart R session</span></span>
<span id="cb19-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.rs.restartR</span>()</span>
<span id="cb19-12"></span>
<span id="cb19-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Re-install libraries</span></span>
<span id="cb19-14">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Activate the existing venv</span></span>
<span id="cb20-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make note of all installed packages</span></span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip freeze <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> requirements-freeze.txt</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Deactivate the venv and delete</span></span>
<span id="cb20-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deactivate</span></span>
<span id="cb20-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> .venv/</span>
<span id="cb20-10"></span>
<span id="cb20-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new virtual environment</span></span>
<span id="cb20-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv .venv</span>
<span id="cb20-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate </span>
<span id="cb20-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip wheel setuptools</span>
<span id="cb20-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements-freeze.txt</span></code></pre></div>
</section>
<section id="repositories" class="level1">
<h1>Repositories</h1>
<p>Check your current repo with: <code>options('repos')</code></p>
<p>For example, you might see: <code>https://packagemanager.rstudio.com/all/latest</code> or <code>https://cran.rstudio.com/</code>.</p>
<p>Change your repo with: <code>options(repos = c(REPO_NAME = "https://colorado.rstudio.com/rspm/cran/__linux__/focal/2022-06-29"))</code> or <code>options(repos = c(REPO_NAME = "https://packagemanager.rstudio.com/all/latest"))</code></p>
<section id="troubleshooting-1" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting-1">Troubleshooting</h2>
<p>Bioconductor and Mass and R version: <a href="https://forum.posit.co/t/mass-not-available-for-r-4-3-3/188156/2" class="uri">https://forum.posit.co/t/mass-not-available-for-r-4-3-3/188156/2</a></p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/r-projects-setup.html</guid>
  <pubDate>Fri, 13 Sep 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Job templating in Kubernetes</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/job-templating-k8s.html</link>
  <description><![CDATA[ 





<p>This short writeup addresses a need to add an additional label to Workbench sessions started in a kubernetes environment. Specifically this was for an environemnt where an external Workbench server was launching sessions into a Kubernetes cluster. The recommended way to do this is to use job templating.</p>
<section id="job-templating-for-custom-labels-for-posit-workbench-with-k8s" class="level2">
<h2 class="anchored" data-anchor-id="job-templating-for-custom-labels-for-posit-workbench-with-k8s">Job templating for custom labels for Posit Workbench with k8s</h2>
<p>These are the granular steps for taking advantage of <a href="https://docs.posit.co/ide/server-pro/job_launcher/kubernetes_plugin.html#kube-templating">kubernetes object templating</a> that would work with an external Workbench instance launching into k8s:</p>
<ol type="1">
<li>Add to <code>launcher.kubernetes.conf</code>, <code>use-templating = 1</code></li>
<li>Use the launcher CLI to create the <code>job.tpl</code> and <code>service.tpl</code> files (see below for an example)</li>
<li>Confirm that the version called out in <code>job.tpl</code> and <code>service.tpl</code> (using <code>head job.tpl</code> and <code>head service.tpl</code> for example) are compatible with your workbench version (version 2.3.1 is latest)</li>
<li>Create <code>rstudio-library-templates-data.tpl</code> - for now this is a helm-only construct so it will need to be copied from the helm output (<a href="https://github.com/rstudio/helm/tree/main/charts/rstudio-workbench">helm repo</a>) (see example below for doing this with the <code>helm template</code> command)</li>
<li>Copy <code>job.tpl</code>, <code>service.tpl</code>, and <code>rstudio-library-templates-data.tpl</code> into the launcher scratch directory on the host machine (in this case your Workbench server outside of k8s) (see below for default for where this is located) and make sure that rstudio-server has read/write access</li>
</ol>
<p>For adding the new labels/values, here are good options:</p>
<ul>
<li>Modify <code>rstudio-library-templates-data.tpl</code> directly (either in the header bit, or lower under values/labels)</li>
<li>Modify the values in the helm values file (<a href="https://github.com/rstudio/helm/blob/5fb2ad5cecf84680c8e64e4d8123df9d4e0c1cc7/charts/rstudio-workbench/values.yaml#L82-L109">example</a>)</li>
<li>Recommended: Add the values at time of making the template, IE with <code>--set launcher.templateValues.job.labels.test=value \</code> (see below)</li>
</ul>
<p>From talking with a colleague they shared this example using helm to create the template with the added label values:</p>
<pre><code>helm template my-release rstudio/rstudio-workbench \
 --set launcher.useTemplates=true \
 --set launcherPem=test \
 --set session.defaultConfigMount=false \
 --set launcher.templateValues.job.labels.test=value \
 --set launcher.templateValues.job.labels.other=something-else \
 | less</code></pre>
<p>In that helm example:</p>
<ul>
<li><code>session.defaultConfigMount=false</code> prevents defining volumes and volumeMounts that are only relevant for the helm chart</li>
<li><code>launcherPem=test</code> speeds up templating</li>
<li><code>launcher.useTemplates=true</code> turns on templating (instead of job json overrides)</li>
</ul>
<p><strong>What if things go wrong?</strong></p>
<p>The rstudio-kubernetes-launcher CLI can <a href="https://docs.posit.co/ide/server-pro/job_launcher/kubernetes_plugin.html#validating-templates">verify templates</a> now!</p>
<p><strong>Playing with the rstudio-kubernetes-launcher CLI:</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/usr/lib/rstudio-server/bin/rstudio-kubernetes-launcher</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/usr/lib/rstudio-server/bin/rstudio-kubernetes-launcher</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--generate-templates</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--scratch-path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/tmp/hello</span></code></pre></div>
<p><strong>Default scratch path:</strong></p>
<pre><code> # mount into the default scratch-path
 - name: session-templates
  mountPath: "/var/lib/rstudio-launcher/Kubernetes/rstudio-library-templates-data.tpl"
  subPath: "rstudio-library-templates-data.tpl"
 - name: session-templates
  mountPath: "/var/lib/rstudio-launcher/Kubernetes/job.tpl"
  subPath: "job.tpl"
 - name: session-templates
  mountPath: "/var/lib/rstudio-launcher/Kubernetes/service.tpl"
  subPath: "service.tpl"</code></pre>
</section>
<section id="another-approach-using-json-over-rides-on-posit-workbench-with-k8s" class="level2">
<h2 class="anchored" data-anchor-id="another-approach-using-json-over-rides-on-posit-workbench-with-k8s">Another approach using json over-rides on Posit Workbench with k8s</h2>
<p>Potentially json over-rides could work but my understanding is that this would overwrite ALL labels.</p>
<p>use this to add a label:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/launcher.kubernetes.profiles.conf</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="/etc/rstudio/launcher.kubernetes.profiles.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">job-json-overrides=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/spec/template/spec/labels"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/rstudio/labels"</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/labels</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="/etc/rstudio/labels" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb5-2">  {</span>
<span id="cb5-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"applicationid"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"workbench"</span>,</span>
<span id="cb5-4">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"label":</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">["value"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb5-5">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/job-templating-k8s.html</guid>
  <pubDate>Wed, 21 Aug 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Google data storage and R</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/google-resources.html</link>
  <description><![CDATA[ 





<section id="overview" class="level1">
<h1>Overview</h1>
<p>Access to resources in google (bigquery, drive, etc) will depend on where the user is connecting from:</p>
<ul>
<li>Local desktop: any method is fine</li>
<li>Workbench / server web app based: “OOB” workflows or non-interactive</li>
<li>Connect / server web app non-interactive: Non-interactive only</li>
</ul>
</section>
<section id="interactive-workflow" class="level1">
<h1>Interactive workflow</h1>
<p>In order to get this working on Workbench, we need to use the OOB method so we don’t have to mess with bouncing between URL’s.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(googlesheets4)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gargle)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(googledrive)</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load/refresh existing credentials, if available</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise, go to browser for authentication and authorization (only works if not behind a proxy)</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>()</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_client_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"web"</span>)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pseudo-OOB, use this when on Workbench, Connect, etc. </span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># options(gargle_oauth_client_type = "installed") # conventional OOB - this doesn't work for me, looks like it was deprecated in 2023</span></span></code></pre></div>
</section>
<section id="hacky-workflow-aka-oauth-user-token-re-discovered" class="level1">
<h1>Hacky workflow AKA Oauth user token re-discovered</h1>
<p>The idea is to make it render once, then use the token in the cache for future authentications. This will likely need to be periodically updated (think, annually) whenever the token expires.</p>
<p>This is the least recommended because of security challenges and having to manage an ecosystem of tokens, but it’s hard to deny the appeal because it means a service account isn’t needed!</p>
<p>We’ll need to change the location of the cached token to within the project so that when we deploy to Connect it will be included. Security here is tricky since the token is an exposed file, so care should be taken.</p>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html#sidebar-1-deployment" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html#sidebar-1-deployment</a></p>
<p>Step 1: Do this once interactively to get a token</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a token interactively, but we can reuse it later</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pseudo-OOB - this will bounce us out to a webpage, but we don't have to bounce back, we'll copy a code instead that we'll use like a password</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_client_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"web"</span>) </span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># designate project-specific cache</span></span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_cache =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do anything that triggers auth, in this case I want to tie it to my email identity</span></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_email =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lisamaeanders@gmail.com"</span>)</span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">email =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lisamaeanders@gmail.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cache =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use_oob =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use a 'read only' scope, so it's impossible to edit or delete files</span></span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scopes =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drive.readonly"</span>)</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This sets an option that allows gargle to use cached tokens whenever there’s a unique match:</span></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#options(gargle_oauth_email = TRUE)</span></span></code></pre></div>
<p>Step 2: Downstream use we will reuse the token we got interactively earlier</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Revise code so it uses the pre-authorized token </span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cache =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">email =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lisamaeanders@gmail.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use_oob =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># now use googledrive</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_find</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</section>
<section id="when-deployed-in-gcp-use-existing-cloud-credentials-and-go-keyless" class="level1">
<h1>When deployed in GCP use existing cloud credentials and go “keyless”</h1>
<p>When deployed already in GCP then there is an underlying service account already assigned to your infrastructure. The gotcha is that it is unlikely that the pre-existing service account has the “scope” IE the access to what you need.</p>
<p>Additional scopes need to be added to that service account identity, for example:</p>
<ul>
<li>That authentication might be successful for BigQuery, because the service account has the scope ‘cloud-platform’</li>
<li>That authentication won’t be successful for drive, because it doesn’t have the ‘drive’ scope</li>
</ul>
<p>Additional scope is added at the GCP compute instance level either when the instance is created or the instance can be stopped and the scope added.</p>
<p>Check for GCE credentials with (super curious what this returns for you, probably worth saving the output so it can be restored in the future if needed):</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">credentials_gce</span>()</span></code></pre></div>
<p>This also means that if you are GCE and getting errors that may be because it is using that service account for access, which doesn’t have the correct scoping. You may need to remove the credentials for that account so it can try to create fresh credentials:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># removes `credentials_gce()` from gargle's registry</span></span>
<span id="cb6-2">gargle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cred_funs_add</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">credentials_gce =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span></code></pre></div>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html#embrace-credentials-available-in-certain-cloud-settings" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html#embrace-credentials-available-in-certain-cloud-settings</a></p>
</section>
<section id="non-interactive-workflow" class="level1">
<h1>Non-interactive workflow</h1>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html</a></p>
<section id="service-account-token" class="level2">
<h2 class="anchored" data-anchor-id="service-account-token">Service account token</h2>
<p>Follow <a href="https://gargle.r-lib.org/articles/get-api-credentials.html#service-account-token">these</a> steps:</p>
<ul>
<li>Create a service account</li>
<li>From the <a href="https://console.cloud.google.com">GCP Console</a>, in the target GCP Project, go to IAM &amp; Admin &gt; Service accounts</li>
<li>Assign permissions: googledrive docs does not have any explicit roles, service account used to test bigrquery has roles BigQuery Admin and Storage Admin</li>
<li>After creating the service account, click on the three dots and “actions”, manage keys, add key as json, download credentials as json file</li>
<li>This key is a secret! Consider how it should be protected</li>
<li>Provide path of json file to authentication</li>
<li>Grant the service account permissions to resources as needed (it doesn’t inherit permissions) (For example, I had to visit https://console.developers.google.com/apis/api/drive.googleapis.com/overview?project=redacted to enable access for google drive and gogle sheets, which it gave me the link to in an error message for my specific project)</li>
</ul>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html#provide-a-service-account-token-directly" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html#provide-a-service-account-token-directly</a> and <a href="https://gargle.r-lib.org/articles/get-api-credentials.html#service-account-token" class="uri">https://gargle.r-lib.org/articles/get-api-credentials.html#service-account-token</a></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use a service account token, like drive_auth(path = "/path/to/your/service-account-token.json")</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drive_auth(path = Sys.getenv("google_drive_service_account"), scopes = "drive.readonly")</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drive_auth(path = Sys.getenv("google_drive_service_account"), scopes = "drive.readonly")</span></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">credentials_service_account</span>(</span>
<span id="cb7-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#scopes = "https://www.googleapis.com/auth/userinfo.email",</span></span>
<span id="cb7-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"google_drive_service_account"</span>)</span>
<span id="cb7-7">)</span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># now use googledrive</span></span>
<span id="cb7-9">googledrive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_find</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</section>
</section>
<section id="troubleshooting" class="level1">
<h1>Troubleshooting</h1>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see user associated with current token</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_user</span>()</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List credentials </span></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cred_funs_list</span>()</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># force the OAuth web dance</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#drive_auth(email = NA)</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># provides an OAuth2 “situation report”, only relevant for oauth2 user tokens (not service accounts, etc)</span></span>
<span id="cb8-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gargle_oauth_sitrep</span>() </span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if a oauth cache is being used</span></span>
<span id="cb8-14">gargle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gargle_oauth_cache</span>()</span>
<span id="cb8-15"></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default is to cache OAuth access credentials in the folder ~/.cache/gargle between R sessions</span></span>
<span id="cb8-17"></span>
<span id="cb8-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># retrieve the currently configured OAuth client and API key, respectively.</span></span>
<span id="cb8-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># without configuring auth these are null</span></span>
<span id="cb8-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_oauth_client</span>() </span>
<span id="cb8-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_api_key</span>() </span>
<span id="cb8-22"></span>
<span id="cb8-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see your token file in the cache</span></span>
<span id="cb8-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets/"</span>)</span>
<span id="cb8-25"></span>
<span id="cb8-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For troubleshooting purposes, you can set a gargle option to see verbose output about the execution of gargle::token_fetch():</span></span>
<span id="cb8-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_verbosity =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"debug"</span>)</span>
<span id="cb8-28"></span>
<span id="cb8-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gargle uses port 1410 for auth, check if it is blocked with (on nix systems): sudo lsof -i :1410</span></span></code></pre></div>
</section>
<section id="security" class="level1">
<h1>Security</h1>
<p>Want to learn more about managing tokens? Read <a href="https://gargle.r-lib.org/articles/managing-tokens-securely.html">this</a></p>
</section>
<section id="resources" class="level1">
<h1>Resources</h1>
<ul>
<li>Exploring non-interactive auth workflows would also be really useful (and set us up for successful deployments to Connect down the road): <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html</a></li>
<li>Might also be useful to refer to the google docs on auth: <a href="https://cloud.google.com/bigquery/docs/authentication" class="uri">https://cloud.google.com/bigquery/docs/authentication</a></li>
<li>This section is also really useful: <a href="https://bigrquery.r-dbi.org/#authentication-and-authorization" class="uri">https://bigrquery.r-dbi.org/#authentication-and-authorization</a></li>
<li>Likely OOB auth is needed, with options(gargle_oob_default = TRUE)</li>
<li>“If you are interacting with R within a browser (applies to RStudio Server, Posit Workbench, Posit Cloud, and Google Collaboratory), you need OOB auth or the pseudo-OOB variant. If this does not happen automatically, you can request it explicitly with use_oob = TRUE or, more persistently, by setting an option via options(gargle_oob_default = TRUE).”</li>
<li>Reference: <a href="https://googledrive.tidyverse.org/reference/drive_auth.html" class="uri">https://googledrive.tidyverse.org/reference/drive_auth.html</a></li>
<li>Also really useful: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html</a></li>
<li>And another one that is really useful: <a href="https://bigrquery.r-dbi.org/#authentication-and-authorization" class="uri">https://bigrquery.r-dbi.org/#authentication-and-authorization</a></li>
<li>There’s an example on this page using a json file downloaded from the google developers console: <a href="https://googledrive.tidyverse.org/reference/drive_auth_configure.html#ref-examples" class="uri">https://googledrive.tidyverse.org/reference/drive_auth_configure.html#ref-examples</a></li>
<li>From the google cloud console these are the options we have for generating credentials: API key, Oauth client ID, service account. (<a href="https://console.cloud.google.com/" class="uri">https://console.cloud.google.com/</a> -&gt; API’s and Services -&gt; Create credentials)</li>
<li>Basically you (1) create a service account then (2) create a key (see <a href="https://developers.google.com/identity/protocols/oauth2/service-account" class="uri">https://developers.google.com/identity/protocols/oauth2/service-account</a>)</li>
<li>Auth from web: <a href="https://gargle.r-lib.org/articles/auth-from-web.html" class="uri">https://gargle.r-lib.org/articles/auth-from-web.html</a></li>
</ul>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/google-resources.html</guid>
  <pubDate>Fri, 21 Jun 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
</channel>
</rss>
