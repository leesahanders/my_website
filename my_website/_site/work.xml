<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lisa Anders - questionable.quarto</title>
<link>https://questionable.quarto.pub/blog/work.html</link>
<atom:link href="https://questionable.quarto.pub/blog/work.xml" rel="self" type="application/rss+xml"/>
<description>Making the most out of data</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Fri, 13 Sep 2024 06:00:00 GMT</lastBuildDate>
<item>
  <title>Python projects set up and maintenance</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/python-projects-setup.html</link>
  <description><![CDATA[ 





<section id="python-projects-setup" class="level2">
<h2 class="anchored" data-anchor-id="python-projects-setup">Python projects setup</h2>
<p>Setup the <code>venv</code> environment:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv .venv</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> .venv/bin/activate</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .venv\Scripts\activate # Windows</span></span></code></pre></div>
<p>Upgrade pip and then install needed packages:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip wheel setuptools rsconnect-python</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
<p>Run the application:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">shiny</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--reload</span> app.py</span></code></pre></div>
<p>Leave a virtual environment with:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deactivate</span></span></code></pre></div>
</section>
<section id="deploy" class="level2">
<h2 class="anchored" data-anchor-id="deploy">Deploy</h2>
<section id="rsconnect-python-cli" class="level3">
<h3 class="anchored" data-anchor-id="rsconnect-python-cli">rsconnect-python CLI</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> deploy shiny .</span></code></pre></div>
</section>
<section id="git-backed" class="level3">
<h3 class="anchored" data-anchor-id="git-backed">Git-backed</h3>
<p>Update the code, and then run:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> write-manifest shiny <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--overwrite</span> .</span></code></pre></div>
<p>Commit the new <code>manifest.json</code> file to the git repo along with the code.</p>
</section>
</section>
<section id="project-updates" class="level2">
<h2 class="anchored" data-anchor-id="project-updates">Project updates</h2>
<p>Create the requirements file:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip freeze <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> requirements.txt</span></code></pre></div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> write-manifest shiny .</span></code></pre></div>
<p>If you are running into deploy issues where there are breaking packages you can edit the requirements file explicitly:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># requirements.txt generated by rsconnect-python on 2022-09-21 14:59:58.865441</span></span>
<span id="cb9-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">streamlit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>=1.11.0</span></code></pre></div>
<p>To use a Package Manager repository with a specific project defined by a <code>requirements.txt</code> file, add <code>-i [repositoryURL]</code> to the top of your file, for example:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-i</span> https://packagemanager.posit.co/pypi/latest/simple</span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pandas</span></span>
<span id="cb10-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scipy</span></span></code></pre></div>
<p>How to configure a pypi repository globally (using pip.conf): <a href="https://docs.posit.co/resources/install-python/#optional-configure-a-pypi-repository" class="uri">https://docs.posit.co/resources/install-python/#optional-configure-a-pypi-repository</a></p>
</section>
<section id="troubleshooting" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h2>
<section id="issues-with-python-not-being-on-path" class="level3">
<h3 class="anchored" data-anchor-id="issues-with-python-not-being-on-path">Issues with Python not being on path</h3>
<p>Set it manually to an installed Python version with:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> python=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/opt/python/3.9.17/bin/python"</span></span></code></pre></div>
<p>Set it in your .bashrc on mac or linux so that it is set for your profile every time you log in (typically this is located in the root directory of your home folder):</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add this to your .bashrc</span></span>
<span id="cb12-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/python/3.11.9/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span></code></pre></div>
<p>Check for the available python versions (if typically installed):</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ld</span> /opt/python/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p><a href="https://docs.posit.co/connect/user/shiny-python/">Posit Connect User Guide: Shiny for Python</a></p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/python-projects-setup.html</guid>
  <pubDate>Fri, 13 Sep 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>R projects set up and maintenance</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/r-projects-setup.html</link>
  <description><![CDATA[ 





<section id="r-projects-setup" class="level2">
<h2 class="anchored" data-anchor-id="r-projects-setup">R projects setup</h2>
<p>Setup the <code>renv</code> environment:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>()</span>
<span id="cb1-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>()</span></code></pre></div>
<p>To run the app either open <code>app/app.R</code> and click the “Run App” button at the top of the IDE code pane or use:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runApp</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span>)</span></code></pre></div>
</section>
<section id="deployment" class="level2">
<h2 class="anchored" data-anchor-id="deployment">Deployment</h2>
<section id="push-button" class="level3">
<h3 class="anchored" data-anchor-id="push-button">Push Button</h3>
<p>Open <code>app/app.R</code> and use the blue publish icon in the upper right corner of the IDE code pane.</p>
</section>
<section id="rsconnect-package" class="level3">
<h3 class="anchored" data-anchor-id="rsconnect-package">rsconnect package</h3>
<p>You can also deploy using the rsconnect package:</p>
<pre><code>rsconnect::deployApp(
  appDir = "app",
  appTitle = "Shiny Penguins"
)</code></pre>
</section>
<section id="git-backed" class="level3">
<h3 class="anchored" data-anchor-id="git-backed">Git-backed</h3>
<p>Update the code, and then run:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">rsconnect<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeManifest</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span>)</span></code></pre></div>
<p>Commit the new <code>manifest.json</code> file to the git repo along with the code.</p>
</section>
</section>
<section id="project-updates" class="level2">
<h2 class="anchored" data-anchor-id="project-updates">Project updates</h2>
<p>Use <a href="https://rstudio.github.io/renv/articles/renv.html">renv</a> to record the r package versions used</p>
<p>Create a <a href="https://docs.posit.co/connect/user/git-backed/#creating-a-manifest-file-from-r"><code>manifest.json</code> file</a> to support git-backed publishing</p>
</section>
<section id="all-about-renv" class="level2">
<h2 class="anchored" data-anchor-id="all-about-renv">All about renv</h2>
<p><strong>Why use renv?</strong></p>
<p>There is an excellent video by David Aja discussing why he started using renv at the 2022 RStudio Conference <a href="https://www.rstudio.com/conference/2022/talks/you-should-use-renv/">here</a>.</p>
<p>Ever had your code mysteriously stop working or start producing different results after upgrading packages, and had to spend hours debugging to find which package was the culprit? Ever tried to collaborate on code just to get stuck on trying to decipher various package dependencies?</p>
<p><a href="https://rstudio.github.io/renv/articles/renv.html">renv</a> helps you track and control package changes - making it easy to revert back if you need to. It works with your current methods of installing packages (<code>install.packages()</code>), and was designed to work with most data science workflows.</p>
<p>Who shouldn’t use renv?</p>
<ul>
<li>Package developers</li>
<li>?</li>
</ul>
<p># Terms</p>
<ul>
<li>R Project - a special kind of directory of files and supporting functionality.</li>
<li>Package - a collection of functions beyond base R that developers can install and use.</li>
<li>Library - a directory containing installed packages.</li>
</ul>
</section>
<section id="workflow" class="level1">
<h1>Workflow</h1>
<p>New project -&gt; updates -&gt; reverting -&gt; advanced</p>
</section>
<section id="new-project" class="level1">
<h1>New project</h1>
<p>Initialize your project with:</p>
<pre><code>library(renv)
renv::init()</code></pre>
<p>Look at the renv.lock file and see the information that has been captured about the packages supporting your project.</p>
</section>
<section id="making-updates" class="level1">
<h1>Making updates</h1>
<p>Try installing a new package and then look at the renv.lock file. What did you expect to happen? What do you see?</p>
<p>Now try running <code>renv::snapshot()</code>. What do you see now when you look at the renv.lock file?</p>
<p>The renv lock file is updated by you when you run the command to snapshot. This means you can update packages, or install new packages, without changing your lock file.</p>
</section>
<section id="how-to-revert" class="level1">
<h1>How to revert</h1>
<p>Practice updating the packages your project relies on, each time saving to git. You can see the history of your changes with:</p>
<p><code>renv::history()</code></p>
<p>If you want to revert back to an earlier snapshot you can do that with:</p>
<pre><code>## Revert to the most recent snapshot 
renv::revert()

## Alternatively we can revert to a specific snapshot by specifying the commit: 
db &lt;- renv::history()

# choose an older commit
commit &lt;- db$commit[5]

# revert to that version of the lockfile
renv::revert(commit = commit)</code></pre>
<p>Note: Currently, only Git repositories are supported by renv::history() and renv::revert().</p>
</section>
<section id="advanced-renv" class="level1">
<h1>Advanced renv</h1>
<p>There are a couple other commands that can be used depending on your workflow that are useful to know about.</p>
<p>Say that your organization has a managed package host, for example Package Manager, and is using the <a href="strategy">Shared Baseline</a>. Meaning that all developers in the organization are pointed to a snapshot of available packages frozen to a particular date when the managing team had intentionally tested and made them available. On some cadence, let’s say quarterly, the managing team goes through, performs testing again, and provides a new updated snapshot that is available for developers to switch to. There are a lot of advantages in switching with new features, resolved bugs, etc.</p>
<p>In order for developers to know that a new release has happened (that the local package dates are out of date in reference to the repo being pointed at) they can run:</p>
<pre><code>view(old.packages())</code></pre>
<p>The same process would be followed with then updating the packages, testing as needed, and then creating a new snapshot so the renv lock file is updated to the latest. This provides the added security that in case it does not pass testing the renv lock file will still point at the supported package versions and not the ones that caused the breakage.</p>
<p>One of the more recent releases of the renv package has included <a href="https://rstudio.github.io/renv/articles/profiles.html">having separate profiles for the project</a>. Meaning that a developer could have a production profile, a validation profile, and testing profile that can be easily switched between while working through their workflow towards deployment into production.</p>
<p>The renv.lock file can be manually changed to update the packages that are included with:</p>
<p><code>renv::modify()</code></p>
<p>Remove packages that are no longer needed with:</p>
<p><code>renv::clean()</code></p>
<p>Update everything to the latest for each package (according to the repository you are pointed at) with:</p>
<p><code>renv::update()</code></p>
</section>
<section id="troubleshooting" class="level1">
<h1>Troubleshooting</h1>
<p>Running a diagnostic:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diagnostics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">project =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span></code></pre></div>
<p>Add more detail to logging:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">renv.download.trace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<p>If you are having particular issue with a package and it keeps being pulled in from the cache then doing a complete purge and reinstall can be useful:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">purge</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringr"</span>)</span>
<span id="cb10-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">purge</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringi"</span>)</span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringr"</span>)</span></code></pre></div>
<p><code>renv::purge</code> removes packages completely from the package cache (which may be shared across projects) rather than just removing the package from the project which is what <code>renv::remove</code> does. This can be useful if a package which had previously been installed in the cache has become corrupted or unusable, and needs to be re-installed.</p>
<p>It may also be useful to verify both the OS you are currently useing as well as checking that the repository you are pointing towards is using the correct OS if it is pulling in the binaries.</p>
<p>For debian/ubuntu distributions:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lsb_release</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span></span></code></pre></div>
<p>For other distributions (more broadly cross-linux compatible command):</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /etc/os-release</span></code></pre></div>
<p>Check the repository being pointed to and update it to use the URL from your package manager instance:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'repos'</span>)</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">REPO_NAME =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/cran/__linux__/jammy/latest"</span>))</span></code></pre></div>
<p>Some additional options and settings:</p>
<ul>
<li><p><code>Renv</code> comes with an over-ride option for the repository that could be recommended for users to run prior to re-initializing projects: <a href="https://rstudio.github.io/renv/reference/config.html?q=OS#renv-config-repos-override" class="uri">https://rstudio.github.io/renv/reference/config.html?q=OS#renv-config-repos-override</a></p>
<ul>
<li>It was discussed in <a href="https://stackoverflow.com/questions/65326540/how-to-change-r-repository-cran-from-renv-lock-to-get-packages-from-an-internal">this stackoverflow post</a> with this example (run from console): <code>Sys.setenv("RENV_CONFIG_REPOS_OVERRIDE" = "your_private_package_repository_url")</code></li>
</ul></li>
<li><p>As of renv 0.13.0 where it can now construct a prefix based on fields within the system’s /etc/os-release file: <a href="https://rstudio.github.io/renv/reference/paths.html#sharing-state-across-operating-systems" class="uri">https://rstudio.github.io/renv/reference/paths.html#sharing-state-across-operating-systems</a></p></li>
</ul>
</section>
<section id="library-paths" class="level1">
<h1>Library paths</h1>
<p>Find where your library is:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.libPaths</span>()</span>
<span id="cb14-2">[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/sagemaker-user/R/x86_64-pc-linux-gnu-library/4.2"</span></span>
<span id="cb14-3">[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/opt/R/4.2.1/lib/R/library"</span> </span></code></pre></div>
<p>For example when working in a system that has a mounted share drive then would want to check that libraries are being written to that share so you get persistence. Typically this means writing to inside the home directory. Check mounted drives with: <code>df -h</code></p>
<p>The next thing to check is permissions, for example with this command that shows full directory tree permissions</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namei</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> /home/sagemaker-user/test/r-examples</span></code></pre></div>
</section>
<section id="migrations" class="level1">
<h1>Migrations</h1>
<p>Consider using the script in this gist to migrate R and Python libraries: <a href="https://gist.github.com/edavidaja/5996ffeb042df2642c77c065c07f023d" class="uri">https://gist.github.com/edavidaja/5996ffeb042df2642c77c065c07f023d</a></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete the existing libraries</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv/library"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set repo address</span></span>
<span id="cb16-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">REPO_NAME =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://colorado.posit.co/rspm/all/__linux__/jammy/latest"</span>))</span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (optional) add repo address to r profile</span></span>
<span id="cb16-8">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_profile</span>()</span>
<span id="cb16-9"></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart R session</span></span>
<span id="cb16-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.rs.restartR</span>()</span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Re-install libraries</span></span>
<span id="cb16-14">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Activate the existing venv</span></span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make note of all installed packages</span></span>
<span id="cb17-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip freeze <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> requirements-freeze.txt</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Deactivate the venv and delete</span></span>
<span id="cb17-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deactivate</span></span>
<span id="cb17-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> .venv/</span>
<span id="cb17-10"></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new virtual environment</span></span>
<span id="cb17-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv .venv</span>
<span id="cb17-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate </span>
<span id="cb17-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip wheel setuptools</span>
<span id="cb17-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements-freeze.txt</span></code></pre></div>
</section>
<section id="repositories" class="level1">
<h1>Repositories</h1>
<p>Check your current repo with: <code>options('repos')</code></p>
<p>For example, you might see: <code>https://packagemanager.rstudio.com/all/latest</code> or <code>https://cran.rstudio.com/</code>.</p>
<p>Change your repo with: <code>options(repos = c(REPO_NAME = "https://colorado.rstudio.com/rspm/cran/__linux__/focal/2022-06-29"))</code> or <code>options(repos = c(REPO_NAME = "https://packagemanager.rstudio.com/all/latest"))</code></p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/r-projects-setup.html</guid>
  <pubDate>Fri, 13 Sep 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Job templating in Kubernetes</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/job-templating-k8s.html</link>
  <description><![CDATA[ 





<p>This short writeup addresses a need to add an additional label to Workbench sessions started in a kubernetes environment. Specifically this was for an environemnt where an external Workbench server was launching sessions into a Kubernetes cluster. The recommended way to do this is to use job templating.</p>
<section id="job-templating-for-custom-labels-for-posit-workbench-with-k8s" class="level2">
<h2 class="anchored" data-anchor-id="job-templating-for-custom-labels-for-posit-workbench-with-k8s">Job templating for custom labels for Posit Workbench with k8s</h2>
<p>These are the granular steps for taking advantage of <a href="https://docs.posit.co/ide/server-pro/job_launcher/kubernetes_plugin.html#kube-templating">kubernetes object templating</a> that would work with an external Workbench instance launching into k8s:</p>
<ol type="1">
<li>Add to <code>launcher.kubernetes.conf</code>, <code>use-templating = 1</code></li>
<li>Use the launcher CLI to create the <code>job.tpl</code> and <code>service.tpl</code> files (see below for an example)</li>
<li>Confirm that the version called out in <code>job.tpl</code> and <code>service.tpl</code> (using <code>head job.tpl</code> and <code>head service.tpl</code> for example) are compatible with your workbench version (version 2.3.1 is latest)</li>
<li>Create <code>rstudio-library-templates-data.tpl</code> - for now this is a helm-only construct so it will need to be copied from the helm output (<a href="https://github.com/rstudio/helm/tree/main/charts/rstudio-workbench">helm repo</a>) (see example below for doing this with the <code>helm template</code> command)</li>
<li>Copy <code>job.tpl</code>, <code>service.tpl</code>, and <code>rstudio-library-templates-data.tpl</code> into the launcher scratch directory on the host machine (in this case your Workbench server outside of k8s) (see below for default for where this is located) and make sure that rstudio-server has read/write access</li>
</ol>
<p>For adding the new labels/values, here are good options:</p>
<ul>
<li>Modify <code>rstudio-library-templates-data.tpl</code> directly (either in the header bit, or lower under values/labels)</li>
<li>Modify the values in the helm values file (<a href="https://github.com/rstudio/helm/blob/5fb2ad5cecf84680c8e64e4d8123df9d4e0c1cc7/charts/rstudio-workbench/values.yaml#L82-L109">example</a>)</li>
<li>Recommended: Add the values at time of making the template, IE with <code>--set launcher.templateValues.job.labels.test=value \</code> (see below)</li>
</ul>
<p>From talking with a colleague they shared this example using helm to create the template with the added label values:</p>
<pre><code>helm template my-release rstudio/rstudio-workbench \
 --set launcher.useTemplates=true \
 --set launcherPem=test \
 --set session.defaultConfigMount=false \
 --set launcher.templateValues.job.labels.test=value \
 --set launcher.templateValues.job.labels.other=something-else \
 | less</code></pre>
<p>In that helm example:</p>
<ul>
<li><code>session.defaultConfigMount=false</code> prevents defining volumes and volumeMounts that are only relevant for the helm chart</li>
<li><code>launcherPem=test</code> speeds up templating</li>
<li><code>launcher.useTemplates=true</code> turns on templating (instead of job json overrides)</li>
</ul>
<p><strong>What if things go wrong?</strong></p>
<p>The rstudio-kubernetes-launcher CLI can <a href="https://docs.posit.co/ide/server-pro/job_launcher/kubernetes_plugin.html#validating-templates">verify templates</a> now!</p>
<p><strong>Playing with the rstudio-kubernetes-launcher CLI:</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/usr/lib/rstudio-server/bin/rstudio-kubernetes-launcher</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/usr/lib/rstudio-server/bin/rstudio-kubernetes-launcher</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--generate-templates</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--scratch-path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/tmp/hello</span></code></pre></div>
<p><strong>Default scratch path:</strong></p>
<pre><code> # mount into the default scratch-path
 - name: session-templates
  mountPath: "/var/lib/rstudio-launcher/Kubernetes/rstudio-library-templates-data.tpl"
  subPath: "rstudio-library-templates-data.tpl"
 - name: session-templates
  mountPath: "/var/lib/rstudio-launcher/Kubernetes/job.tpl"
  subPath: "job.tpl"
 - name: session-templates
  mountPath: "/var/lib/rstudio-launcher/Kubernetes/service.tpl"
  subPath: "service.tpl"</code></pre>
</section>
<section id="another-approach-using-json-over-rides-on-posit-workbench-with-k8s" class="level2">
<h2 class="anchored" data-anchor-id="another-approach-using-json-over-rides-on-posit-workbench-with-k8s">Another approach using json over-rides on Posit Workbench with k8s</h2>
<p>Potentially json over-rides could work but my understanding is that this would overwrite ALL labels.</p>
<p>use this to add a label:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/launcher.kubernetes.profiles.conf</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="/etc/rstudio/launcher.kubernetes.profiles.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">job-json-overrides=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/spec/template/spec/labels"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/rstudio/labels"</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/labels</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="/etc/rstudio/labels" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb5-2">  {</span>
<span id="cb5-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"applicationid"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"workbench"</span>,</span>
<span id="cb5-4">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"label":</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">["value"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb5-5">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/job-templating-k8s.html</guid>
  <pubDate>Wed, 21 Aug 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Google data storage and R</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/google-resources.html</link>
  <description><![CDATA[ 





<section id="overview" class="level1">
<h1>Overview</h1>
<p>Access to resources in google (bigquery, drive, etc) will depend on where the user is connecting from:</p>
<ul>
<li>Local desktop: any method is fine</li>
<li>Workbench / server web app based: “OOB” workflows or non-interactive</li>
<li>Connect / server web app non-interactive: Non-interactive only</li>
</ul>
</section>
<section id="interactive-workflow" class="level1">
<h1>Interactive workflow</h1>
<p>In order to get this working on Workbench, we need to use the OOB method so we don’t have to mess with bouncing between URL’s.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(googlesheets4)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gargle)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(googledrive)</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load/refresh existing credentials, if available</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise, go to browser for authentication and authorization (only works if not behind a proxy)</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>()</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_client_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"web"</span>)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pseudo-OOB, use this when on Workbench, Connect, etc. </span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># options(gargle_oauth_client_type = "installed") # conventional OOB - this doesn't work for me, looks like it was deprecated in 2023</span></span></code></pre></div>
</section>
<section id="hacky-workflow-aka-oauth-user-token-re-discovered" class="level1">
<h1>Hacky workflow AKA Oauth user token re-discovered</h1>
<p>The idea is to make it render once, then use the token in the cache for future authentications. This will likely need to be periodically updated (think, annually) whenever the token expires.</p>
<p>This is the least recommended because of security challenges and having to manage an ecosystem of tokens, but it’s hard to deny the appeal because it means a service account isn’t needed!</p>
<p>We’ll need to change the location of the cached token to within the project so that when we deploy to Connect it will be included. Security here is tricky since the token is an exposed file, so care should be taken.</p>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html#sidebar-1-deployment" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html#sidebar-1-deployment</a></p>
<p>Step 1: Do this once interactively to get a token</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a token interactively, but we can reuse it later</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pseudo-OOB - this will bounce us out to a webpage, but we don't have to bounce back, we'll copy a code instead that we'll use like a password</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_client_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"web"</span>) </span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># designate project-specific cache</span></span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_cache =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do anything that triggers auth, in this case I want to tie it to my email identity</span></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_oauth_email =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lisamaeanders@gmail.com"</span>)</span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">email =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lisamaeanders@gmail.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cache =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use_oob =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use a 'read only' scope, so it's impossible to edit or delete files</span></span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scopes =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drive.readonly"</span>)</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This sets an option that allows gargle to use cached tokens whenever there’s a unique match:</span></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#options(gargle_oauth_email = TRUE)</span></span></code></pre></div>
<p>Step 2: Downstream use we will reuse the token we got interactively earlier</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Revise code so it uses the pre-authorized token </span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_auth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cache =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">email =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lisamaeanders@gmail.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use_oob =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># now use googledrive</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_find</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</section>
<section id="when-deployed-in-gcp-use-existing-cloud-credentials-and-go-keyless" class="level1">
<h1>When deployed in GCP use existing cloud credentials and go “keyless”</h1>
<p>When deployed already in GCP then there is an underlying service account already assigned to your infrastructure. The gotcha is that it is unlikely that the pre-existing service account has the “scope” IE the access to what you need.</p>
<p>Additional scopes need to be added to that service account identity, for example:</p>
<ul>
<li>That authentication might be successful for BigQuery, because the service account has the scope ‘cloud-platform’</li>
<li>That authentication won’t be successful for drive, because it doesn’t have the ‘drive’ scope</li>
</ul>
<p>Additional scope is added at the GCP compute instance level either when the instance is created or the instance can be stopped and the scope added.</p>
<p>Check for GCE credentials with (super curious what this returns for you, probably worth saving the output so it can be restored in the future if needed):</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">credentials_gce</span>()</span></code></pre></div>
<p>This also means that if you are GCE and getting errors that may be because it is using that service account for access, which doesn’t have the correct scoping. You may need to remove the credentials for that account so it can try to create fresh credentials:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># removes `credentials_gce()` from gargle's registry</span></span>
<span id="cb6-2">gargle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cred_funs_add</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">credentials_gce =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span></code></pre></div>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html#embrace-credentials-available-in-certain-cloud-settings" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html#embrace-credentials-available-in-certain-cloud-settings</a></p>
</section>
<section id="non-interactive-workflow" class="level1">
<h1>Non-interactive workflow</h1>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html</a></p>
<section id="service-account-token" class="level2">
<h2 class="anchored" data-anchor-id="service-account-token">Service account token</h2>
<p>Follow <a href="https://gargle.r-lib.org/articles/get-api-credentials.html#service-account-token">these</a> steps:</p>
<ul>
<li>Create a service account</li>
<li>From the <a href="https://console.cloud.google.com">GCP Console</a>, in the target GCP Project, go to IAM &amp; Admin &gt; Service accounts</li>
<li>Assign permissions: googledrive docs does not have any explicit roles, service account used to test bigrquery has roles BigQuery Admin and Storage Admin</li>
<li>After creating the service account, click on the three dots and “actions”, manage keys, add key as json, download credentials as json file</li>
<li>This key is a secret! Consider how it should be protected</li>
<li>Provide path of json file to authentication</li>
<li>Grant the service account permissions to resources as needed (it doesn’t inherit permissions) (For example, I had to visit https://console.developers.google.com/apis/api/drive.googleapis.com/overview?project=redacted to enable access for google drive and gogle sheets, which it gave me the link to in an error message for my specific project)</li>
</ul>
<p>Reference: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html#provide-a-service-account-token-directly" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html#provide-a-service-account-token-directly</a> and <a href="https://gargle.r-lib.org/articles/get-api-credentials.html#service-account-token" class="uri">https://gargle.r-lib.org/articles/get-api-credentials.html#service-account-token</a></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use a service account token, like drive_auth(path = "/path/to/your/service-account-token.json")</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drive_auth(path = Sys.getenv("google_drive_service_account"), scopes = "drive.readonly")</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drive_auth(path = Sys.getenv("google_drive_service_account"), scopes = "drive.readonly")</span></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">credentials_service_account</span>(</span>
<span id="cb7-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#scopes = "https://www.googleapis.com/auth/userinfo.email",</span></span>
<span id="cb7-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"google_drive_service_account"</span>)</span>
<span id="cb7-7">)</span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># now use googledrive</span></span>
<span id="cb7-9">googledrive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_find</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</section>
</section>
<section id="troubleshooting" class="level1">
<h1>Troubleshooting</h1>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see user associated with current token</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_user</span>()</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List credentials </span></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cred_funs_list</span>()</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># force the OAuth web dance</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#drive_auth(email = NA)</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># provides an OAuth2 “situation report”, only relevant for oauth2 user tokens (not service accounts, etc)</span></span>
<span id="cb8-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gargle_oauth_sitrep</span>() </span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if a oauth cache is being used</span></span>
<span id="cb8-14">gargle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gargle_oauth_cache</span>()</span>
<span id="cb8-15"></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default is to cache OAuth access credentials in the folder ~/.cache/gargle between R sessions</span></span>
<span id="cb8-17"></span>
<span id="cb8-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># retrieve the currently configured OAuth client and API key, respectively.</span></span>
<span id="cb8-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># without configuring auth these are null</span></span>
<span id="cb8-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_oauth_client</span>() </span>
<span id="cb8-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drive_api_key</span>() </span>
<span id="cb8-22"></span>
<span id="cb8-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see your token file in the cache</span></span>
<span id="cb8-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".secrets/"</span>)</span>
<span id="cb8-25"></span>
<span id="cb8-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For troubleshooting purposes, you can set a gargle option to see verbose output about the execution of gargle::token_fetch():</span></span>
<span id="cb8-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gargle_verbosity =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"debug"</span>)</span>
<span id="cb8-28"></span>
<span id="cb8-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gargle uses port 1410 for auth, check if it is blocked with (on nix systems): sudo lsof -i :1410</span></span></code></pre></div>
</section>
<section id="security" class="level1">
<h1>Security</h1>
<p>Want to learn more about managing tokens? Read <a href="https://gargle.r-lib.org/articles/managing-tokens-securely.html">this</a></p>
</section>
<section id="resources" class="level1">
<h1>Resources</h1>
<ul>
<li>Exploring non-interactive auth workflows would also be really useful (and set us up for successful deployments to Connect down the road): <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html</a></li>
<li>Might also be useful to refer to the google docs on auth: <a href="https://cloud.google.com/bigquery/docs/authentication" class="uri">https://cloud.google.com/bigquery/docs/authentication</a></li>
<li>This section is also really useful: <a href="https://bigrquery.r-dbi.org/#authentication-and-authorization" class="uri">https://bigrquery.r-dbi.org/#authentication-and-authorization</a></li>
<li>Likely OOB auth is needed, with options(gargle_oob_default = TRUE)</li>
<li>“If you are interacting with R within a browser (applies to RStudio Server, Posit Workbench, Posit Cloud, and Google Collaboratory), you need OOB auth or the pseudo-OOB variant. If this does not happen automatically, you can request it explicitly with use_oob = TRUE or, more persistently, by setting an option via options(gargle_oob_default = TRUE).”</li>
<li>Reference: <a href="https://googledrive.tidyverse.org/reference/drive_auth.html" class="uri">https://googledrive.tidyverse.org/reference/drive_auth.html</a></li>
<li>Also really useful: <a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" class="uri">https://gargle.r-lib.org/articles/non-interactive-auth.html</a></li>
<li>And another one that is really useful: <a href="https://bigrquery.r-dbi.org/#authentication-and-authorization" class="uri">https://bigrquery.r-dbi.org/#authentication-and-authorization</a></li>
<li>There’s an example on this page using a json file downloaded from the google developers console: <a href="https://googledrive.tidyverse.org/reference/drive_auth_configure.html#ref-examples" class="uri">https://googledrive.tidyverse.org/reference/drive_auth_configure.html#ref-examples</a></li>
<li>From the google cloud console these are the options we have for generating credentials: API key, Oauth client ID, service account. (<a href="https://console.cloud.google.com/" class="uri">https://console.cloud.google.com/</a> -&gt; API’s and Services -&gt; Create credentials)</li>
<li>Basically you (1) create a service account then (2) create a key (see <a href="https://developers.google.com/identity/protocols/oauth2/service-account" class="uri">https://developers.google.com/identity/protocols/oauth2/service-account</a>)</li>
<li>Auth from web: <a href="https://gargle.r-lib.org/articles/auth-from-web.html" class="uri">https://gargle.r-lib.org/articles/auth-from-web.html</a></li>
</ul>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/google-resources.html</guid>
  <pubDate>Fri, 21 Jun 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Debugging R Package Environments (renv): A long winded writeup</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/renv-environments.html</link>
  <description><![CDATA[ 





<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: false</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| include: false</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(renv)</span></code></pre></div>
<p>This vignette is an overview of environment management in R and a comprehensive summary of the different options that can be configured to support different workflows. Environment management in R is intentionally complex, so figuring out where to even start when debugging can be a challenge. This vignette also goes into specific scenarios that might come up with environment management and recommendations.</p>
<section id="at-a-glance" class="level2">
<h2 class="anchored" data-anchor-id="at-a-glance">At a glance</h2>
<p>Overview of the R environment:</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph LR
    
    subgraph ENV[Working R Environment]
    
    subgraph CONFIG[Config]
    
      subgraph LOCAL[Local R Config]
      RENVIRON[.Renviron]
      RPROFILE[.Rprofile]
      end
    
      subgraph SERVER[Server R Config]
      SRENVIRON[Renviron.site&lt;br/&gt;etc/R.home/Renviron.site]
      SRRPROFILE[Rprofile.site&lt;/br&gt;etc/Rprofile.site]
      
        subgraph W[Posit Workbench]
        REPOS["repos.conf"]
        RSESSION["rsession.conf"] 
        end
    
      end
      
      LOCAL-- User settings &lt;br/&gt;override&lt;br/&gt;global settings --&gt; SERVER
      
      subgraph RENVCONFIG[Renv Config]
      RENVPROJECT[Project Settings&lt;br/&gt;renv/settings.json]
      
        subgraph RENVUSER[Config: User Level Settings]
        RENVUR["User Renviron&lt;br/&gt;~/.Renviron"]
        RENVRI["R installation&lt;br/&gt;etc/Rprofile.site"]
        RENVP["Project&lt;br/&gt;.Rprofile"]
        end
      end      
      
    end
    
    subgraph LIBRARY[Package Library Path]

      USERLIBRARY["User&lt;br/&gt;R_HOME/library&lt;br/&gt;~/R"]

      SITELIBRARY[Site&lt;br/&gt;R_HOME/site-library]
      
      subgraph RENV[Renv]
      direction TB
      CACHE["Cache&lt;br/&gt;~/.cache/R/renv/"]
      PROJECTCACHE["Project Cache&lt;br/&gt;~/renv/library/"]
      CACHE-- Unless isolated, symlink --&gt; PROJECTCACHE; 
      SHAREDCACHE[Cross-User Shared Cache]
      end

    end  
    
    LIBRARY --&gt; CONFIG
    CONFIG --&gt; LIBRARY
    
    end
    
    subgraph REPOSITORY[Package Repository Source]
      direction TB
    
      subgraph PPM[Posit Package Manager]
      RE[Package Binaries]
      RP[Package Sources]
      end
    
      CRAN[CRAN/Pypi/BioConductor/etc]
    
      CRAN -- Posit sync service --&gt; PPM;

    end
    
    UA[User-Agent request header]-- Binary requested&lt;br/&gt;Details: OS, R version --&gt;PPM
    
    UA --&gt; ENV

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<section id="environment-management-strategies" class="level2">
<h2 class="anchored" data-anchor-id="environment-management-strategies">Environment Management strategies</h2>
<p>There are severeal common <a href="https://solutions.posit.co/envs-pkgs/environments/">environment management strategies</a>. Some strategies can be more prone to pain and challenges later than others. Thinking about the appropriate strategy for your organization in advance can save you from a lot of hurt later.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://solutions.posit.co/envs-pkgs/environments/reproduce/reproducibility-strategies-and-danger-zones.png" class="lightbox" data-glightbox="description: .lightbox-desc-1" data-gallery="quarto-lightbox-gallery-1" title="alt text"><img src="https://solutions.posit.co/envs-pkgs/environments/reproduce/reproducibility-strategies-and-danger-zones.png" class="img-fluid figure-img" alt="alt text"></a></p>
<figcaption>alt text</figcaption>
</figure>
</div>
<p>Image: <a href="https://solutions.posit.co/envs-pkgs/environments/reproduce/reproducibility-strategies-and-danger-zones.png" class="uri">https://solutions.posit.co/envs-pkgs/environments/reproduce/reproducibility-strategies-and-danger-zones.png</a></p>
<table class="table">
<thead>
<tr class="header">
<th><a href="https://solutions.posit.co/envs-pkgs/environments/snapshot/">Snapshot and Restore</a></th>
<th><a href="https://solutions.posit.co/envs-pkgs/environments/shared/">Shared Baseline</a></th>
<th><a href="https://solutions.posit.co/envs-pkgs/environments/validated/">Validated</a></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>All developers are responsible for their own environment management, and enabled for making their enviornments reproduceable through the use of renv’s <code>snapshot()</code> capability. Users can freely access and install packages while following a package-centric workflow. Users are responsible for recording their dependencies for their projects.</td>
<td>All developers in the organization are pointed to a snapshot of available packages frozen to a particular date when the managing team had intentionally tested and made them available. On some cadence, let’s say quarterly, the managing team goes through, performs testing again, and provides a new updated snapshot that is available for developers to switch to. There are a lot of advantages in switching with new features, resolved bugs, etc.</td>
<td>Similar to the shared baseline stratgey the difference is that changes to the package environment go through an approval and auditing process, and access to packages is strictly enforced.</td>
</tr>
</tbody>
</table>
</section>
<section id="understanding-rs-startup-behavior" class="level2">
<h2 class="anchored" data-anchor-id="understanding-rs-startup-behavior">Understanding R’s startup behavior</h2>
<p>R has a lot of flexibility for different workflows, which is a great thing. However, it also means that the answer to trying to change specific pieces of that customized behavior can have complex answers that depend on example what has been implemented in your environment.</p>
<p>This diagram posted by <a href="https://twitter.com/thomasp85/status/961553618196418560">Thomas Lin Pedersen on X</a> showing the R startup flowchart went viral, and for good reason:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/thomasp85.jpg" class="lightbox" data-glightbox="description: .lightbox-desc-2" data-gallery="quarto-lightbox-gallery-2" title="R Startup diagram by Thomas Lin Pedersen on X"><img src="https://questionable.quarto.pub/blog/work/img/thomasp85.jpg" class="img-fluid figure-img" alt="R Startup diagram by Thomas Lin Pedersen on X"></a></p>
<figcaption>R Startup diagram by <a href="https://twitter.com/thomasp85/status/961553618196418560">Thomas Lin Pedersen on X</a></figcaption>
</figure>
</div>
<p>Posit <a href="https://docs.posit.co/resources/install-r/">provides precompiled R binaries</a> for anyone to use, free of charge. The <a href="https://github.com/rstudio/r-builds">public respository</a> can be visited to understand how they are compiled.</p>
</section>
<section id="where-packages-come-from" class="level2">
<h2 class="anchored" data-anchor-id="where-packages-come-from">Where packages come from</h2>
<p>Packages can come from a couple places, a tarball, version control location, but most commonly is the URL of the repository that the package will be installed from. The package source can be set by assigning an environment variable with the desired location. More than one repository can be specified, for example with:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">repos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CRAN =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cloud.r-project.org"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">WORK =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://work.example.org"</span>)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> repos)</span></code></pre></div>
<p>Setting it this way would be a “one off” that would change the “package repository” for the current session. In order to persist the change of repository location, and other settings, various configurations can be applied.</p>
<p>Typically “package repository”, among developers, is used to refer to R and Python package repositories (not to be confused with linux package repositories, etc). Most R and Python package managers serve only R and Python packages, and don’t handle additional management of system dependencies or packages, which would be risky in a shared server system where conflicts could come up.</p>
<p>The most famous R and Python package repositories are:</p>
<ul>
<li><a href="https://cran.r-project.org/">CRAN</a> - hosting public packages, checking, distributing, and archiving R packages for various platforms</li>
<li><a href="https://www.bioconductor.org/">BioConductor</a> - hosting public packages, checking, distributing, and archiving R packages for various platforms</li>
<li><a href="https://pypi.org/">PyPi</a> - hosting public packages, checking, distributing, and archiving Python packages for various platforms</li>
</ul>
<p>Posit Package Manager can be deployed within your organization, completely air-gapped, or with a sync service to Posit, to receive package sources and binaries.</p>
<ul>
<li><a href="https://pypi.org/">Posit Package Manager</a> - hosting public packages, hosting internal packages, checking, distributing, blocking vulnerabilities, and archiving R and Python packages for various platforms</li>
</ul>
</section>
<section id="server-vs-individual-environments" class="level2">
<h2 class="anchored" data-anchor-id="server-vs-individual-environments">Server vs individual environments</h2>
<p>Developers can work locally on their local machines, in a cloud environment, or using a shared server environment (for example, by using Posit Workbench).</p>
<p>Having multiple developers working on a centralized server using Posit Workbench has a couple primary advantages:</p>
<ul>
<li>Better IT oversight and security with encrypted traffic and restricted IP addresses</li>
<li>Additional configuration options and settings</li>
<li>Auditing and logging</li>
<li>Less time spent on software installation and management</li>
<li>Access to larger compute resources</li>
<li>Options for standardizing settings across all users</li>
</ul>
<p>When sharing a server environment users will sign in separately and work will live in separate user home directories. Workbench can act as an auth client to different data sources. However, the shared system dependencies will need to be carefully managed to support the different workflows that the users are doing.</p>
</section>
<section id="the-renv-package" class="level2">
<h2 class="anchored" data-anchor-id="the-renv-package">The renv package</h2>
<p>Renv is an open source R package that allows users to better manage their package environments.</p>
<p>Ever had your code mysteriously stop working or start producing different results after upgrading packages, and had to spend hours debugging to find which package was the culprit? Ever tried to collaborate on code just to get stuck on trying to decipher various package dependencies?</p>
<p><a href="https://rstudio.github.io/renv/articles/renv.html">renv</a> helps you track and control package changes - making it easy to revert back if you need to. It works with your current methods of installing packages (<code>install.packages()</code>). It comes with a great degree of flexibility and supports a wide range of user workflows.</p>
<p>Renv assumes:</p>
<ul>
<li>Users are familiar with a version control system, like git</li>
<li>Users are following a project-centric methodology where the goal is to simultaneously work on different projects with different package environment needs</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://rstudio.github.io/renv/articles/renv.png" class="lightbox" data-glightbox="description: .lightbox-desc-3" data-gallery="quarto-lightbox-gallery-3" title="The Renv workflow"><img src="https://rstudio.github.io/renv/articles/renv.png" class="img-fluid figure-img" alt="The Renv workflow"></a></p>
<figcaption>The <a href="https://rstudio.github.io/renv/articles/renv.html">Renv workflow</a></figcaption>
</figure>
</div>
<p>There is an excellent video by David Aja discussing why he started using renv at the 2022 RStudio Conference here: <a href="https://www.rstudio.com/conference/2022/talks/you-should-use-renv/" class="uri">https://www.rstudio.com/conference/2022/talks/you-should-use-renv/</a></p>
<p>Usefully, <a href="https://p3m.dev/client/#/repos/cran/packages/renv/616174/overview?search=renv#package-details:~:text=1.14%20MB-,SYSTEM%20REQUIREMENTS,-none">renv doesn’t have system requirements</a>.</p>
<section id="the-lock-file" class="level3">
<h3 class="anchored" data-anchor-id="the-lock-file">The lock file</h3>
<p>The renv lock file is what is generated that allows the environment to be recreated on another system. It might look something like this:</p>
<details>
<summary>
Click here to expand an example renv lock file
</summary>
<pre><code>{
  "R": {
    "Version": "4.3.2",
    "Repositories": [
      {
        "Name": "CRAN",
        "URL": "https://p3m.dev/cran/latest"
      }
    ]
  },
  "Packages": {
    "MASS": {
      "Package": "MASS",
      "Version": "7.3-60",
      "Source": "Repository",
      "Repository": "CRAN",
      "Requirements": [
        "R",
        "grDevices",
        "graphics",
        "methods",
        "stats",
        "utils"
      ],
      "Hash": "a56a6365b3fa73293ea8d084be0d9bb0"
    },
    "Matrix": {
      "Package": "Matrix",
      "Version": "1.6-4",
      "Source": "Repository",
      "Repository": "RSPM",
      "Requirements": [
        "R",
        "grDevices",
        "graphics",
        "grid",
        "lattice",
        "methods",
        "stats",
        "utils"
      ],
      "Hash": "d9c655b30a2edc6bb2244c1d1e8d549d"
    },
    "yaml": {
      "Package": "yaml",
      "Version": "2.3.7",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "0d0056cc5383fbc240ccd0cb584bf436"
    }
  }
}</code></pre>
</details>
<p>It’s in a json format. There are two main sections:</p>
<ul>
<li>Header : This is where the R version is declared as well as package sources (if declared)</li>
<li>Packages : This is where the specific package versions are specified, as well as various metadata</li>
</ul>
<p>For an overview on package sources, see the <a href="https://rstudio.github.io/renv/articles/package-sources.html">Package Sources vignette</a>.</p>
<p>The package source can be set for three different scenarios:</p>
<ul>
<li><code>RemoteType</code> - packages installed by devtools, remotes, and pak</li>
<li><code>Repository</code> - packages installed from a package repository; CRAN, Posit Package Manager, etc</li>
<li><code>biocViews</code> - packages installed from BioConductor repositories</li>
</ul>
<p>Let’s understand how the <code>Repository</code> is set. Notice how under each package the repository is declared like this:</p>
<pre><code>Repository: &lt;a name&gt;,</code></pre>
<p>The <code>Repository: &lt;a name&gt;</code> field is used to denote the repository that the package was originally installed from. Most commonly it might like look:</p>
<ul>
<li><code>Repository: CRAN</code> - This indicates that the package was installed from a repository call CRAN, likely a CRAN mirror</li>
<li><code>Repository: RSPM</code> - This indicates that the package was installed from Posit Package Manager, regardless of whether it was a binary or source package</li>
</ul>
<p>There is a fail over order for determining the correct URL:</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TD;
    A(Assign repository URL) --&gt;lock; 
    
    subgraph lock[renv.lock file]
    B[Repository name in package definition]
    c[Repository URL in header]
    end
    
    lock -- Repository name in header --&gt;D;
    D[Select matching URL] --&gt;END;
    lock -- Repository name not in header --&gt;E;
    
    E{Check env for first repository listed &lt;br&gt; for required package version} -- package exists --&gt;F;
    F[Select first repository URL] --&gt;END; 
    E -- package does not exist --&gt;G;

    G{Check env for .. repository listed &lt;br&gt; for required package version} -- package exists --&gt;H;
    H[Select .. repository URL] --&gt;END; 
    G -- package does not exist --&gt;I;
    
    I{Check env for last repository listed &lt;br&gt; for required package version} -- package exists --&gt;J;
    J[Select last repository URL] --&gt;END; 
    I -- package does not exist --&gt;K;
    
    K{Check the cellar} -- package exists --&gt;L;
    L[Select cellar] --&gt;END; 
    K -- package does not exist --&gt;M;    
    
    M[Package does not exist, unable to restore]
    
    END(End)
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>In words, for a package repository declaration of <code>Repository: RSPM</code>, if there happens to be a repository called <code>RSPM</code> in the repository list, then that repository will be preferred when restoring the package; otherwise, renv will check each repository from first to last for the required version of each package. The <a href="https://rstudio.github.io/renv/articles/package-sources.html#the-package-cellar">renv package cellar</a> is meant to help with packages that aren’t available or accessible for installation. The cellar can be set to point at tarball locations for these tricky packages as an ultimate fail safe.</p>
</section>
</section>
<section id="the-pak-package" class="level2">
<h2 class="anchored" data-anchor-id="the-pak-package">The pak package</h2>
<p>Pak is a useful R package that can help with package installation and dependency look up.</p>
<p>If an error is encountered, we may need to enable the package pak to work with renv (or be patient and wait a couple minutes after installing pak). There is a useful git issue discussing this <a href="https://github.com/r-lib/pak/issues/325">here</a>.</p>
<p>Renv can be told to use pak for package installation with: <code>RENV_CONFIG_PAK_ENABLED = TRUE</code></p>
<p>For example temporarily with: <code>Sys.setenv("RENV_CONFIG_PAK_ENABLED" = TRUE)</code>)</p>
<p>Check that it set with: <code>Sys.getenv('RENV_CONFIG_PAK_ENABLED')</code></p>
</section>
<section id="package-installation" class="level2">
<h2 class="anchored" data-anchor-id="package-installation">Package installation</h2>
<p>Packages are installed into a package library, a directory that exists somewhere on disk.</p>
<p>Packages are associated with that the OS, the particular version of R being used, and if using renv, with that particular project directory. The current library path(s) can be found with: <code>.libPaths()</code>. When packages are installed they will install to a sub folder that is specific to the combination of both of those.</p>
<section id="the-default-library-location" class="level3">
<h3 class="anchored" data-anchor-id="the-default-library-location">The default library location</h3>
<p>The default R installation will install packages into the users home directory, by default located at <code>R_HOME/library</code>. For example, on Windows:</p>
<pre><code>\-- C:/Users/LisaAnders/AppData/Local/R
    \-- win-library
        \-- 4.3
            \-- ..packages
\-- C:/Program Files/R
    \-- R-4.3.1
        \-- library
            \-- ..packages</code></pre>
<p>Learn more about <a href="https://rstudio.github.io/r-manuals/r-admin/Add-on-packages.html#managing-libraries">managing libraries in base R</a>.</p>
</section>
<section id="shared-site-library-location" class="level3">
<h3 class="anchored" data-anchor-id="shared-site-library-location">Shared site library location</h3>
<p>A shared site library can be set it up that will make packages from a global directory available to all users on the system, without the need for them to go through the installation steps. Through configuring Workbench, default repository locations can be set, an alternative directory can be set for use for package installation instead of user home directories, and user package installations can be disabled.</p>
<p>A default site library can be used, at <code>R_HOME/site-library</code> (in this case <code>/opt/R/3.4.4/lib/R/library</code>), or a site library can be set up by setting <code>.Library.site</code> in <code>R_HOME/etc/Rprofile.site</code> / <code>{$R_HOME}/etc/Rprofile.site</code>. Multiple library locations can be set up to be used.</p>
<p>When using a shared library, user options to change repository settings and package installation can be disabled if desired (typically as part of a validated environment management workflow). In this case, all users are accessing packages from that global site library and packages are added / updated by going through an approvals process with an admin ultimately running the commands that make the change.</p>
<p>A site library can also be set up that allows users to access both the globally installed packages as well as install packages into the user directory. This is often “the best of both worlds”. New users are able to hit the ground running quickly, and advanced users have control over packages and package versions for their projects.</p>
</section>
<section id="renv-library-location" class="level3">
<h3 class="anchored" data-anchor-id="renv-library-location">Renv library location</h3>
<p>Packages installed with renv, depending on some configuration options, will use two locations:</p>
<ul>
<li>User’s cache - <code>~/.cache/R/renv/</code></li>
<li>Project cache - <code>~/renv/library/</code></li>
</ul>
<p>By default, the project cache will symlink to the users cache in order to preserve space. Projects can <a href="https://rstudio.github.io/renv/reference/isolate.html">be isolated</a> in order to have the packages copied into the project library so that the project is completely independent of the broader renv cache.</p>
<p>The folder structure (note that it is specific to the possible OS’s, and the possible R versions and this is just an example) is:</p>
<p><em><code>~/.cache/R/renv/</code></em></p>
<pre><code>+-- projects 
+-- index
\-- binary
    \-- linux-centos-7
        \-- R-4.3
            \-- x86_64-pc-linux-gnu
                \-- repository
                    \-- ..packages
        \-- R-4.4
            \-- x86_64-pc-linux-gnu
                \-- repository
                    \-- ..packages
    \-- linux-rocky-8.9
        \-- R-4.3
            \-- x86_64-pc-linux-gnu
                \-- repository
                    \-- ..packages
\-- source
    \-- repository
        \-- ..packages</code></pre>
<p><em><code>~/renv/</code></em></p>
<pre><code>+-- activate.R
+-- settings.json
+-- staging
\-- library
    \-- linux-centos-7
        \-- R-4.3
            \-- x86_64-pc-linux-gnu
                \-- repository
                    \-- ..packages
        \-- R-4.4
            \-- x86_64-pc-linux-gnu
                \-- repository
                    \-- ..packages
    \-- linux-rocky-8.9
        \-- R-4.3
            \-- x86_64-pc-linux-gnu
                \-- repository
                    \-- ..packages
\-- source
    \-- repository
        \-- ..packages</code></pre>
</section>
</section>
</section>
<section id="configuration" class="level1">
<h1>Configuration</h1>
<section id="local-r-config-files" class="level2">
<h2 class="anchored" data-anchor-id="local-r-config-files">Local R config files</h2>
<p>These two configuration files, that may or may not be set, are the moste common for changing the behavior as relates to setting the repository for package installations:</p>
<ul>
<li><a href="https://rstats.wtf/r-startup#renviron">.Renviron</a> : The user R environ file contains all environment variables, often including renv settings, etc (typically located at ~/.Renviron)</li>
<li><a href="https://rstats.wtf/r-startup#rprofile">.Rprofile</a> : The user R profile file contains various settings and configuration properties (typically located at ~/.Rprofile)</li>
</ul>
<p>The easiest way to access either of this files is with the usethis package.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(usethis)</span>
<span id="cb8-2">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_environ</span>() </span>
<span id="cb8-3">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_profile</span>()</span></code></pre></div>
<p>These <a href="https://rstats.wtf/r-startup#disabling-startup-files">startup files can be disabled</a>.</p>
</section>
<section id="shared-server-r-config-files" class="level2">
<h2 class="anchored" data-anchor-id="shared-server-r-config-files">Shared server R config files</h2>
<p>Instead of setting individually with <a href="https://rstats.wtf/r-startup#renviron">.Renviron</a> and <a href="https://rstats.wtf/r-startup#rprofile">.Rprofile</a>, the same parameters can be set at the server and R installation level. When set, any configuration will be active for any R sessions launched on that server.</p>
<ul>
<li><a href="https://packagemanager.rstudio.com/__docs__/user/configure-r/#configure-base-r">Rprofile.site</a> : The RProfile.site file is typically located at <code>etc/Rprofile.site</code></li>
<li><a href="https://support.posit.co/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">Renviron.site</a> : The Renviron.site file is specific to the R installation, typically located at <code>file.path(R.home("etc"), "Renviron.site")</code>.</li>
</ul>
<p>For example, this code can be used to maintain the repository configuration across R sessions by adding to the individual users <code>.Rprofile</code> file. It can be maintained across all users on the server by adding to the <code>Rprofile.site</code> file.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local</span>({</span>
<span id="cb9-2">  repos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PackageManager =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/cran/__linux__/centos7/latest"</span>)</span>
<span id="cb9-3">  repos[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LocalPackages"</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/local/__linux__/centos7/latest"</span></span>
<span id="cb9-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the new repositories first, but keep the existing ones</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repos, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repos"</span>)))</span>
<span id="cb9-6">})</span>
<span id="cb9-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repos"</span>)</span></code></pre></div>
<p>Users can override the global settings in these files <code>Rprofile.site</code> and <code>Renviron.site</code> with their individual <code>.Rprofile</code> files.</p>
</section>
<section id="workbench-files-for-rstudio-pro-sessions" class="level2">
<h2 class="anchored" data-anchor-id="workbench-files-for-rstudio-pro-sessions">Workbench files for RStudio Pro sessions</h2>
<p>Similarly, there are configuration files used in Workbench that can set repository preference for package installations:</p>
<ul>
<li><a href="https://docs.posit.co/ide/server-pro/rstudio_pro_sessions/package_installation.html">/etc/rstudio/repos.conf</a></li>
<li><a href="https://docs.posit.co/ide/server-pro/rstudio_pro_sessions/package_installation.html">/etc/rstudio/rsession.conf</a></li>
</ul>
<p>When using a shared library, user options to change repository settings and package installation can be disabled if desired:</p>
<pre><code># /etc/rstudio/rsession.conf
allow-r-cran-repos-edit=0
allow-package-installation=0</code></pre>
</section>
<section id="configuration-of-renv" class="level2">
<h2 class="anchored" data-anchor-id="configuration-of-renv">Configuration of renv</h2>
<p>For most users, renv’s default behavior is powerful and doesn’t need modification.</p>
<p>However, the behavior can also be manually set / modified. Generally speaking though, relying on the defaults is the recommended happy path as renv is designed to just magically work. This does mean that troubleshooting when things go wrong can be tricky, see the troubleshooting section below for some tips on what to look out for.</p>
<p>There are also a number of environment variables that can be set that will also similarly effect the behavior as relates to setting the repositories being used as the source for package installation.</p>
<p>Commonly, these settings are set in the <code>.Renviron</code> file to be set across all sessions for that user, or in the R installation’s <code>Renviron.site</code> file so it is active for all users on that server.</p>
<p>Settings:</p>
<ul>
<li><a href="https://rstudio.github.io/renv/reference/paths.html#sharing-state-across-operating-systems">RENV_PATHS_PREFIX</a> : Used for sharing state across operating systems</li>
<li><a href="https://rstudio.github.io/renv/articles/package-sources.html#the-package-cellar">RENV_PATHS_CELLAR</a> : Path to tarballs, used as a last ditch effort for installing tricky packages</li>
<li><a href="https://rstudio.github.io/renv/articles/package-install.html#cache-location">RENV_PATHS_CACHE</a> : Path location for a cache shared across multiple users</li>
<li><a href="https://rstudio.github.io/renv/articles/package-install.html?q=PATH#shared-cache-locations">RENV_CACHE_USER</a> : When using a shared cache, renv can re-assign ownershp of the cache’d package to a separate user account</li>
<li><a href="https://rstudio.github.io/renv/articles/package-install.html?q=renv.download.trace#debugging">renv.download.trace</a> : Run <code>options(renv.download.trace = TRUE)</code> to temporarily have more verbose logging</li>
</ul>
<p>Config settings:</p>
<ul>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-repos-override">renv.config.repos.override</a> : Enforce the use of some repositories over what is defined in the renv.lock file</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-ppm-enabled">renv.config.ppm.enabled</a> : Attempt to transform the repository URL in order to receive binaries on your behalf (defaults to TRUE)</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-ppm-default">renv.config.ppm.default</a> : If repos have not already been set (for example, from the startup .Rprofile) then projects using renv will use the Posit Public Package Manager instance by default</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-ppm-url">renv.config.ppm.url</a> : The URL for Posit Package Manager to be used for new renv projects</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-user-environ">renv.config.user.environ</a> : Load the users R environ file, usually encouraged (defaults to true)</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-user-profile">renv.config.user.profile</a> : Load the users R profile file, usually discouraged since it can break project encapsulation (defaults to false)</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-user-library">renv.config.user.library</a> : option to include the system library on the library paths for projects, usually discouraged since it can break project encapsulation (defaults to false)</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-external-libraries">renv.config.external.libraries</a> : Similar to <code>renv.config.user.library</code>, external libraries can be included with the project, usually discouraged since it can break project encapsulation (defaults to false)</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-cache-enabled">renv.config.cache.enabled</a> : Enable the global renv package cache, so that packages are installed into the global cache and then linked or copied into the users R library in order to save space (defaults to true)</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html?q=link#renv-config-cache-symlinks">renv.config.cache.symlinks</a> : Use symlinks to reference packages installed into the global renv package cache (if set to FALSE packages are copied from the cache into your project library) (enabled by default, defaults to NULL)</li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-pak-enabled">renv.config.pak.enabled</a> : Use pak with renv to install packages</li>
</ul>
<p>Since the configuration settings can be set in multiple places, the priority is given according to:</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TD;
    A(Renv configuration selection) --&gt;B;
    B{R option &lt;br/&gt; renv.config.&lt;name&gt;} -- Not set --&gt;C;
    B{R option &lt;br/&gt; renv.config.&lt;name&gt;} -- Set --&gt;F;
    C{Environment variable &lt;br/&gt; RENV_CONFIG_&lt;NAME&gt;} -- Not set --&gt;D;
    C{Environment variable &lt;br/&gt; RENV_CONFIG_&lt;NAME&gt;} -- Set --&gt;F;
    D{Default} --&gt;F;
    F(End)
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>If both the R option and the environment variable option are defined, the R option is preferred.</p>
<p>We can check the value of any of these parameters a couple ways:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Checking the renv options by reading environment variables and renv config properties</span></span>
<span id="cb11-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>paths<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>()</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RENV_PATHS_CACHE'</span>)</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RENV_CACHE_USER'</span>)</span>
<span id="cb11-5">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>paths<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache</span>()</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check the r_environ and r_profile contents using the usethis package</span></span>
<span id="cb11-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(usethis)</span>
<span id="cb11-9">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_environ</span>() </span>
<span id="cb11-10">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_profile</span>()</span></code></pre></div>
<section id="renv-and-binary-package-os-and-r-version-detection" class="level3">
<h3 class="anchored" data-anchor-id="renv-and-binary-package-os-and-r-version-detection">Renv and binary package OS and R version detection</h3>
<p>By default, renv used with Package Manager will dynamically set the URL of your repository to pull package binaries for your respective system.</p>
<blockquote class="blockquote">
<p>Starting with R 4.4.0, renv automatically uses a platform prefix for library paths on linux (the equivalent to setting <code>RENV_PATHS_PREFIX_AUTO = TRUE</code>). This means that, for example, upgrading to a new version of an OS will automatically signal to renv that new library + cache directories will be required.</p>
</blockquote>
<section id="sharing-state-across-operating-systems" class="level4">
<h4 class="anchored" data-anchor-id="sharing-state-across-operating-systems">Sharing state across operating systems</h4>
<p>As of renv 0.13.0, <a href="https://rstudio.github.io/renv/reference/paths.html#sharing-state-across-operating-systems">sharing state across operating systems</a> is now possible. By default, it will construct a prefix based on fields within the system’s /etc/os-release file.</p>
<p>also possible to explicitly set with the <code>RENV_PATHS_PREFIX</code> environment variable. For example, it could be set like <code>RENV_PATHS_PREFIX = "ubuntu-bionic"</code> in order to programmatically generate a cache path like <code>/mnt/shared/renv/cache/v2/ubuntu-bionic/R-3.5/x86_64-pc-linux-gnu</code>. Alternatively the auto feature can be enabled with <code>RENV_PATHS_PREFIX_AUTO = TRUE</code> to automatically detect the environment and set the path.</p>
<p>Commonly, this would be set in the <code>.Renviron</code> file to be set across all sessions for that user, or in the R installation’s <code>Renviron.site</code> file so it is active for all users on that server.</p>
</section>
</section>
<section id="renv-and-binary-package-os-and-r-version-detection-1" class="level3">
<h3 class="anchored" data-anchor-id="renv-and-binary-package-os-and-r-version-detection-1">Renv and binary package OS and R version detection</h3>
<p>Renv’s default behavior is powerful when using it with Posit Package Manager. It will <em>automatically</em> try to detect the details about your underlying system and set the corrrect URL path so that the appropriate binaries are downloading. If it is unable to find a binary, then it will fail over to the source URL.</p>
</section>
</section>
<section id="configuration-of-posit-package-manager" class="level2">
<h2 class="anchored" data-anchor-id="configuration-of-posit-package-manager">Configuration of Posit Package Manager</h2>
<p>Posit Package Manager is a hosting repository that can be deployed inside a companies network. It is often used in conjunction with vulnerability detection and package blocking for security. It is also useful for hosting internally developed packages that are meant to stay confidential and only used within that particular enterprise organization.</p>
<ul>
<li><a href="https://packagemanager.rstudio.com/__docs__/user/configure-r/#configure-r">Configuring R Environments</a></li>
<li><a href="https://packagemanager.rstudio.com/__docs__/user/configure-python/">Configuring Python Environments</a></li>
</ul>
<p>For Workbench the URL for Package Manager is commonly configured so that it is at least used as the default repository for both R and Python packages from within the customers enterprise network.</p>
<p>Optionally, the Posit Package Manager url can be configured to be specific to:</p>
<ul>
<li>Snapshot dates</li>
<li>Particular curated repository/repositories</li>
<li>Particular OS (in order to install binaries)</li>
</ul>
<section id="package-manager-and-binary-package-os-and-r-version-detection" class="level3">
<h3 class="anchored" data-anchor-id="package-manager-and-binary-package-os-and-r-version-detection">Package Manager and binary package OS and R version detection</h3>
<p>Binary packages are incredibly useful, enabling faster downloads by skipping the compilation step. When a binary package is requested (by using the <code>__linux__</code> URL), Package Manager will make a best effort to serve the requested binary package. If that package is unavailable or <em>unsupported on the user’s binary distribution</em> Package Manager will fall back to serving the packages source version.</p>
<p>Posit Package Manager has the option for the <a href="https://packagemanager.rstudio.com/__docs__/admin/serving-binaries/#binary-user-agents">R user agent header can be configured</a>. The user’s User-Agent request header indicates to Package manager which appropriate binary package to server, based on the R version and the OS. A <a href="https://packagemanager.rstudio.com/__docs__/admin/check-user-agent.R">diagnostic script</a> is provided for generating a diagnostic to make sure this is set correctly. The diagnostic will fail to indicate that the OS and R version in the User-Agent request header needs to be updated.</p>
<details>
<summary>
Click here to expand for the diagnostic script
</summary>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># User agent diagnostic script for Posit Package Manager binary packages</span></span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local</span>({</span>
<span id="cb12-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (.Platform<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>OS.type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unix"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.info</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sysname"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Darwin"</span>) {</span>
<span id="cb12-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Success! Posit Package Manager does not require additional configuration to install binary packages on macOS or Windows."</span>)</span>
<span id="cb12-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invisible</span>())</span>
<span id="cb12-7">  }</span>
<span id="cb12-8"></span>
<span id="cb12-9">  dl_method <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"download.file.method"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb12-10">  dl_extra_args <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"download.file.extra"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb12-11">  user_agent <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HTTPUserAgent"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb12-12"></span>
<span id="cb12-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (dl_method <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) {</span>
<span id="cb12-14">    dl_method <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isTRUE</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">capabilities</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libcurl"</span>))) <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libcurl"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"internal"</span></span>
<span id="cb12-15">  }</span>
<span id="cb12-16"></span>
<span id="cb12-17">  default_ua <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R (%s)"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getRversion</span>(), R.version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>platform, R.version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>arch, R.version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>os))</span>
<span id="cb12-18"></span>
<span id="cb12-19">  instruction_template <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'You must configure your HTTP user agent in R to install binary packages.</span></span>
<span id="cb12-20"></span>
<span id="cb12-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">In your site-wide startup file (Rprofile.site) or user startup file (.Rprofile), add:</span></span>
<span id="cb12-22"></span>
<span id="cb12-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"># Set default user agent</span></span>
<span id="cb12-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%s</span></span>
<span id="cb12-25"></span>
<span id="cb12-26"></span>
<span id="cb12-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Then restart your R session and run this diagnostic script again.</span></span>
<span id="cb12-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb12-29"></span>
<span id="cb12-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb12-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R installation path: %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">R.home</span>()),</span>
<span id="cb12-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R version: %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, R.version.string),</span>
<span id="cb12-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OS version: %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, utils<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>running),</span>
<span id="cb12-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HTTPUserAgent: %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, user_agent),</span>
<span id="cb12-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Download method: %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, dl_method),</span>
<span id="cb12-36">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Download extra args: %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, dl_extra_args),</span>
<span id="cb12-37">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">----------------------------</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-38">  ))</span>
<span id="cb12-39"></span>
<span id="cb12-40">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (dl_method <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libcurl"</span>) {</span>
<span id="cb12-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(default_ua, user_agent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span></span>
<span id="cb12-42">        (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getRversion</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.6.0"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(user_agent, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R ("</span>)) {</span>
<span id="cb12-43">      config <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'options(HTTPUserAgent = sprintf("R/%s R (%s)", getRversion(), paste(getRversion(), R.version["platform"], R.version["arch"], R.version["os"])))'</span></span>
<span id="cb12-44">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(instruction_template, config))</span>
<span id="cb12-45">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invisible</span>())</span>
<span id="cb12-46">    }</span>
<span id="cb12-47">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (dl_method <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curl"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wget"</span>)) {</span>
<span id="cb12-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--header </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">User-Agent: %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, default_ua), dl_extra_args, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) {</span>
<span id="cb12-49">      ua_arg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sprintf(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">--header </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">User-Agent: R (%s)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\\"\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, paste(getRversion(), R.version[</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">platform</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">], R.version[</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">arch</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">], R.version[</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">os</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]))"</span></span>
<span id="cb12-50">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (dl_extra_args <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) {</span>
<span id="cb12-51">        config <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"options(download.file.extra = %s)"</span>, ua_arg)</span>
<span id="cb12-52">      } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb12-53">        config <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"options(download.file.extra = paste(%s, %s))"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shQuote</span>(dl_extra_args), ua_arg)</span>
<span id="cb12-54">      }</span>
<span id="cb12-55">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(instruction_template, config))</span>
<span id="cb12-56">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invisible</span>())</span>
<span id="cb12-57">    }</span>
<span id="cb12-58">  }</span>
<span id="cb12-59"></span>
<span id="cb12-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Success! Your user agent is correctly configured."</span>)</span>
<span id="cb12-61">})</span></code></pre></div>
</details>
</section>
</section>
<section id="configuration-on-workbench-for-r-repository-using-run.r-programmatically-setting-the-repository-location" class="level2">
<h2 class="anchored" data-anchor-id="configuration-on-workbench-for-r-repository-using-run.r-programmatically-setting-the-repository-location">Configuration on Workbench for R repository using run.R / Programmatically setting the repository location</h2>
<p>Instead of the above, a run.R file can be used to programmatically set the repository and library location for users. This is commonly used in validated workflows, where the additional oversight is critical.</p>
<p>Example created by Michael <a href="https://github.com/sol-eng/singularity-rstudio/blob/main/data/r-session-complete/jammy/scripts/run.R">here</a>.</p>
</section>
</section>
<section id="scenarios" class="level1">
<h1>Scenarios</h1>
<section id="scenario-1-setting-up-a-shared-site-library-on-workbench" class="level2">
<h2 class="anchored" data-anchor-id="scenario-1-setting-up-a-shared-site-library-on-workbench">Scenario 1: Setting up a shared site library on Workbench</h2>
<p>The <a href="https://solutions.posit.co/envs-pkgs/environments/shared/">shared site library</a> is specific to an installed version of R. For example for R version <code>4.3.2</code> installed to: <code>/opt/R/4.3.2/lib/R/library</code>:</p>
<ol type="1">
<li>Edit the Rprofile.site file to set the repository URL</li>
</ol>
<pre><code># /opt/R/4.3.2/etc/Rprofile.site
local({
  options(repos = c(CRAN = "https://r-pkgs.example.com/cran/128"))
})</code></pre>
<ol start="2" type="1">
<li><p>(optional) The default site library can be used, at <code>R_HOME/site-library</code> (in this case <code>/opt/R/3.4.4/lib/R/library</code>), or a site library can be set up by setting <code>.Library.site</code> in <code>R_HOME/etc/Rprofile.site</code>. Multiple library locations can be set up to be used.</p></li>
<li><p>Run R as the root/admin account and install all desired packages</p></li>
</ol>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiple packages can be installed at the same time like this: </span></span>
<span id="cb14-2">export R_VERSION<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span></span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>opt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span>{R_VERSION}<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R</span>
<span id="cb14-5"></span>
<span id="cb14-6">sudo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>opt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span>{R_VERSION}<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Rscript <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>e <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'install.packages(c("haven","forcats","readr","lubridate","shiny", "DBI", "odbc", "rvest", "plotly","rmarkdown", "rsconnect","pins","png","tidyverse", "Rcpp"), repos = "http://cran.us.r-project.org")'</span></span>
<span id="cb14-7"></span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">q</span>()</span></code></pre></div>
<ol start="4" type="1">
<li>Users access packages on the system (without needing to install)</li>
</ol>
<p>When using a shared library, the ability for users to change repository settings and package installation can be disabled:</p>
<pre><code># /etc/rstudio/rsession.conf
allow-r-cran-repos-edit=0
allow-package-installation=0</code></pre>
</section>
<section id="scenario-2-setting-up-a-project-to-use-renv" class="level2">
<h2 class="anchored" data-anchor-id="scenario-2-setting-up-a-project-to-use-renv">Scenario 2: Setting up a project to use renv</h2>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install renv</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.package</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv"</span>) </span>
<span id="cb16-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(renv)</span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># activate the project as an renv project</span></span>
<span id="cb16-6">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>()</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate the renv.lock file </span></span>
<span id="cb16-9">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>()</span>
<span id="cb16-10"></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check the status of renv </span></span>
<span id="cb16-12">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">status</span>()</span>
<span id="cb16-13"></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On a separate system the snapshot can be used to install the specific packages and versions </span></span>
<span id="cb16-15">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>() </span>
<span id="cb16-16"></span>
<span id="cb16-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restore a project with an explicit repository URL, note that this does not update the renv.lock file, it will need to be manually edited</span></span>
<span id="cb16-18">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COLORADO"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://colorado.posit.co/rspm/all/latest"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb16-19"></span>
<span id="cb16-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add additional logging</span></span>
<span id="cb16-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">renv.download.trace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</section>
<section id="scenario-3-determining-the-root-package-that-is-causing-a-failing-dependency" class="level2">
<h2 class="anchored" data-anchor-id="scenario-3-determining-the-root-package-that-is-causing-a-failing-dependency">Scenario 3: Determining the root package that is causing a failing dependency</h2>
<p>For example, error message:</p>
<blockquote class="blockquote">
<p>2024/05/17 9:24:10 AM: Error in dyn.load(file, DLLpath = DLLpath, …) : 2024/05/17 9:24:10 AM: unable to load shared object ‘/opt/rstudio-connect/mnt/app/packrat/lib/x86_64-pc-linux-gnu/4.3.2/magick/libs/magick.so’: 2024/05/17 9:24:10 AM: libMagick++-6.Q16.so.8: cannot open shared object file: No such file or directory 2024/05/17 9:24:10 AM: Calls: loadNamespace -&gt; library.dynam -&gt; dyn.load</p>
</blockquote>
<p>We can look through our project repository and see that the <code>magick</code> package isn’t directly being called. So the question is, which package is calling it as dependency?</p>
<p>The easiest way to look up the dependency is to open the renv.lock file and find which package has it listed as a dependency.</p>
<p>Some other tricks that might be useful are:</p>
<ul>
<li>We can use renv to look at top level dependencies: <code>renv::dependencies()</code></li>
<li>We can use base R to look up package dependencies: <code>tools::package_dependencies("leaflet", recursive = TRUE)[[1]]</code></li>
<li>Renv can be told to use pak for package installation with: <code>RENV_CONFIG_PAK_ENABLED = TRUE</code></li>
<li>Check that it set with: <code>Sys.getenv('renv.config.pak.enabled')</code></li>
<li>We can use pak to look up all package dependencies in a tree format: <code>pak::pkg_deps_tree("tibble")</code></li>
<li>We can also get more details about the packages with: <code>pak::pak_sitrep()</code></li>
<li>If an error is encountered, we may need to enable the package pak to work with renv (or be patient and wait a couple minutes after installing pak). There is a useful git issue discussing this <a href="https://github.com/r-lib/pak/issues/325">here</a>.</li>
</ul>
<p>We can then clean up the project and remove packages that are installed, but no longer referenced in the project source, with <code>renv::clean()</code> and save that to the renv lock file with <code>renv::snapshot()</code>. Don’t forget to update your manifest.json file if this is a project being published to Connect with <code>rsconnect::writeManifest()</code>.</p>
</section>
<section id="scenario-4-upgrading-a-project-using-renv-from-r-4.1-to-r-4.4" class="level2">
<h2 class="anchored" data-anchor-id="scenario-4-upgrading-a-project-using-renv-from-r-4.1-to-r-4.4">Scenario 4: Upgrading a project using renv from R 4.1 to R 4.4</h2>
<blockquote class="blockquote">
<p>Why is this relevant? <a href="https://support.posit.co/hc/en-us/articles/23170092899607-CVE-2024-27322-R-bitrary-Code-Execution">R CVE detection, vulnerability removed with R 4.4</a></p>
</blockquote>
<p>What is recommended: For each project, individually capture the requirements with renv. Change the R version and use the renv.lock file to install the captured requirements for the new R version. Perform tests, updating code and package versions as needed.</p>
<p>What is not recommended: An in-place upgrading. Meaning, we do not recommend removing existing R versions and forcing all projects to use R 4.4. It is likely that code will break and will need developer work to make compatible with the new R version.</p>
</section>
<section id="scenario-5-os-migration-for-individual-r-projects-using-renv" class="level2">
<h2 class="anchored" data-anchor-id="scenario-5-os-migration-for-individual-r-projects-using-renv">Scenario 5: OS migration for individual R projects using renv</h2>
<p>Refer to <a href="https://docs.posit.co/how-to-guides/upgrade-os-and-product/phase2-migrate/?h=migrat#workbench-post-migration">here</a></p>
<p>All packages will need to be rebuilt.</p>
<p>These two locations in particular, the user home directories and global R or Python directories, will likely need to be flushed and rebuilt:</p>
<ul>
<li><code>~/R</code></li>
<li><code>~/.local/lib/python3.*</code></li>
</ul>
<p>Reference <a href="https://gist.github.com/edavidaja/5996ffeb042df2642c77c065c07f023d">this script</a> from David which programmatically reinstalls all packages installed into user home directories, or the global R or Python directories.</p>
<p>Rebuild renv:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete existing libraries</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlink</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv/library"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart R session</span></span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.rs.restartR</span>()</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change anything that is needed, repository URL, etc</span></span>
<span id="cb17-8"></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Re-install libraries</span></span>
<span id="cb17-10">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<p>Rebuild venv:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Activate existing venv</span></span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture all installed packages</span></span>
<span id="cb18-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip freeze <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> requirements-freeze.txt</span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Deactivate and delete</span></span>
<span id="cb18-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deactivate</span></span>
<span id="cb18-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> .venv/</span>
<span id="cb18-10"></span>
<span id="cb18-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change anything that is needed, repository URL, etc</span></span>
<span id="cb18-12"></span>
<span id="cb18-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new virtual environment</span></span>
<span id="cb18-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv .venv</span>
<span id="cb18-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .venv/bin/activate </span>
<span id="cb18-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip wheel setuptools</span>
<span id="cb18-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements-freeze.txt</span></code></pre></div>
<p>For Connect, the content runtimes will need to be cleared and rebuilt. This can be <a href="https://docs.posit.co/connect/admin/server-management/runtime-caches/#workflow">done pre-emptively</a>.</p>
<p>Delete:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enumerate the caches known to your server.</span></span>
<span id="cb19-2">rsconnect system caches list \</span>
<span id="cb19-3">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>server https<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span>connect.example.org<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3939</span> \</span>
<span id="cb19-4">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key my<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key</span>
<span id="cb19-5"></span>
<span id="cb19-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate cache targeted for deletion.</span></span>
<span id="cb19-7">rsconnect system caches delete \</span>
<span id="cb19-8">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>server https<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span>connect.example.org<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3939</span> \</span>
<span id="cb19-9">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key my<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key \</span>
<span id="cb19-10">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>language Python \</span>
<span id="cb19-11">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span> \</span>
<span id="cb19-12">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>dry<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>run</span>
<span id="cb19-13"></span>
<span id="cb19-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete one cache.</span></span>
<span id="cb19-15">rsconnect system caches delete \</span>
<span id="cb19-16">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>server https<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span>connect.example.org<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3939</span> \</span>
<span id="cb19-17">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key my<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key \</span>
<span id="cb19-18">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>language Python \</span>
<span id="cb19-19">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span></span></code></pre></div>
<p>Rebuild:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enumerate every "published" content item and save its GUID.</span></span>
<span id="cb20-2">rsconnect content search \</span>
<span id="cb20-3">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>server https<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span>connect.example.org<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3939</span> \</span>
<span id="cb20-4">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key my<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key \</span>
<span id="cb20-5">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>published <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> jq <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.[].guid'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> guids.txt</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Queue each GUID for build.</span></span>
<span id="cb20-8">xargs printf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-g %s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> guids.txt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> xargs rsconnect content build add \</span>
<span id="cb20-9">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>server https<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span>connect.example.org<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3939</span> \</span>
<span id="cb20-10">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key my<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key</span>
<span id="cb20-11"></span>
<span id="cb20-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build each queued content item.</span></span>
<span id="cb20-13">rsconnect content build run \</span>
<span id="cb20-14">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>server https<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span>connect.example.org<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3939</span> \</span>
<span id="cb20-15">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key my<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>api<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key</span></code></pre></div>
</section>
<section id="scenario-6-changing-the-project-repository-url" class="level2">
<h2 class="anchored" data-anchor-id="scenario-6-changing-the-project-repository-url">Scenario 6: Changing the project repository URL</h2>
<p>Often the package repository is set to a specific source URL. This can be due to it being within your network, or so that you are getting binaries for a specific OS version, etc.</p>
<p>Using the <code>RENV_CONFIG_REPOS_OVERRIDE</code> setting:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'repos'</span>)</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the override as a one off </span></span>
<span id="cb21-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RENV_CONFIG_REPOS_OVERRIDE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COLORADO"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://colorado.posit.co/rspm/all/latest"</span>)) </span>
<span id="cb21-5"></span>
<span id="cb21-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check that it set </span></span>
<span id="cb21-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RENV_CONFIG_REPOS_OVERRIDE"</span>)</span>
<span id="cb21-8"></span>
<span id="cb21-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn on debug logging so we can see more information about where packages are coming from and verify it's using the correct URL</span></span>
<span id="cb21-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">renv.download.trace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb21-11"></span>
<span id="cb21-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rebuild the environment using that URL</span></span>
<span id="cb21-13">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb21-14"></span>
<span id="cb21-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Override only applies during restore, and won't update the renv.lock file, so either manually update the renv.lock file with the appropriate URLor using renv::snapshot(repos = "")</span></span></code></pre></div>
<p>Using the <code>repos</code> setting during rebuild:</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rebuild </span></span>
<span id="cb22-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COLORADO"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://colorado.posit.co/rspm/all/latest"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snapshot s the URL change is reflected</span></span>
<span id="cb22-5">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COLORADO"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://colorado.posit.co/rspm/all/latest"</span>)) </span></code></pre></div>
<p>Changing it directly in the renv.lock file:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'repos'</span>)</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Either manually update the renv.lock file with the appropriate URL or using</span></span>
<span id="cb23-4">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COLORADO"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://colorado.posit.co/rspm/all/latest"</span>)) </span>
<span id="cb23-5"></span>
<span id="cb23-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rebuild the environment using that URL</span></span>
<span id="cb23-7">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</section>
<section id="scenario-7-recovering-an-old-project-that-didnt-have-an-renv-and-isnt-working-with-latest-r-package-versions" class="level2">
<h2 class="anchored" data-anchor-id="scenario-7-recovering-an-old-project-that-didnt-have-an-renv-and-isnt-working-with-latest-r-package-versions">Scenario 7: Recovering an old project that didn’t have an renv and isn’t working with latest R, package versions</h2>
<p>Use the snapshot date option with package manager to “guess” when the environment would have been built with renv so that package versions can be individually tweaked until the project works. Use the <code>renv::revert</code> feature with version control to update the packages with the ability to downgrade as needed.</p>
</section>
<section id="scenario-8-going-between-os-on-the-same-workbench-system-using-slurm-singularity-with-a-renv-project" class="level2">
<h2 class="anchored" data-anchor-id="scenario-8-going-between-os-on-the-same-workbench-system-using-slurm-singularity-with-a-renv-project">Scenario 8: Going between OS on the same Workbench system using slurm / singularity with a renv project</h2>
<p>With the interaction between renv and package manager, as well as the additions with recognition from renv when the OS and R version has changed, things should just work magically as long as the project is configured to use these pieces:</p>
<ul>
<li>renv</li>
<li>package manager (binaries enabled)</li>
</ul>
<p>On a system that has been configured to use slurm with singularity images (that are different OS’s) we can run these lines to get a feel for what is going on:</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn on debug logging so we can see more information about where packages are coming from and verify it's using the correct URL</span></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">renv.download.trace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check the default repository URL</span></span>
<span id="cb24-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'repos'</span>)</span>
<span id="cb24-6"></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check the OS version</span></span>
<span id="cb24-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cat /etc/os-release"</span>)</span>
<span id="cb24-9"></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check the details of our singularity environment</span></span>
<span id="cb24-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"env | grep SINGULARITY"</span>)</span>
<span id="cb24-12"></span>
<span id="cb24-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check that auto-path prefix re-writing is set</span></span>
<span id="cb24-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RENV_PATHS_PREFIX_AUTO"</span>)</span>
<span id="cb24-15"></span>
<span id="cb24-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We can attempt to set the URL to a specific binary, when we snapshot it will update the lock file to have the generic URL</span></span>
<span id="cb24-17">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RSPM"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/cran/__linux__/centos8/latest"</span>)) </span>
<span id="cb24-18"></span>
<span id="cb24-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We can attempt to set the URL to a specific binary, when we snapshot it will update the lock file to have the generic URL</span></span>
<span id="cb24-20">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RSPM"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/cran/__linux__/jammy/latest"</span>)) </span>
<span id="cb24-21"></span>
<span id="cb24-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the renv to use a source URL as RSPM </span></span>
<span id="cb24-23">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RSPM"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/cran/latest"</span>)) </span>
<span id="cb24-24"></span>
<span id="cb24-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We can also manually set the repo outside of renv this way, for example to successfully download renv</span></span>
<span id="cb24-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CRAN=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cran.r-project.org"</span>))</span>
<span id="cb24-27"></span>
<span id="cb24-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rebuild the environment using that URL</span></span>
<span id="cb24-29">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
<p>Inside the renv lock file we might see a couple different things:</p>
<pre><code>    "Repositories": [
      {
        "Name": "CRAN",
        "URL": "https://packagemanager.posit.co/cran/__linux__/centos8/latest"
      },</code></pre>
<p>This will cause problems and will tell renv to install the wrong version of packages for the wrong OS.</p>
<p>If we try to snapshot a binary repository URL with <code>renv::snapshot(repos = c("RSPM" = "https://packagemanager.posit.co/cran/__linux__/jammy/latest"))</code> then we will see the renv.lock will be updated to:</p>
<pre><code>    "Repositories": [
      {
        "Name": "RSPM",
        "URL": "https://packagemanager.posit.co/cran/latest"
      }</code></pre>
<p>This correction from the binary URL to the base URL will happen regardless of whether the OS matches the one we are using or not.</p>
<p>When we install a package we will see that it is downloading the binary. This is the magic of <code>RENV_PATHS_PREFIX_AUTO</code>! This happens regardless of whether our package source is <code>CRAN</code> or <code>RSPM</code>.</p>
<p>We can test what the outputs are for each scenario:</p>
<ul>
<li>Before a project has been initialized</li>
<li>Once a project has been initialized, with renv</li>
<li>Closing the project and re-opening it with a different image (different OS) and restoring packages (‘renv::restore(rebuild=TRUE)’)</li>
</ul>
<p>The auto-path prefix re-writing is really powerful. This means that, for example, upgrading to a new version of an OS will automatically signal to renv that new library + cache directories will be required. The caveats to know are:</p>
<ul>
<li>Starting with 4.4, renv automatically uses a platform prefix for library paths on linux.</li>
<li>R versions below this may need to have the paths prefix set (for example for just the session with <code>Sys.setenv("RENV_PATHS_PREFIX_AUTO" = TRUE)</code>, though most likely this should be set at the user or global level).</li>
</ul>
<p>We can set auto-path prefix re-writing at the user level by adding <code>RENV_PATHS_PREFIX_AUTO = TRUE</code> into the user r environ file:</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(usethis)</span>
<span id="cb27-2">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_environ</span>() </span></code></pre></div>
</section>
</section>
<section id="common-issues-and-troubleshooting" class="level1">
<h1>Common issues and troubleshooting</h1>
<section id="package-installation-errors-on-workbench" class="level2">
<h2 class="anchored" data-anchor-id="package-installation-errors-on-workbench">Package installation errors on Workbench</h2>
<p>Here’s an example error message that occurred during package installation inside Workbench (<code>install.packages(askpass)</code>):</p>
<blockquote class="blockquote">
<p>* installing <em>binary</em> package ‘askpass’ … cp: cannot open ‘./libs/askpass.so’ for reading: Operation not permitted /usr/bin/gtar: You may not specify more than one ‘-Acdtrux’, ‘–delete’ or ‘–test-label’ option Try ‘/usr/bin/gtar –help’ or ‘/usr/bin/gtar –usage’ for more information. /usr/bin/gtar: This does not look like a tar archive /usr/bin/gtar: Exiting with failure status due to previous errors</p>
</blockquote>
<p>A good first trouble shooting step is to SSH on the server and open an R session as root and attempt to install the same package. This helps to rule out where the issue is coming from, the global R configuration, the server, or a specific user issue or something with the Workbench configuration. Create a R session after SSH-ing into the server with <code>/opt/R/${R_VERSION}/bin/R</code></p>
<section id="where-to-start" class="level3">
<h3 class="anchored" data-anchor-id="where-to-start">Where to start</h3>
<p>Get the system information: <code>Sys.info()</code></p>
<p>Get session details: <code>sessionInfo()</code></p>
</section>
<section id="problems-with-pak" class="level3">
<h3 class="anchored" data-anchor-id="problems-with-pak">Problems with pak</h3>
<p>Get details about pak (if used): <code>pak::pak_sitrep()</code></p>
<p>Check if <a href="https://rstudio.github.io/renv/reference/config.html#renv-config-pak-enabled">renv has been configured to use pak</a>: <code>Sys.getenv('renv.config.pak.enabled')</code></p>
</section>
<section id="problems-with-renv-where-to-start" class="level3">
<h3 class="anchored" data-anchor-id="problems-with-renv-where-to-start">Problems with renv : where to start</h3>
<p>Can they provide a renv diagnostic? It is generated by running this: <code>renv::diagnostics()</code>.</p>
</section>
<section id="problems-with-renv-cache-location" class="level3">
<h3 class="anchored" data-anchor-id="problems-with-renv-cache-location">Problems with renv : cache location</h3>
<p>Check the location of the renv cache:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>paths<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>()</span>
<span id="cb28-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RENV_PATHS_CACHE'</span>)</span>
<span id="cb28-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'renv.config.external.libraries'</span>)</span>
<span id="cb28-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'renv.download.trace'</span>)</span>
<span id="cb28-5">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>paths<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache</span>()</span>
<span id="cb28-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RENV_PATHS_PREFIX_AUTO'</span>)</span></code></pre></div>
<p>Make sure that it is located to a writeable location (if it is a mount, see the note about file mounts below, this could be a source of issues):</p>
<p><code>system('namei -l /rsspdata/common/renv_cache/renv/v5/R-3.6/x86_64-pc-linux-gnu')</code></p>
<p>Check that the renv cache location matches the library locations: <code>.libPaths()</code></p>
<p>By default packages are installed into the global cache at <code>~/.cache/R/renv/</code> and symlinked from the users cache within the project at <code>~/renv/library/</code>.</p>
<p>Are they using a <a href="https://rstudio.github.io/renv/articles/package-install.html?q=PATH#shared-cache-locations">shared renv cache</a>, or an <a href="https://rstudio.github.io/renv/reference/config.html#renv-config-external-libraries">external library</a>,</p>
<p>Do they know if they’ve implemented settings in either of these, and could they share the contents?</p>
<ul>
<li><a href="https://packagemanager.rstudio.com/__docs__/user/configure-r/#configure-base-r">Rprofile.site</a> : The <code>RProfile.site</code> file is typically located at <code>etc/Rprofile.site</code></li>
<li><a href="https://support.posit.co/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">Renviron.site</a> : The <code>Renviron.site</code> file is specific to the R installation (in this case I’m interested in if it exists for R 4.3 and R 3.6), typically located at <code>file.path(R.home("etc"), "Renviron.site")</code>.</li>
<li>Check if an external library is referenced in the environment: <code>options('renv.config.external.libraries')</code></li>
</ul>
<p>Is the goal to use a <a href="https://rstudio.github.io/renv/articles/package-install.html?q=PATH#shared-cache-locations">shared renv cache</a> location? There are a couple caveats with shared cache’s that can make them tricky. (1) cache permissions can be set with ACL’s, needing admin oversight to make sure are set correctly, (2) packages in the cache are owned by the requesting user, unless the RENV_CACHE_USER option is set. When set, renv will attempt to run <code>chown -R &lt;package&gt; &lt;user&gt;</code> to update cache ownership after the package has been copied into the cache.</p>
<p>If the desired behavior is to have a <a href="https://rstudio.github.io/renv/articles/package-install.html?q=PATH#shared-cache-locations">shared renv cache</a> then these two settings will likely need to be added to the project .Renviron, user .Renviron, or site Renviron.site file:</p>
<ul>
<li><a href="https://rstudio.github.io/renv/articles/package-install.html#cache-location">RENV_PATHS_CACHE</a> : Path location for a cache shared across multiple users</li>
<li><a href="https://rstudio.github.io/renv/articles/package-install.html?q=PATH#shared-cache-locations">RENV_CACHE_USER</a> : When using a shared cache, renv can re-assign ownership of the cache’d package to a separate user account</li>
</ul>
<p>I’d be curious, if it’s possible for them, to see if they are able to use R 4.4, or to set that parameter <code>RENV_PATHS_PREFIX_AUTO</code> to true (for example for just the session with <code>Sys.setenv("RENV_PATHS_PREFIX_AUTO" = TRUE)</code>) using their current version of R, and repeat the steps of installing a package:</p>
<blockquote class="blockquote">
<p>Starting with R 4.4.0, renv automatically uses a platform prefix for library paths on linux (the equivalent to setting <code>RENV_PATHS_PREFIX_AUTO = TRUE</code>). This means that, for example, upgrading to a new version of an OS will automatically signal to renv that new library + cache directories will be required.</p>
</blockquote>
<p>Of course, they could also try this for installing the package, bypassing the cache, and see if it works (but I’m worried that there is a ghost setting somewhere that needs to be removed so that issues don’t keep popping up):</p>
<pre class="plaintext"><code># install a package, bypassing the cache
renv::install("&lt;package&gt;", rebuild = TRUE)

# restore packages from the lockfile, bypassing the cache
renv::restore(rebuild = TRUE)</code></pre>
</section>
<section id="problems-with-renv-other" class="level3">
<h3 class="anchored" data-anchor-id="problems-with-renv-other">Problems with renv : other</h3>
<p>Check:</p>
<ul>
<li>Are you running the latest renv? If not, upgrade</li>
<li>Add additional logging: <code>options(renv.download.trace = TRUE)</code></li>
<li>Take a diagnostic: <code>renv::diagnostics()</code></li>
</ul>
<p>If you are having particular issue with a package and it keeps being pulled in from the cache then doing a complete purge and reinstall can be useful:</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">purge</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringr"</span>)</span>
<span id="cb30-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">purge</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringi"</span>)</span>
<span id="cb30-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringr"</span>)</span></code></pre></div>
<p><code>renv::purge</code> removes packages completely from the package cache (which may be shared across projects) rather than just removing the package from the project which is what <code>renv::remove</code> does. This can be useful if a package which had previously been installed in the cache has become corrupted or unusable, and needs to be re-installed.</p>
<p>Follow these steps to “flush” and rebuild the renv environment, without losing the important parts of your renv.lock that are defining the R version and package versions:</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>()</span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the appropriate changes (for example, changing OS) </span></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the renv.lock file manually to reflect any needed changes (for example, changing the repository URL) </span></span>
<span id="cb31-4">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">deactivate</span>()</span>
<span id="cb31-5">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activate</span>()</span>
<span id="cb31-6">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rebuild=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
<p>Check that the packages either installed into the global cache at <code>~/.cache/R/renv/</code> or the users cache within the project at <code>~/renv/library/</code>. The folder structure will give some clues for whether source, binaries were installed, and which OS and R version they were installed for if specified.</p>
</section>
<section id="problems-with-packages-not-persisting" class="level3">
<h3 class="anchored" data-anchor-id="problems-with-packages-not-persisting">Problems with packages not persisting</h3>
<p>Is this on a cloud vendor? IE sagemaker, google workstations, azureml? Check that the package repository location is being saved to the mounted drive. If it is saved to the general OS that is ephemeral it will be lost when the session is spun down. This also applies for things like git credentials.</p>
</section>
<section id="incorrect-corrupted-r-installation" class="level3">
<h3 class="anchored" data-anchor-id="incorrect-corrupted-r-installation">Incorrect / corrupted R installation</h3>
<p>Check for an incorrect R installation for the OS, or a R installation that has gotten corrupted. An easy way to test this is to install a new R version, making sure to closely follow <a href="https://docs.posit.co/resources/install-r/">the instructions</a> as well as verifying the OS version.</p>
</section>
<section id="incorrect-package-repository-source-url-for-the-particular-system-os" class="level3">
<h3 class="anchored" data-anchor-id="incorrect-package-repository-source-url-for-the-particular-system-os">Incorrect package repository source URL for the particular system OS</h3>
<p>When R installs a binary package, it doesn’t actually check if the package can be loaded after installation, which is different from source packages. So it is unfortunately possible to install a binary package only to find out later that it can’t actually be loaded.</p>
<p>Check the URL that the user is installing from: <code>options('repos')</code></p>
<p>Temporarily point the repository to global CRAN and check if the packages will successfully install. For example by running this: <code>options(repos=c(CRAN="https://cran.r-project.org"))</code> and then installing any package with <code>install.packages("ggplot2")</code></p>
<p>Check in <code>/etc/rstudio/rsession.conf</code> if there is anything that would set the library location, for example <code>r-libs-user=~/R/library</code>.</p>
<p>It may also be useful to verify both the OS you are currently useing as well as checking that the repository you are pointing towards is using the correct OS if it is pulling in the binaries.</p>
<p>For debian/ubuntu distributions:</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb32-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lsb_release</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span></span></code></pre></div>
<p>For other distributions (more broadly cross-linux compatible command):</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /etc/os-release</span></code></pre></div>
</section>
<section id="users-lacking-readwrite-permissions-to-their-home-directory" class="level3">
<h3 class="anchored" data-anchor-id="users-lacking-readwrite-permissions-to-their-home-directory">Users lacking read/write permissions to their home directory</h3>
<p>Check the home directory permissions on <code>/home/username/</code>. For example with <code>namei -l /home/username/</code>.</p>
<p>If useful, could try recursively chown-ing the directory with the user experiencing the issue and <code>chmod 750</code> to make sure there is access.</p>
<p>This can commonly happen after a migration from one server to another, if the correct permissions weren’t correctly carried over. This is why we commonly recommend using rsync with the -a flag for transfer any files / directories. This syncs directories recursively and preserve symbolic links, groups, ownership, and permissions. Additionally, rsync needs to be used in root mode in order to completely move the various software and home directory components as it includes files with restrictive read and write permissions.</p>
<p>For example, the permissions should look something like: <code>-rwx-r--r--</code></p>
</section>
<section id="users-lacking-permissions-to-.libs" class="level3">
<h3 class="anchored" data-anchor-id="users-lacking-permissions-to-.libs">Users lacking permissions to ./libs</h3>
<p>Check the permissions on <code>./libs/</code>. For example with <code>namei -l ./libs</code> and <code>ls -la ./libs</code></p>
</section>
<section id="incorrect-pam-configuration-for-users" class="level3">
<h3 class="anchored" data-anchor-id="incorrect-pam-configuration-for-users">Incorrect PAM configuration for users</h3>
<p>Check the output of <code>sudo getent passwd username</code></p>
<p>From a workbench session the output of the environment, <code>Sys.getenv()</code> and compare between a Workbench session and logged into a R session as root on the server (after SSH-ing in)</p>
<p>From an SSH session as root check the outputs of the user verification commands: <code>sudo /usr/lib/rstudio-server/bin/pamtester --verbose &lt;session-profile&gt; &lt;user&gt; authenticate acct_mgmt setcred open_session</code></p>
<p>For example this command will likely look like: <code>sudo /usr/lib/rstudio-server/bin/pamtester --verbose rstudio-session username authenticate acct_mgmt setcred open_session</code></p>
<p>Check for any umask or mask lines used during user provisioning, in the <code>/etc/sssd/sssd.conf</code> file</p>
</section>
<section id="server-hardening" class="level3">
<h3 class="anchored" data-anchor-id="server-hardening">Server hardening</h3>
<p>Another thing to check is whether <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/using_selinux/changing-selinux-states-and-modes_using-selinux">SELinux is enabled on the system</a>. Check the mode with <code>getenforce</code></p>
<p>This can result in user specific errors, in that case compare the SELinux context for a user that has successfully package installations to the one that is having errors.</p>
<p>Often the following command will work to fix SELinux context issues: <code>restorecon -Rv /home/users/username</code></p>
<p>Great article from our support team discussing <a href="https://support.posit.co/hc/en-us/articles/4579112985751-SELinux-a-quick-primer-and-troubleshooter">how to use selinux</a></p>
<p>Disable SELINUX (RHEL only): <code>setenforce 0 &amp;&amp; sudo sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config</code></p>
<p>Check for <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/assembly_installing-the-system-in-fips-mode_security-hardening">FIPS being enabled</a>: <code>fips-mode-setup --check</code></p>
<p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/assembly_installing-the-system-in-fips-mode_security-hardening">This article from redhat on FIPS mode</a> is also very useful.</p>
</section>
<section id="mounted-share-drive" class="level3">
<h3 class="anchored" data-anchor-id="mounted-share-drive">Mounted share drive</h3>
<p>Check if <code>/home</code> on the server, or is it a network mount (NFS or CIFS). In NFS, for example, there can be the use of access control lists which can impact permissions. Similarly, when working in a system that has a mounted share drive then would want to check that libraries are being written to that share so you get persistence. Typically this means writing to inside the home directory. Check mounted drives with: <code>df -h</code></p>
<p>Check <code>/etc/fstab</code> to see if the home directories are mounted with <code>noexec</code></p>
<p>For example, this shows that the home directories were mounted with <code>noexec</code>: <code>/dev/mapper/rhel-home  /home  xfs    defaults,noexec,nosuid,nodev   0 0</code></p>
<p>This resulted in this error message:</p>
<pre><code>library(stringi)Error: package or namespace load failed for 'stringi' in dyn.load(file, DLLpath = DLLpath, ...):
unable to load shared object '/home/c_jjones/R/x86_64-pc-linux-gnu-library/4.3/stringi/libs/stringi.so':
  /home/c_jjones/R/x86_64-pc-linux-gnu-library/4.3/stringi/libs/stringi.so: failed to map segment from shared object</code></pre>
</section>
<section id="azure-cloud-images" class="level3">
<h3 class="anchored" data-anchor-id="azure-cloud-images">Azure cloud images</h3>
<p>The default Azure RHEL images are unfortunately constricted in their ability to do some things.</p>
</section>
<section id="slurm" class="level3">
<h3 class="anchored" data-anchor-id="slurm">Slurm</h3>
<p>The Slurm service account should have full privileges to the Slurm environment (like killing jobs).</p>
<p>In regards to not being able to run the diagnostics command, could you please provide the following:</p>
<ul>
<li>Enable debug logging by setting enable-debug-logging=1 in /etc/rstudio/launcher.slurm.conf</li>
<li>Trigger the issue you are experiencing after restarting the launcher.</li>
<li>Resulting logs will be in: - /var/lib/rstudio-launcher/Slurm/rstudio-slurm-launcher.log</li>
<li>The Slurm version, which can be found by running sinfo –version</li>
<li>The installation location of Slurm on the host</li>
<li>Your /etc/slurm.conf (or equivalent) configuration file</li>
<li>The output of running sinfo as the Slurm service user configured in /etc/rstudio/launcher.slurm.conf</li>
<li>Run test job with srun date</li>
<li>Replace <user> with a valid username of a user that is set up to run Posit - Workbench in your installation, in the commands below:</user></li>
<li>sudo rstudio-server stop</li>
<li>sudo rstudio-server verify-installation –verify-user=<user></user></li>
<li>sudo rstudio-server start</li>
<li>The output of running sudo rstudio-launcher status</li>
</ul>
</section>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://rstudio.github.io/renv/reference/paths.html#sharing-state-across-operating-systems">Sharing state across operating systems</a></li>
<li><a href="https://rstats.wtf/r-startup">What they forgot to teach you about R</a></li>
<li><a href="https://rstudio.github.io/renv/reference/config.html#renv-config-repos-override">renv.config.repos.override</a></li>
<li><a href="https://support.posit.co/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">Managing R with .Rprofile, .Renviron, Rprofile.site, Renviron.site, rsession.conf, and repos.conf</a></li>
<li><a href="https://packagemanager.rstudio.com/__docs__/user/configure-r/">Package Manager admin guide: Configuring R Environments</a></li>
<li><a href="https://docs.posit.co/ide/server-pro/rstudio_pro_sessions/package_installation.html">Workbench admin guide: Rstudio Pro Sessions: Package Installation</a></li>
<li><a href="https://solutions.posit.co/envs-pkgs/environments/">Reproduceable Environments</a></li>
<li><a href="https://packagemanager.rstudio.com/__docs__/admin/serving-binaries/#binary-user-agents">R user agent header can be configured</a></li>
<li><a href="https://support.posit.co/hc/en-us/articles/218730228-Resetting-a-user-s-state-in-the-RStudio-IDE-on-Posit-RStudio-Workbench-RStudio-Server">Reset users state on Workbench</a></li>
<li><a href="https://support.posit.co/hc/en-us/articles/215733837-Managing-libraries-for-RStudio-Workbench-RStudio-Server">Managing libraries for RStudio Workbench / RStudio Server</a></li>
<li><a href="https://solutions.posit.co/envs-pkgs/rsw_defaults/">Setting Default Repositories in Workbench</a></li>
<li><a href="https://rstudio.github.io/r-manuals/r-admin/">R Manuals :: R Installation and Administration</a></li>
<li>It was discussed in <a href="https://stackoverflow.com/questions/65326540/how-to-change-r-repository-cran-from-renv-lock-to-get-packages-from-an-internal">this stackoverflow post</a> with this example (run from console): `Sys.setenv(“RENV_CONFIG_REPOS_OVERRIDE” = “your_private_package_repository_url”)</li>
<li>Internal slack thread: <a href="https://positpbc.slack.com/archives/CFLAY27EH/p1715370382325929" class="uri">https://positpbc.slack.com/archives/CFLAY27EH/p1715370382325929</a></li>
</ul>



</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/renv-environments.html</guid>
  <pubDate>Fri, 21 Jun 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Shiny apps and Analytics</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/shiny-apps-and-analytics.html</link>
  <description><![CDATA[ 





<p>Adding instrumentation to your shiny apps can help you understand:</p>
<ul>
<li>User interaction</li>
<li>Most viewed dashboards</li>
<li>What is being exported and by who</li>
<li>Trends with access over time</li>
<li>Time spent on interactions</li>
</ul>
<p>Connect (as a software) isn’t aggregating and making available user interaction information, though it is aggregating higher level app specific access auditing type information. HOwever, advanced interaction instrumentation can be accomplished through adding tracking into the content itself using services like hotjar, google analytics, or saving into the log file or pushing into somewhere external.</p>
<ul>
<li>There’s more on the Connect API here: https://solutions.posit.co/operations/connect-apis/</li>
<li>Google analytics likely requires adding some JavaScript to your site which you can do with Shiny, https://shiny.posit.co/r/reference/shiny/latest/builder.html</li>
<li>This page in the Shiny docs give a walkthrough as well: https://shiny.posit.co/r/articles/build/google-analytics/</li>
<li>Tracking where within the Shiny app users are spending their time (which tab, etc) is interesting.</li>
<li>Monitoring user behavior with hotjar (paid): https://www.r-bloggers.com/2022/06/r-shiny-hotjar-how-to-monitor-user-behavior-in-r-shiny-apps/</li>
<li>Here’s an article that outlines more free options: https://www.appsilon.com/post/monitoring-r-shiny-user-adoption</li>
<li>Javascript might need to be added to your site to support using google analytics: https://shiny.posit.co/r/reference/shiny/latest/builder.html</li>
<li>Various examples for tracking built in to Connect: https://solutions.rstudio.com/data-science-admin/tracking/ and https://github.com/sol-eng/connect-usage</li>
<li>Video showing how to use the Connect API: https://www.youtube.com/watch?v=0iljqY9j64U</li>
</ul>



 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/shiny-apps-and-analytics.html</guid>
  <pubDate>Mon, 29 Apr 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Accessing data in Azure Data Lake (delta files)</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/delta-lake-and-azure.html</link>
  <description><![CDATA[ 





<p>This is some work I did exploring how to access the underlying databricks data storage, without having to go through databricks. Wanted to squirrel this away so it’s easy to find in the future!</p>
<section id="azure-data-lake" class="level2">
<h2 class="anchored" data-anchor-id="azure-data-lake">Azure Data Lake</h2>
<section id="set-up" class="level3">
<h3 class="anchored" data-anchor-id="set-up">Set up</h3>
<p>Landing page for Azure: &lt;<a href="https://portal.azure.com/">https://portal.azure.com/</a> &gt;</p>
<p>Follow this article: &lt;<a href="https://learn.microsoft.com/en-us/azure/storage/blobs/create-data-lake-storage-account">https://learn.microsoft.com/en-us/azure/storage/blobs/create-data-lake-storage-account</a> &gt;</p>
<p>The trick: ADL isn’t it’s own separate category, it gets created as part of a storage account.</p>
<p>Steps:</p>
<ol type="1">
<li><p>Go to storage account</p></li>
<li><p>Create and give it a name</p></li>
<li><p>Select: LRS</p></li>
<li><p>Switch to premium: block blobs</p></li>
<li><p>Change to hierarchical blob</p></li>
<li><p>Set tags:</p></li>
</ol>
<ul>
<li><p>rs:owner</p></li>
<li><p>rs:project = soleng</p></li>
<li><p>rs:environment = dev</p></li>
</ul>
<ol start="7" type="1">
<li>Once in just need access keys or shared access signature in order to gain access</li>
</ol>
</section>
<section id="add-data" class="level3">
<h3 class="anchored" data-anchor-id="add-data">Add data</h3>
<p>You can add data manually by creating a container and then using the upload icon.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://gist.github.com/assets/70042237/750bd967-979a-4220-a1f2-9cf5118dfcdd.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" data-glightbox="description: .lightbox-desc-1" title="image"><img src="https://gist.github.com/assets/70042237/750bd967-979a-4220-a1f2-9cf5118dfcdd.png" class="img-fluid figure-img" alt="image"></a></p>
<figcaption>image</figcaption>
</figure>
</div>
</section>
</section>
<section id="authentication" class="level2">
<h2 class="anchored" data-anchor-id="authentication">Authentication</h2>
<p>Access your authentication details through the Access Keys or Shared Access Signature links on the left. I prefer Access Keys since they are easier to use.</p>
<p>For authentication from an R script we’ll be using <a href="https://github.com/Azure/AzureStor">https://github.com/Azure/AzureStor</a></p>
<p>You’ll need to know:</p>
<ul>
<li><p>The Blob endpoint for your Azure Data Lake storage</p></li>
<li><p>An Access Key (this can also be done with a Shared Access Signature)</p></li>
</ul>
<pre><code>library(AzureStor)

blob_endpoint &lt;- "https://REDACTED.blob.core.windows.net/"

bl_endp_key &lt;- storage_endpoint(blob_endpoint, key="REDACTED")

# List containers and files in containers
list_storage_containers(bl_endp_key)
cont1 &lt;- storage_container(bl_endp_key, "container1")
list_storage_files(cont1)

# Download a file
storage_download(cont1, "/crm_call_center_logs.parquet")

# Upload a file 
storage_upload(cont1, "crm_call_center_logs.parquet", "newdir/crm_call_center_logs.parquet")</code></pre>
<p>You can also create and delete containers:</p>
<pre><code># Create a container
newcont &lt;- create_storage_container(bl_endp_key, "container3")

# Create a directory in the container
cont3 &lt;- storage_container(bl_endp_key, "container3")
create_storage_dir(cont3, "newdir")

# Delete a container
delete_storage_container(newcont)</code></pre>
</section>
<section id="reading-and-writing-delta-files" class="level2">
<h2 class="anchored" data-anchor-id="reading-and-writing-delta-files">Reading and Writing Delta Files</h2>
<p>Delta files can be read by using the sparklyr package: <a href="https://spark.rstudio.com/packages/sparklyr/latest/reference/spark_read_delta.html">https://spark.rstudio.com/packages/sparklyr/latest/reference/spark_read_delta.html</a> Thanks for the help with the magic incantation below!</p>
<p>In order to do this we will need to manage a Spark cluster. We can run it in local mode so that we aren’t connecting to an external cluster with billing:</p>
<pre><code>library(sparklyr)

#Install a local version of Spark
spark_install(version=3.4)

# Set Spark configuration to be able to read delta tables
conf &lt;- spark_config()
conf$`spark.sql.extensions` &lt;- "io.delta.sql.DeltaSparkSessionExtension"
conf$`spark.sql.catalog.spark_catalog` &lt;- "org.apache.spark.sql.delta.catalog.DeltaCatalog"

# For spark 3.4 
conf$sparklyr.defaultPackages &lt;- "io.delta:delta-core_2.12:2.4.0"

# Open a connection
sc &lt;- spark_connect("local", version = 3.4, packages = "delta", conf = conf)

# For this example we will use a built-in dataframe to save example data files, including one for delta tables
tbl_mtcars &lt;- copy_to(sc, mtcars, "spark_mtcars")

# Write spark dataframe to disk
spark_write_csv(tbl_mtcars,  path = "test_file_csv", mode = "overwrite")
spark_write_parquet(tbl_mtcars,  path = "test_file_parquet", mode = "overwrite")
spark_write_delta(tbl_mtcars,  path = "test_file_delta", mode = "overwrite")

# Read dataframes into normal memory
spark_tbl_handle &lt;- spark_read_csv(sc, path = "test_file_csv")
regular_df_csv &lt;- collect(spark_tbl_handle)
spark_tbl_handle &lt;- spark_read_parquet(sc, path = "test_file_parquet")
regular_df_parquet &lt;- collect(spark_tbl_handle)
spark_tbl_handle &lt;- spark_read_delta(sc, path = "test_file_delta")
regular_df_delta &lt;- collect(spark_tbl_handle)

# Disconnect
spark_disconnect(sc)</code></pre>
<p>You should now have normal dataframes in your regular R environment that can be used for further analytics:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://gist.github.com/assets/70042237/52a8fd86-8f58-4688-87a6-7a5433d28aee.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" data-glightbox="description: .lightbox-desc-2" title="image"><img src="https://gist.github.com/assets/70042237/52a8fd86-8f58-4688-87a6-7a5433d28aee.png" class="img-fluid figure-img" alt="image"></a></p>
<figcaption>image</figcaption>
</figure>
</div>
<p>Note: For Spark 3.5 you might have success with “io.delta:delta-core_2.12:3.0.0”</p>
</section>
<section id="troubleshooting" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h2>
<p>From R:</p>
<pre><code># See spark details (troubleshooting)
spark_config()
spark_get_java()
spark_available_versions()
spark_installed_versions()

# See session details
utils::sessionInfo() </code></pre>
<p>From bash:</p>
<pre><code>namei -l /usr/lib/spark</code></pre>
<p>Recommended troubleshooting: <a href="https://spark.rstudio.com/guides/troubleshooting.html">https://spark.rstudio.com/guides/troubleshooting.html</a></p>
</section>
<section id="about" class="level2">
<h2 class="anchored" data-anchor-id="about">About</h2>
<section id="azure-data-lake-azure-data-lake-storage-gen2-introduction---azure-storage" class="level3">
<h3 class="anchored" data-anchor-id="azure-data-lake-azure-data-lake-storage-gen2-introduction---azure-storage">Azure Data Lake: <a href="https://learn.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction">Azure Data Lake Storage Gen2 Introduction - Azure Storage</a></h3>
<blockquote class="blockquote">
<p>Azure Data Lake Storage Gen2 is a set of capabilities dedicated to big data analytics, built on Azure Blob Storage.</p>
</blockquote>
<blockquote class="blockquote">
<p>Data Lake Storage Gen2 converges the capabilities of Azure Data Lake Storage Gen1 with Azure Blob Storage. For example, Data Lake Storage Gen2 provides file system semantics, file-level security, and scale. Because these capabilities are built on Blob storage, you’ll also get low-cost, tiered storage, with high availability/disaster recovery capabilities.</p>
</blockquote>
<blockquote class="blockquote">
<p>A superset of POSIX permissions: The security model for Data Lake Gen2 supports ACL and POSIX permissions along with some extra granularity specific to Data Lake Storage Gen2. Settings may be configured through Storage Explorer or through frameworks like Hive and Spark.</p>
</blockquote>
<p>TLDR: Azure Data Lake is a place where data can be saved (similar to S3 buckets on Amazon).</p>
</section>
<section id="delta-tables-httpsdocs.delta.iolatestdelta-intro.html" class="level3">
<h3 class="anchored" data-anchor-id="delta-tables-httpsdocs.delta.iolatestdelta-intro.html">Delta Tables: <a href="https://docs.delta.io/latest/delta-intro.html">https://docs.delta.io/latest/delta-intro.html</a></h3>
<blockquote class="blockquote">
<p><a href="https://delta.io/">Delta Lake</a> is an <a href="https://github.com/delta-io/delta">open source project</a> that enables building a <a href="https://databricks.com/blog/2020/01/30/what-is-a-data-lakehouse.html">Lakehouse architecture</a> on top of <a href="https://databricks.com/discover/data-lakes/introduction">data lakes</a>. Delta Lake provides <a href="https://docs.delta.io/latest/concurrency-control.html">ACID transactions</a>, scalable metadata handling, and unifies <a href="https://docs.delta.io/latest/delta-streaming.html">streaming</a> and <a href="https://docs.delta.io/latest/delta-batch.html">batch</a> data processing on top of existing data lakes, such as S3, ADLS, GCS, and HDFS.</p>
</blockquote>
<p>You can check Delta Lake releases here: <a href="https://docs.delta.io/latest/releases.html">https://docs.delta.io/latest/releases.html</a></p>
<p>TLDR: Delta tables are a data file format, specifically used with Spark clusters (for example Databricks).</p>



</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/delta-lake-and-azure.html</guid>
  <pubDate>Thu, 11 Jan 2024 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Parallelization in R</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/parallelization.html</link>
  <description><![CDATA[ 





<section id="references" class="level1">
<h1>References</h1>
<ul>
<li>https://colorado.posit.co/rsc/parallel_thinking/Parallel_Thinking.html#/title-slide</li>
<li>https://edavidaja.github.io/parallelooza/#/parallelooza</li>
<li>https://github.com/edavidaja/parallelooza</li>
<li>Shiny apps on Connect that feature long running jobs https://wlandau.github.io/crew/articles/shiny.html</li>
<li>workbench jobs and AWS batch: https://github.com/wlandau/crew.aws.batch</li>
</ul>
</section>
<section id="getting-started" class="level1">
<h1>Getting started</h1>
<p>Read:</p>
<ul>
<li><p>Learning to write code in parallel: <a href="https://forum.posit.co/t/learning-to-write-code-in-parallel/186992/4" class="uri">https://forum.posit.co/t/learning-to-write-code-in-parallel/186992/4</a></p></li>
<li><p>Depending on how your CPU is being overloaded (a single thread, versus multiple threads), it may be worth using the Parallel package to allow for multi-threading in your application. More information on this can be found here: <a href="https://www.rdocumentation.org/packages/parallel/versions/3.6.2" class="uri">https://www.rdocumentation.org/packages/parallel/versions/3.6.2</a></p></li>
<li><p>Resources in this Article for getting started: <a href="https://dept.stat.lsa.umich.edu/~jerrick/courses/stat701/notes/parallel.html" class="uri">https://dept.stat.lsa.umich.edu/~jerrick/courses/stat701/notes/parallel.html</a></p></li>
</ul>
<p>Workbench and HPC session: <a href="https://github.com/sol-eng/Workbench-HPC-Webinar?tab=readme-ov-file" class="uri">https://github.com/sol-eng/Workbench-HPC-Webinar?tab=readme-ov-file</a></p>
<p>Parallel: <a href="https://www.davidzeleny.net/wiki/doku.php/recol:parallel" class="uri">https://www.davidzeleny.net/wiki/doku.php/recol:parallel</a></p>
<p>doparallel: <a href="https://www.r-bloggers.com/2024/01/r-doparallel-a-brain-friendly-introduction-to-parallelism-in-r/" class="uri">https://www.r-bloggers.com/2024/01/r-doparallel-a-brain-friendly-introduction-to-parallelism-in-r/</a></p>
<p>Parallelization tutorial: <a href="https://berkeley-scf.github.io/tutorial-parallelization/parallel-R.html" class="uri">https://berkeley-scf.github.io/tutorial-parallelization/parallel-R.html</a></p>
</section>
<section id="when-sessions-are-crashing" class="level1">
<h1>When sessions are crashing</h1>
<p>It would help to see the following outputs run from your Linux server when you experience the issue:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">top</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">free</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span> </span></code></pre></div>
<p>Also, share a copy of your <code>/etc/rstudio/profiles</code> file for review for any inconsistencies.</p>
</section>
<section id="things-to-watch-out-for" class="level1">
<h1>Things to watch out for</h1>
<ul>
<li>Some parts of your code are going to be slow, no matter how many cores! - Roger / Amdahl’s Law</li>
<li>Profile your code in order to understand base performance with <a href="https://rstudio.github.io/profvis/">profvis</a></li>
<li>Unless built-in, often parallelization means subtasks where logs need to be manually captured and passed back (for troubleshooting if things go wrong)</li>
<li>Overhead / house keeping costs - Additional resources and time are needed to manage the parallel execution of a task. ie. coordinating communication between different processing units, syncing access to shared resources, managing the distribution of data, etc.</li>
</ul>
</section>
<section id="making-code-faster" class="level1">
<h1>Making code faster</h1>
<ul>
<li>Make the code better: Assess performance and find bottlenecks</li>
<li>Make the machine better: Add more cores / machines</li>
</ul>
</section>
<section id="terminology" class="level1">
<h1>Terminology</h1>
<ul>
<li>Thread: An execution context</li>
<li>Process: The resources associated with a computation</li>
<li>Core: Independent CPU’s (often discussed as “number of cores”)</li>
<li>Socket: The interface between the CPU and the motherboard (for example with two sockets and 8 cores in each socket there are a total of 16 physical cores on the server)<br>
</li>
<li>CPU: Central Processing Unit</li>
</ul>
<p>Use <code>lscpu</code> or <code>cat /proc/cpuinfo</code> to get your CPU architecture details</p>
<p>Reference: <a href="https://www.golinuxcloud.com/processors-cpu-core-threads-explained/" class="uri">https://www.golinuxcloud.com/processors-cpu-core-threads-explained/</a></p>
</section>
<section id="improve-performance-by-profiling-your-code" class="level1">
<h1>Improve performance by profiling your code</h1>
<section id="profvis" class="level2">
<h2 class="anchored" data-anchor-id="profvis">profvis</h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(profvis)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#library(deSolve)</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simple example</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">profvis</span>({</span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(diamonds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)</span>
<span id="cb2-9">  </span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> diamonds)</span>
<span id="cb2-11">  m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> diamonds)</span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb2-13">})</span></code></pre></div>
<p>More complex example:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">profvis</span>({</span>
<span id="cb3-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate a dataset</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(diamonds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)</span>
<span id="cb3-4">  </span>
<span id="cb3-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save it </span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(diamonds, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamonds.csv"</span>)</span>
<span id="cb3-7">  </span>
<span id="cb3-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load it</span></span>
<span id="cb3-9">  csv_diamonds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamonds.csv"</span>)</span>
<span id="cb3-10">  </span>
<span id="cb3-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># summarize</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(diamonds)</span>
<span id="cb3-13">  </span>
<span id="cb3-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot it  </span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> csv_diamonds)</span>
<span id="cb3-16">  m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> csv_diamonds)</span>
<span id="cb3-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb3-18">  </span>
<span id="cb3-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#create histogram of values for price</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>csv_diamonds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>price)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Histogram of Price Values"</span>)</span>
<span id="cb3-23">  </span>
<span id="cb3-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#create scatterplot of carat vs. price, using cut as color variable</span></span>
<span id="cb3-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>diamonds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>price, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>cut)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb3-27">  </span>
<span id="cb3-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#create scatterplot of carat vs. price, using cut as color variable</span></span>
<span id="cb3-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>diamonds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>price, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>cut)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb3-31">  </span>
<span id="cb3-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examples from: https://www.statology.org/diamonds-dataset-r/#:~:text=The%20diamonds%20dataset%20is%20a,the%20diamonds%20dataset%20in%20R. </span></span>
<span id="cb3-33">})</span></code></pre></div>
<p>Shiny app example:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#profvis({runApp()})</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#profvis({runApp(appDir = "./test_profvis/")})</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">profvis</span>({<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">appDir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)})</span></code></pre></div>
</section>
<section id="other-packages" class="level2">
<h2 class="anchored" data-anchor-id="other-packages">Other packages</h2>
<ul>
<li>bench</li>
<li>microbenchmark</li>
</ul>
</section>
</section>
<section id="taking-advantage-of-compute-resources-with-parallelization-in-r" class="level1">
<h1>Taking advantage of compute resources with parallelization in R</h1>
<section id="taking-advantage-of-native-parallelization" class="level2">
<h2 class="anchored" data-anchor-id="taking-advantage-of-native-parallelization">Taking advantage of native parallelization</h2>
<p>Use packages like <a href="https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html">data.table</a> that implement parallelism natively</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getDTthreads</span>()</span>
<span id="cb5-4">DT <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.table</span>(iris)</span>
<span id="cb5-5">DT[Petal.Width <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Petal.Length), by <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> Species]</span></code></pre></div>
</section>
<section id="explicitly-programming-parallelization" class="level2">
<h2 class="anchored" data-anchor-id="explicitly-programming-parallelization">Explicitly programming parallelization</h2>
<p>Read more: <a href="https://towardsdatascience.com/getting-started-with-parallel-programming-in-r-d5f801d43745" class="uri">https://towardsdatascience.com/getting-started-with-parallel-programming-in-r-d5f801d43745</a></p>
<section id="futureverse" class="level3">
<h3 class="anchored" data-anchor-id="futureverse">futureverse</h3>
<p>Read more: <a href="https://www.futureverse.org/" class="uri">https://www.futureverse.org/</a></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(future)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(multisession)</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Evaluate an R expression sequentially</span></span>
<span id="cb6-5">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slow_fcn</span>(X[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Evaluate it in parallel in the background</span></span>
<span id="cb6-8">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">future</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slow_fcn</span>(X[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb6-9">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span>(f)</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## future.apply: futurized version of base R apply</span></span>
<span id="cb6-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(future.apply)</span>
<span id="cb6-13">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(X, slow_fcn)</span>
<span id="cb6-14">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">future_lapply</span>(X, slow_fcn)</span>
<span id="cb6-15"></span>
<span id="cb6-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## furrr: futurized version of purrr</span></span>
<span id="cb6-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(furrr)</span>
<span id="cb6-18">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span>        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(slow_fcn)</span>
<span id="cb6-19">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">future_map</span>(slow_fcn)</span>
<span id="cb6-20"></span>
<span id="cb6-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## foreach: futurized version (modern)</span></span>
<span id="cb6-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(foreach)</span>
<span id="cb6-23">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">foreach</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%do%</span>       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slow_fcn</span>(x)</span>
<span id="cb6-24">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">foreach</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%dofuture%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slow_fcn</span>(x)</span>
<span id="cb6-25"></span>
<span id="cb6-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## foreach: futurized version (traditional)</span></span>
<span id="cb6-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(foreach)</span>
<span id="cb6-28">doFuture<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registerDoFuture</span>()</span>
<span id="cb6-29">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">foreach</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%do%</span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slow_fcn</span>(x)</span>
<span id="cb6-30">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">foreach</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%dopar%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slow_fcn</span>(x)</span></code></pre></div>
</section>
<section id="parallel" class="level3">
<h3 class="anchored" data-anchor-id="parallel">parallel</h3>
<p>Example from: <a href="https://towardsdatascience.com/getting-started-with-parallel-programming-in-r-d5f801d43745" class="uri">https://towardsdatascience.com/getting-started-with-parallel-programming-in-r-d5f801d43745</a></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(parallel)</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate data</span></span>
<span id="cb7-4">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e9</span></span>
<span id="cb7-5">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> data,</span>
<span id="cb7-6">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> data,</span>
<span id="cb7-7">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> data,</span>
<span id="cb7-8">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> data)</span>
<span id="cb7-9"></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Single core</span></span>
<span id="cb7-11">time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb7-12"></span>
<span id="cb7-13">time_benchmark <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.time</span>(</span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(data_list, mean)</span>
<span id="cb7-15">)</span>
<span id="cb7-16">single_core_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">difftime</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>(), time)</span>
<span id="cb7-17"></span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Detect the number of available cores and create cluster</span></span>
<span id="cb7-20">time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb7-21"></span>
<span id="cb7-22">cores_avail<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>()</span>
<span id="cb7-23"></span>
<span id="cb7-24">cl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">makeCluster</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>())</span>
<span id="cb7-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run parallel computation</span></span>
<span id="cb7-26">time_parallel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.time</span>(</span>
<span id="cb7-27">  parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parLapply</span>(cl,</span>
<span id="cb7-28">                      data_list,</span>
<span id="cb7-29">                      mean)</span>
<span id="cb7-30">)</span>
<span id="cb7-31"></span>
<span id="cb7-32">multiple_core_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">difftime</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>(), time)</span>
<span id="cb7-33"></span>
<span id="cb7-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Close cluster</span></span>
<span id="cb7-35">parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopCluster</span>(cl)</span>
<span id="cb7-36"></span>
<span id="cb7-37"></span>
<span id="cb7-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(single_core_time)</span>
<span id="cb7-39"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(multiple_core_time)</span>
<span id="cb7-40"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(cores_avail)</span></code></pre></div>
<p>Running sequentially took 18.33 seconds. Running in parallel shortened that to 4.99 seconds.</p>
</section>
<section id="parallely-part-of-futureverse" class="level3">
<h3 class="anchored" data-anchor-id="parallely-part-of-futureverse">parallely (part of futureverse)</h3>
<p>Read more: <a href="https://parallelly.futureverse.org/" class="uri">https://parallelly.futureverse.org/</a></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(parallelly)</span>
<span id="cb8-2">parallelly<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">availableCores</span>()</span></code></pre></div>
</section>
<section id="foreach-and-futureverse" class="level3">
<h3 class="anchored" data-anchor-id="foreach-and-futureverse">foreach and futureverse</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(foreach)</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(doFuture)</span>
<span id="cb9-3"></span>
<span id="cb9-4">years <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2024</span></span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(multisession, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">workers =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb9-7">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">foreach</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i=</span>years, </span>
<span id="cb9-8">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.combine =</span> rbind) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%dofuture%</span> {</span>
<span id="cb9-9">                     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_api_stats</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yr=</span>i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmt=</span>tmt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">product =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"litter"</span>)}</span></code></pre></div>
</section>
<section id="future.apply" class="level3">
<h3 class="anchored" data-anchor-id="future.apply">future.apply</h3>
<p>Before:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(okay2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(tab2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {...</span></code></pre></div>
<p>After:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(future.apply)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(multisession)</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(okay2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">future_apply</span>(tab2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {...</span></code></pre></div>
</section>
<section id="purrr" class="level3">
<h3 class="anchored" data-anchor-id="purrr">purrr</h3>
<p>Before:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb12-2">sales_data_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(date, value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb12-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(date) <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>df)</span>
<span id="cb12-6">  })) </span></code></pre></div>
<p>After:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span>
<span id="cb13-3">sales_data_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(date, value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> furrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb13-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(date) <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>df)</span>
<span id="cb13-7">  })) </span></code></pre></div>
</section>
<section id="foreach-and-doparallel" class="level3">
<h3 class="anchored" data-anchor-id="foreach-and-doparallel">foreach and doParallel</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(foreach)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(doParallel)</span>
<span id="cb14-3"></span>
<span id="cb14-4">cl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">makeCluster</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registerDoParallel</span>(cl)</span>
<span id="cb14-6">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">foreach</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i=</span>years, </span>
<span id="cb14-7">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.combine =</span> rbind) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%dopar%</span> {</span>
<span id="cb14-8">                     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_api_stats</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yr=</span>i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmt=</span>tmt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">product =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"litter"</span>)}</span>
<span id="cb14-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopCluster</span>(cl)</span></code></pre></div>
</section>
<section id="clustermq" class="level3">
<h3 class="anchored" data-anchor-id="clustermq">clustermq</h3>
<p>Lifesaver, when working in a HPC environment.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(foreach)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(clustermq)</span>
<span id="cb15-3"></span>
<span id="cb15-4">n_cores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb15-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clustermq.scheduler=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multicore"</span>)</span>
<span id="cb15-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clustermq.scheduler"</span>)</span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">register_dopar_cmq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_jobs =</span> n_cores)</span>
<span id="cb15-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">foreach</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(n_cores)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%dopar%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(i)</span></code></pre></div>
<p>The future of clustermq: crew/mirai/nanonext</p>
</section>
</section>
<section id="other-tips-and-tricks" class="level2">
<h2 class="anchored" data-anchor-id="other-tips-and-tricks">Other tips and tricks</h2>
<p>it seems they are testing quite a few models against their data that are indeed hard to parallelize. Couple of zero order recommendations</p>
<p>only select the data they really need from ess_multilevel</p>
<p>parallelize the individual models via something like <a href="https://stackoverflow.com/a/44010698/20032741" class="uri">https://stackoverflow.com/a/44010698/20032741</a>, suggested by the author of future himself.</p>
<p>remove the ess_multilevel data structure right after the select statement, not when the user is running out of memory</p>
<p>Additionally, for real benchmarking of functions I recommend against Sys.time() in favour of packages like tictoc and microbenchmark , the latter especially if the time for each function call is short and you want to get rid of the so-called OS jitter (influence from OS level processes)</p>
<p>Last but not least, I also would point out the existence of https://luwidmer.github.io/fastR-website/materials.html where an ex-colleague of Novartis and me are talking in great length about debugging, performance optimisations and eventually about parallelization in R. This material is good for a 3.5 hour workshop.</p>
<p>Also use setwd() with caution. Read a really good review of when to use setwd() and when not to here: <a href="https://rstats.wtf/projects#setwd" class="uri">https://rstats.wtf/projects#setwd</a></p>
</section>
<section id="but-what-about-python" class="level2">
<h2 class="anchored" data-anchor-id="but-what-about-python">But what about Python?</h2>
<ul>
<li><a href="https://docs.dask.org/en/stable/deploying-hpc.html">dask-jobqueue</a></li>
<li><a href="https://docs.ray.io/en/latest/cluster/vms/user-guides/community/slurm.html">ray</a></li>
</ul>


</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/parallelization.html</guid>
  <pubDate>Fri, 08 Dec 2023 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Problems with git credential persistence when in the cloud</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/git-and-sagemaker.html</link>
  <description><![CDATA[ 





<p>This is a random trick that took me longer than I care to admit to figure out - and wanted to squirrel it away so it’s easy to find in the future!</p>
<section id="problem-when-on-linux" class="level2">
<h2 class="anchored" data-anchor-id="problem-when-on-linux">Problem when on Linux:</h2>
<blockquote class="blockquote">
<p>In general gitcreds doesn’t work well on linux (which has led to this git issue <a href="https://github.com/r-lib/gitcreds/issues/47">(Ship our own credential helper on Linux · Issue #47 · r-lib/gitcreds</a> ). There is an excellent blog post that is very useful that goes deeper into what is going on: <a href="https://blog.djnavarro.net/posts/2021-08-08_git-credential-helpers/">Notes from a data witch - Managing GitHub credentials from R, difficulty level linux</a></p>
</blockquote>
</section>
<section id="problem-when-on-sagemaker" class="level2">
<h2 class="anchored" data-anchor-id="problem-when-on-sagemaker">Problem when on Sagemaker:</h2>
<blockquote class="blockquote">
<p>Additionally, on Sagemaker things like credentials will be by default stored to the ephemeral EC2 instance and lost when the session is closed. A different method needs to be pursued in order for the token to persist.</p>
</blockquote>
</section>
<section id="tldr-solution" class="level2">
<h2 class="anchored" data-anchor-id="tldr-solution">TLDR Solution:</h2>
<p>Configure the global git to cache instead of store the credentials to a local file (from bash/terminal):<br>
<code>git config --global credential.helper 'store --file ~/.my-credentials'</code></p>
</section>
<section id="testing" class="level2">
<h2 class="anchored" data-anchor-id="testing">Testing</h2>
<p>I’ll add a disclaimer that it is similar to the .Renviron approach where the credentials would be stored as plain text, however to a location chosen by the user.</p>
<p>Load libraries:</p>
<pre><code>library(usethis) 
library(gitcreds) 
library(gh) 
library(credentials)</code></pre>
<p>Configure the global git to cache instead of store the credentials to a local file (from bash/terminal):<br>
<code>git config --global credential.helper 'store --file ~/.my-credentials'</code></p>
<p>From the documentation:</p>
<blockquote class="blockquote">
<p>The “store” mode saves the credentials to a plain-text file on disk, and they never expire. This means that until you change your password for the Git host, you won’t ever have to type in your credentials again. The downside of this approach is that your passwords are stored in cleartext in a plain file in your home directory. The other options involve needing to change the root container to include alternative git credential helpers (libsecret or gcm core) which as far as I can tell are not currently available and would be something I’d recommend reaching out to Amazon about as they control that image.</p>
</blockquote>
<p>Generate the PAT:</p>
<p><code>usethis::create_github_token()</code></p>
<p>Copy the generated PAT to your clipboard. Provide the PAT to this function when asked for it:</p>
<p><code>gitcreds::gitcreds_set()</code></p>
<p>Check that it stored with:</p>
<p><code>gitcreds_get()</code></p>
</section>
<section id="alternatives" class="level2">
<h2 class="anchored" data-anchor-id="alternatives">Alternatives</h2>
<p>The old way “store a PAT as the <code>GITHUB_PAT</code> environment variable in <code>.Renviron.</code>” is typically what is recommended as being more compatible with linux if you are able to switch back to it, but it can present a security issue. We’ve also commonly seen folks using the <code>gh</code> package for generating PATs like in <a href="https://gh.r-lib.org/articles/managing-personal-access-tokens.html">Managing Personal Access Tokens</a></p>
<p>Alternatively, there are some git config options from the terminal. See: <a href="https://happygitwithr.com/https-pat.html?q=env#pat-doesnt-persist-on-linux">Chapter 9 Personal access token for HTTPS | Happy Git and GitHub for the useR</a></p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/git-and-sagemaker.html</guid>
  <pubDate>Tue, 29 Aug 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Securing credentials</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/securing-credentials.html</link>
  <description><![CDATA[ 





<section id="the-easiest-method-environment-variables" class="level1">
<h1>The Easiest Method: Environment Variables</h1>
<p>When working with pulling data from secure databases or other sources a developer might find themselves in a situation of needing to provide very sensitive information, such as a password or a token, in order to access the data that is needed or to successfully deploy a project. Handling those secrets in way that doesn’t expose them in the code directly is critical and where using <a href="https://db.rstudio.com/best-practices/deployment/">environmental variable’s for securing sensitive variables</a> is strongly recommended.</p>
<p>Additionally there may be parameters that are often needed that can be accessed as a variable more easily rather than having to type in every time.</p>
<p>For both of these cases knowing how environment variables can be leveraged can be very rewarding and it is surprising how little effort it can to take to set up.</p>
<section id="working-with-the-.renviron-file" class="level2">
<h2 class="anchored" data-anchor-id="working-with-the-.renviron-file">Working with the .Renviron file</h2>
<p>When R starts it loads a bunch of variables, settings, and configs for the user. This is really powerful and some of the magic for how it can work so apparently seamlessly.</p>
<p>However for power users we can leverage these behind the scenes config files so that we can include such things as variables in our project without including it in our code. The .Renviron file is the one most commonly interacted with for adding sensitive variables to a project in order to protect them from being exposed in the code.</p>
<p>With increased use of these behind the scenes config files and the growing direction of arranging code into projects there was the development of giving, on startup, having multiple options for each config file that can be loaded depending on what the user specifies. Broadly speaking there are two levels of config files:</p>
<ul>
<li>User</li>
<li>Project</li>
</ul>
<p>On startup, since R is trying to make things as seamless as possible for the user, it will use some logic to figure out which config to use. It will assume that if a project level config exists it should load that one (and not any others). If that project level config doesn’t exist, then it will default to the user level config. For more details on the different config files and the nuances see <a href="https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">Managing R with .Rprofile, .Renviron, Rprofile.site, Renviron.site, rsession.conf, and repos.conf</a>.</p>
<p>Just to re-iterate the key takeaway: When in doubt note that the <strong>project level file is given preference over user level config files</strong>. Only if the project level config file doesn’t exist will the user level file be sourced/pulled in.</p>
<p>There is a really excellent <a href="https://rviews.rstudio.com/2017/04/19/r-for-enterprise-understanding-r-s-startup/">overview of R’s startup process here</a> but in short it can be thought of this way:</p>
<section id="example-with-a-user-level-.renviron-config-file" class="level4">
<h4 class="anchored" data-anchor-id="example-with-a-user-level-.renviron-config-file">Example with a user level .Renviron config file</h4>
<p>usethis has a function for creating and editing the .Renviron file</p>
<pre><code>library(usethis)
usethis::edit_r_environ()</code></pre>
<p>Add the variables to that file in the format <code>variable_name = "variable_value"</code> and save it. Restart the session so the new environment variables will be loaded with ctrl shift f10 or through the RStudio IDE</p>
<p>Saved variables can be accessed with:</p>
<pre><code>variable_name &lt;- Sys.getenv("variable_name")</code></pre>
<p>When working in a more complex environment structure where separate project, site, and user environments are being support <a href="https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">this support article has useful information</a> with a <a href="https://rviews.rstudio.com/2017/04/19/r-for-enterprise-understanding-r-s-startup/">deeper dive into R’s startup here</a>.</p>
</section>
<section id="example-with-a-project-level-.renviron-config-file" class="level4">
<h4 class="anchored" data-anchor-id="example-with-a-project-level-.renviron-config-file">Example with a project level .Renviron config file</h4>
<p>Storing secrets securely can be done using the <a href="https://usethis.r-lib.org/reference/edit.html">edit_r_environ function from the usethis package</a>. For more overview see <a href="https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf">this overview</a>.</p>
<p>Example:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(usethis)</span>
<span id="cb3-2">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">edit_r_environ</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scope =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project"</span>)</span></code></pre></div>
<p>Accessing those stored parameters later can be done using <code>Sys.getenv("DB_NAME")</code>.</p>
<p>Be sure to add the project level .Renviron file to your .gitignore so you aren’t exposing secrets when code is being saved to your git repository. Similarly this can be done with the <code>edit_git_ignore(scope = c("user", "project"))</code> function. For more best practices see <a href="https://db.rstudio.com/best-practices/managing-credentials">securing credentials</a>.</p>
<ul>
<li>While typically explicitly listing the file name is the desired addition, wildcards can be added to exclude a type of file. For example: <code>*.html</code>.</li>
</ul>
<p>After updating these files the project should be closed and re-opened for any additions to be pulled in. One way to do this is through session -&gt; restart R (ctrl-shift-f10).</p>
</section>
<section id="example-with-project-level-github-secrets-for-environment-variables" class="level4">
<h4 class="anchored" data-anchor-id="example-with-project-level-github-secrets-for-environment-variables">Example with project level github secrets for environment variables</h4>
<p>Another approach, particularly useful when automating testing and deployments using github actions, is to include the environment variables as secrets. Once this has been added through the git UI for the project they can then be referenced in the relevant deployment .yaml file with something like <code>CONNECT_ENV_SET_ZD_USER: ${{ secrets.ZD_USER }}</code>. In the R scripts they will be referenced as usual with something like <code>Sys.getenv("DB_NAME")</code>.</p>
</section>
<section id="references-for-adding-environment-variables-through-the-connect-ui" class="level4">
<h4 class="anchored" data-anchor-id="references-for-adding-environment-variables-through-the-connect-ui">References for adding environment variables through the Connect UI</h4>
<p>Starting with version 1.6, RStudio Connect allows <a href="https://docs.rstudio.com/connect/admin/security-and-auditing/#application-environment-variables">Environment Variables</a>. The variables are encrypted on-disk, and in-memory.</p>
<p>This can be done at the project level with <a href="https://db.rstudio.com/best-practices/deployment/">securing deployment</a> through the <a href="https://support.rstudio.com/hc/en-us/articles/228272368-Managing-your-content-in-RStudio-Connect">Connect UI</a>.</p>
<p>Use Connect to manage environment variables through the UI: <a href="https://docs.posit.co/connect/user/content-settings/index.html#content-vars" class="uri">https://docs.posit.co/connect/user/content-settings/index.html#content-vars</a></p>
<p>Have your admin use a supervisor script to add Environment Variables automatically: <a href="https://docs.posit.co/connect/admin/process-management/index.html#example-environment-variables" class="uri">https://docs.posit.co/connect/admin/process-management/index.html#example-environment-variables</a></p>
<p>Securing credentials solutions article: <a href="https://solutions.posit.co/connections/db/best-practices/managing-credentials/" class="uri">https://solutions.posit.co/connections/db/best-practices/managing-credentials/</a></p>


</section>
</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/securing-credentials.html</guid>
  <pubDate>Wed, 09 Aug 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
</channel>
</rss>
