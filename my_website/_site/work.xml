<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lisa Anders - questionable.quarto</title>
<link>https://questionable.quarto.pub/blog/work.html</link>
<atom:link href="https://questionable.quarto.pub/blog/work.xml" rel="self" type="application/rss+xml"/>
<description>Making the most out of data</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Wed, 18 Jun 2025 06:00:00 GMT</lastBuildDate>
<item>
  <title>Creating a custom Workbench login page</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/workbench-custom-login.html</link>
  <description><![CDATA[ 





<section id="why-would-someone-want-to-do-this" class="level2">
<h2 class="anchored" data-anchor-id="why-would-someone-want-to-do-this">Why would someone want to do this?</h2>
<p>Login can be a challenging process for many users and having the admin provide additional details can be very handy to point folks in the right direction. Also, being able to include your own branding isn’t just a nice jazzy thing but can be a security requirement for some teams to help provide another layer of protection via visual indicators.</p>
</section>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>A customer requested that this page be made clearer: <a href="https://docs.posit.co/ide/server-pro/admin/authenticating_users/customizing_signin.html" class="uri">https://docs.posit.co/ide/server-pro/admin/authenticating_users/customizing_signin.html</a></p>
<p>They were confused that an example wasn’t built for them at the called out location <code>/opt/config/rstudio-login.html</code>.</p>
<p>This support article has some useful examples that are useful: <a href="https://support.posit.co/hc/en-us/articles/231327847-Customizing-the-Posit-Workbench-RStudio-Server-Pro-Login-Page" class="uri">https://support.posit.co/hc/en-us/articles/231327847-Customizing-the-Posit-Workbench-RStudio-Server-Pro-Login-Page</a></p>
<p>There are also some templates in this folder that might be useful to reference: <code>/usr/lib/rstudio-server/www/templates/encrypted-sign-in.html</code></p>
</section>
<section id="plain-html" class="level2">
<h2 class="anchored" data-anchor-id="plain-html">Plain html</h2>
<p>For this particular customer request I’ve been working on their goal is to modify that actual contents of the login information pane. Here is some (hopefully) useful exploration -</p>
<p>Modifying the config&nbsp;<code>/etc/rstudio/rserver.conf</code>&nbsp;with:</p>
<pre><code>auth-login-page-html=/etc/rstudio/login.html</code></pre>
<p>And then creating that file&nbsp;<code>/etc/rstudio/login.html</code>&nbsp;with contents like:</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Requesting access&lt;/h1&gt;
    &lt;p&gt;In order to get access to this software a ticket will need to be submitted through IT.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>This results in a login page with the information appended at the bottom:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/workbench-custom-login-1.png" class="lightbox" data-glightbox="description: .lightbox-desc-1" data-gallery="quarto-lightbox-gallery-1" title="Workbench login page"><img src="https://questionable.quarto.pub/blog/work/img/workbench-custom-login-1.png" class="img-fluid figure-img" alt="Workbench login page"></a></p>
<figcaption>Workbench login page</figcaption>
</figure>
</div>
</section>
<section id="with-more-jazz" class="level2">
<h2 class="anchored" data-anchor-id="with-more-jazz">With more jazz</h2>
<p>If we append the instructions on the support article and add a logo to <code>/usr/lib/rstudio-server/www/images</code> then we can jazz things up further.</p>
<p>Note there are already files/images in <code>/usr/lib/rstudio-server/www/images</code> and in this example instead of using <code>logo.png</code> we made a custom image called <code>frog.png</code> by downloading an image from the internet with: <code>wget http://images.clipartpanda.com/frog-clip-art-frog_green.png -O /usr/lib/rstudio-server/www/images/logo.png</code></p>
<p><code>/etc/rstudio/login.html</code>:</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Requesting access&lt;/h1&gt;
    &lt;p&gt;In order to get access to this software a ticket will need to be submitted through IT.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;

&lt;script type="text/javascript"&gt;
window.onload=function(){

var logo = document.createElement("img");
logo.setAttribute("src","images/frog.png");
logo.setAttribute("height", "36px");
logo.setAttribute("width", "36px");
logo.setAttribute("style", "float: right;");
document.getElementById("banner").appendChild(logo);

var cap = document.getElementById("caption_header");
cap.innerHTML = "This is a message added by your admin. Sign into Posit with your assigned credentials credentials";    
}
&lt;/script&gt;

&lt;style&gt;
#banner {background-color: #4682b4;}
#caption {border-bottom-color: #4682b4;}
&lt;/style&gt;</code></pre>
<p>This results in a login page with information appended at the bottom as well as custom coloring and a logo and the header for the login blurb changed:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/workbench-custom-login-2.png" class="lightbox" data-glightbox="description: .lightbox-desc-2" data-gallery="quarto-lightbox-gallery-2" title="Workbench login page"><img src="https://questionable.quarto.pub/blog/work/img/workbench-custom-login-2.png" class="img-fluid figure-img" alt="Workbench login page"></a></p>
<figcaption>Workbench login page</figcaption>
</figure>
</div>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://github.com/rstudio/rstudio-pro/issues/8378">Git issue</a></p>



</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/workbench-custom-login.html</guid>
  <pubDate>Wed, 18 Jun 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Exploring Positron</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/Positron.html</link>
  <description><![CDATA[ 





<p>Positron is a new IDE developed by Posit. I’ve been putting off giving it a deep dive. I love RStudio. Maybe it’s the green icons, or the simple 4 box layout, or even just that it’s what I’ve been using for so long but it really feels like a happy place to me.</p>
<p>I was the same way with RMarkdown. You could have torn it from my cold dead hands, but eventually that feature comes along that makes going through the process of changing worth it. And for me with Quarto that was <code>lightbox</code> with its ability to magically resize images. Such a simple thing, such a challenging thing to do outside of Quarto.</p>
<section id="first-impressions" class="level2">
<h2 class="anchored" data-anchor-id="first-impressions">First impressions</h2>
<p>Changing the theme made it feel like less of a sterile and “other” place. I’m a big fan of dark modes and I actually really liked the built in dark mode.</p>
<p>gear -&gt; theme -&gt; positron dark</p>
<p>There are some good resources for porting your own theme also: <a href="https://www.r-bloggers.com/2025/05/porting-my-favorite-rstudio-color-theme-to-positron/" class="uri">https://www.r-bloggers.com/2025/05/porting-my-favorite-rstudio-color-theme-to-positron/</a></p>
</section>
<section id="viewing-data" class="level2">
<h2 class="anchored" data-anchor-id="viewing-data">Viewing data</h2>
<div id="fig-elephants" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-elephants-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-elephants" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-light-theme" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-light-theme-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<a href="img/positron-theme-light.png" class="lightbox" data-glightbox="description: .lightbox-desc-1" data-gallery="fig-elephants"><img src="https://questionable.quarto.pub/blog/work/img/positron-theme-light.png" class="img-fluid figure-img" data-ref-parent="fig-elephants"></a>
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-light-theme-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) Light theme
</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-elephants" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-dark-theme" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-dark-theme-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<a href="img/positron-data.png" class="lightbox" data-glightbox="description: .lightbox-desc-2" data-gallery="fig-elephants"><img src="https://questionable.quarto.pub/blog/work/img/positron-data.png" class="img-fluid figure-img" data-ref-parent="fig-elephants"></a>
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-dark-theme-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b) dark theme
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-elephants-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Data Previewer now shows distributions!
</figcaption>
</figure>
</div>
</section>
<section id="my-extensions" class="level2">
<h2 class="anchored" data-anchor-id="my-extensions">My extensions</h2>
<p>Since Positron is a fork of VS Code it relies on extensions for adding various features. Here are some of my favorites:</p>
<ul>
<li>Air (R Language Support)</li>
<li>Posit Publisher</li>
<li>Black Formatter</li>
<li>Gitlive</li>
<li>Pyright</li>
<li>Jupyter</li>
<li>Jupter Cell Tags</li>
<li>Jupyter Keymap</li>
<li>Jupyter Slide Show</li>
<li>Project Manager</li>
<li>Python Debugger</li>
<li>Quarto</li>
<li>Ruff</li>
<li>Shiny</li>
<li>Scope to this</li>
<li>vscode-pets</li>
</ul>
<!--
Soon: 

- [databot](https://positpbc.atlassian.net/wiki/spaces/POSITRON/pages/1613365269/Databot+Getting+Started#Installation)
- [Positron Assistant](https://connect.posit.it/positron-wiki/positron-assistant.html)
-->
</section>
<section id="remote-connections-with-ssh" class="level2">
<h2 class="anchored" data-anchor-id="remote-connections-with-ssh">Remote connections with SSH</h2>
<p>This is bundled with Positron and there’s no need to install anything.</p>
<p>Resource: <a href="https://positron.posit.co/remote-ssh.html" class="uri">https://positron.posit.co/remote-ssh.html</a></p>
</section>
<section id="llm-integrations" class="level2">
<h2 class="anchored" data-anchor-id="llm-integrations">LLM integrations</h2>
<p>Stay tuned for Posit::Conf 2025!</p>
</section>
<section id="running-a-python-project" class="level2">
<h2 class="anchored" data-anchor-id="running-a-python-project">Running a python project</h2>
<p>Reference: <a href="https://positron.posit.co/start.html" class="uri">https://positron.posit.co/start.html</a></p>
<p>I’m a big fan of using the git integration to clone down a project, for example this set of <a href="https://github.com/rstudio/posit-demo-assets">demo examples</a>.</p>
<p>We’ll want to make sure that <code>ipykernel</code> is installed:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install ipykernel</span></code></pre></div>
<p>We can discover which python versions we have access to with:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> /opt/python/</span></code></pre></div>
<section id="select-the-python-interpreter" class="level3">
<h3 class="anchored" data-anchor-id="select-the-python-interpreter">Select the python interpreter</h3>
<p>Manage the interpreter in the session (virtual environment) through the top right icon:</p>
<div id="fig-python-interp" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-python-interp-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<a href="img/python-interpreter.png" class="lightbox" data-glightbox="description: .lightbox-desc-3" data-gallery="quarto-lightbox-gallery-3"><img src="https://questionable.quarto.pub/blog/work/img/python-interpreter.png" class="img-fluid figure-img"></a>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-python-interp-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Python interpreter selection
</figcaption>
</figure>
</div>
<p>Reference: <a href="https://positron.posit.co/managing-interpreters.html" class="uri">https://positron.posit.co/managing-interpreters.html</a></p>
<p>You can also manually select the python interpreter with <code>ctrl-shift-p</code> and then <code>Python: Select Interpreter</code> command and select the <code>Enter interpreter path...</code> option.</p>
<p>This gives you the ability to refresh the visible interpreters with the circle arrow symbol.</p>
<div id="fig-python-interp-manually" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-python-interp-manually-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<a href="img/select-interpreter-manually.png" class="lightbox" data-glightbox="description: .lightbox-desc-4" data-gallery="quarto-lightbox-gallery-4"><img src="https://questionable.quarto.pub/blog/work/img/select-interpreter-manually.png" class="img-fluid figure-img"></a>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-python-interp-manually-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Python interpreter manual selection
</figcaption>
</figure>
</div>
<p>We can create a new interpreter (and then select it through the dropdown) either with uv or pip.</p>
<section id="the-uv-way" class="level4">
<h4 class="anchored" data-anchor-id="the-uv-way">The uv way</h4>
<p>Use <a href="https://github.com/astral-sh/uv">uv</a>. It will detect that this is a project and create the venv for us when we go to run the application.</p>
<p>Run the application:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> run app.py</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> run shiny run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--reload</span> app.py</span></code></pre></div>
</section>
<section id="the-pip-way" class="level4">
<h4 class="anchored" data-anchor-id="the-pip-way">The pip way</h4>
<p>Setup the <code>venv</code> environment:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv env</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> env/bin/activate</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># source env/bin/activate</span></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip</span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
<p>I recommend using <code>env</code> instead of <code>.venv</code> because quarto will automatically pick it up.</p>
<p>Run the application:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">shiny</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--reload</span> app.py</span></code></pre></div>
</section>
<section id="register-new-interpreter-as-kernel-likely-optional" class="level4">
<h4 class="anchored" data-anchor-id="register-new-interpreter-as-kernel-likely-optional">Register new interpreter as kernel (likely optional)</h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Register as kernel</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install ipykernel jupyter</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># python -m ipykernel install --name "my-new-project_venv" --user </span></span>
<span id="cb6-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> ipykernel install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny-income-share"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--user</span></span></code></pre></div>
</section>
</section>
<section id="running-and-previewing-an-app" class="level3">
<h3 class="anchored" data-anchor-id="running-and-previewing-an-app">Running and previewing an app</h3>
<p>Open the folder so that the root directory is the content example you want to run.</p>
<p>Make sure the appropriate virtual environment has been created (following the steps above) and selected as the interpreter.</p>
<p>Click the play button to launch the application.</p>
<div id="fig-python-app" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-python-app-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<a href="img/running-shiny-python-app.png" class="lightbox" data-glightbox="description: .lightbox-desc-5" data-gallery="quarto-lightbox-gallery-5"><img src="https://questionable.quarto.pub/blog/work/img/running-shiny-python-app.png" class="img-fluid figure-img"></a>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-python-app-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Python Shiny App
</figcaption>
</figure>
</div>
</section>
<section id="creating-a-new-project" class="level3">
<h3 class="anchored" data-anchor-id="creating-a-new-project">Creating a new project</h3>
<section id="the-pip-way-1" class="level4">
<h4 class="anchored" data-anchor-id="the-pip-way-1">The pip way</h4>
<p>Create a <code>venv</code> to isolate environments and generate a <code>requirements.txt</code> file so that only the minimum packages needed to support your project are included. Read <a href="https://docs.posit.co/connect/admin/python/package-management/index.html">this</a> for more on Python package management.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip freeze <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> requirements.txt</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
</section>
<section id="the-uv-way-1" class="level4">
<h4 class="anchored" data-anchor-id="the-uv-way-1">The uv way</h4>
<p>Create a <a href="https://docs.posit.co/connect/user/publishing-cli-notebook/index.html#creating-a-manifest-for-future-deployment"><code>manifest.json</code> file</a> to support git-backed publishing</p>
<p>For uv projects, they can be initialized and updated with (change format and packages as needed):</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> init <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--app</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--python</span> 3.12.6</span>
<span id="cb8-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> add numpy matplotlib jupyter</span>
<span id="cb8-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> sync <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span></span>
<span id="cb8-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> export <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> requirements.txt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-hashes</span></span>
<span id="cb8-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> run rsconnect write-manifest api .</span>
<span id="cb8-6"></span>
<span id="cb8-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dev dependencies may need to be added </span></span>
<span id="cb8-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dev</span> uv ipykernel</span></code></pre></div>
</section>
</section>
<section id="deploying" class="level3">
<h3 class="anchored" data-anchor-id="deploying">Deploying</h3>
<p>Reference the <a href="https://docs.posit.co/connect/user/shiny-python/">Posit Connect User Guide: Shiny for Python</a></p>
<section id="using-posit-publisher" class="level4">
<h4 class="anchored" data-anchor-id="using-posit-publisher">Using Posit Publisher</h4>
<p>Make sure the Posit Publisher extension is installed.</p>
<p>Click <code>new deployment</code> and follow the screens to add your developer information and an API key.</p>
<p>Make sure to add any files that need to be included in the bundle to (1) the .toml file (2) the project files list.</p>
<p>For example, the .toml file might look like:</p>
<pre><code># Configuration file generated by Posit Publisher.
# Please review and modify as needed. See the documentation for more options:
# https://github.com/posit-dev/publisher/blob/main/docs/configuration.md
'$schema' = 'https://cdn.posit.co/publisher/schemas/posit-publishing-schema-v3.json'
type = 'python-shiny'
entrypoint = 'app.py'
validate = true
files = [
  '/app.py',
  '/data,csv',
  '/requirements.txt',
  '/.posit/publish/shiny-income-share-positron-FLKH.toml',
  '/.posit/publish/deployments/deployment-NVOJ.toml',
  '/data.csv'
]
title = 'shiny-income-share-positron'

[python]
version = "3.11.9"
package_file = "requirements.txt"
package_manager = "pip"
</code></pre>
<p>Reference: <a href="https://github.com/posit-dev/publisher/blob/main/docs/configuration.md" class="uri">https://github.com/posit-dev/publisher/blob/main/docs/configuration.md</a></p>
</section>
<section id="rsconnect-python-cli" class="level4">
<h4 class="anchored" data-anchor-id="rsconnect-python-cli">rsconnect-python CLI</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With uv</span></span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> run rsconnect deploy shiny .</span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Without uv</span></span>
<span id="cb10-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> deploy shiny .</span></code></pre></div>
</section>
<section id="git-backed" class="level4">
<h4 class="anchored" data-anchor-id="git-backed">Git-backed</h4>
<p>Update the code, and then run:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With uv</span></span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> export <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> requirements.txt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-hashes</span></span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> run rsconnect write-manifest shiny <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--overwrite</span> .</span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Without uv</span></span>
<span id="cb11-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> freeze <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> requirements.txt </span>
<span id="cb11-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rsconnect</span> write-manifest shiny <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--overwrite</span> .</span></code></pre></div>
<p>Commit the new <code>manifest.json</code> file to the git repo along with the code.</p>
</section>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p>Inspired by: <a href="https://www.andrewheiss.com/blog/2024/07/08/fun-with-positron/" class="uri">https://www.andrewheiss.com/blog/2024/07/08/fun-with-positron/</a></p>



</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/Positron.html</guid>
  <pubDate>Tue, 03 Jun 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Finding R System Dependencies</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/system-dependencies-r.html</link>
  <description><![CDATA[ 





<section id="using-pak-and-renv-to-find-r-system-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="using-pak-and-renv-to-find-r-system-dependencies">Using pak and renv to find R system dependencies</h2>
<p>Let’s try to get an environment of packages and understand the system dependencies. This would be useful for fresh installs into a new environment.</p>
</section>
<section id="a-note-on-methodology" class="level2">
<h2 class="anchored" data-anchor-id="a-note-on-methodology">A note on methodology</h2>
<p>In an ideal world a user will be able to identify what packages they are using. Do you really need that package from 3 years ago that you installed but ended up not using? Technology doesn’t solve all problems! Sometimes the “soft” method is the best way to solve a problem.</p>
</section>
<section id="steps" class="level2">
<h2 class="anchored" data-anchor-id="steps">Steps</h2>
<section id="create-the-current-environment-as-a-renv-project-and-snapshot-it" class="level3">
<h3 class="anchored" data-anchor-id="create-the-current-environment-as-a-renv-project-and-snapshot-it">Create the current environment as a renv project and snapshot it</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pak)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(renv)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Or restore a project with renv::restore() if using a pre-existing projectd</span></span>
<span id="cb1-5">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">init</span>()</span>
<span id="cb1-6">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>()</span></code></pre></div>
</section>
<section id="find-what-os-we-are-on" class="level3">
<h3 class="anchored" data-anchor-id="find-what-os-we-are-on">Find what OS we are on</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># R.version # Nope</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># version # Nope</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .Platform # nope</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .Platform$OS.type # nope</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sys.info() # nope</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sys.info()["sysname"] # nope</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># system("cat /etc/*release") # closer</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># system("lsb_release -a") # closer</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pak::system_r_platform_data()$distribution # this is the one!</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(.Platform<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>OS.type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unix"</span>){</span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PKG_SYSREQS_PLATFORM"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>pak<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system_r_platform_data</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distribution)</span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PKG_SYSREQS_PLATFORM"</span>))</span>
<span id="cb2-14">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> { <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## windows</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PKG_SYSREQS_PLATFORM"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"windows"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># supported by pak</span></span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PKG_SYSREQS_PLATFORM"</span>))</span>
<span id="cb2-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warning</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Windows is not support by pak"</span>)</span>
<span id="cb2-18">}</span></code></pre></div>
</section>
<section id="optionally-recreate-the-environment-on-another-server-using-renv-and-pak" class="level3">
<h3 class="anchored" data-anchor-id="optionally-recreate-the-environment-on-another-server-using-renv-and-pak">Optionally, recreate the environment on another server using renv and pak</h3>
<pre><code>cp rserver/renv.lock /new-location 

cd /new-location &amp;&amp; \
    echo -e 'options(renv.config.pak.enabled=TRUE)\noptions(repos=c(CRAN="https://packagemanager.posit.co/cran/__linux__/rhel9/2025-03-10")) Sys.getenv("PKG_SYSREQS_PLATFORM" &gt; .Rprofile &amp;&amp; \
    R -q -e 'install.packages(c("renv"))' &amp;&amp; \
    R -q -e 'renv::activate()' &amp;&amp; \
    R -q -e 'renv::restore()'</code></pre>
</section>
<section id="find-the-installed-packages" class="level3">
<h3 class="anchored" data-anchor-id="find-the-installed-packages">Find the installed packages</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(jsonlite)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb4-3">my_renvlock <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fromJSON</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv.lock"</span>)</span>
<span id="cb4-4"></span>
<span id="cb4-5">pkgs_df<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(my_renvlock<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Packages, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enframe</span>(.) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Package"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Version"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>())</span></code></pre></div>
</section>
<section id="find-the-system-dependencies-for-those-installed-packages" class="level3">
<h3 class="anchored" data-anchor-id="find-the-system-dependencies-for-those-installed-packages">Find the system dependencies for those installed packages</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">deps<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>pak<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pkg_sysreqs</span>(pkgs_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Package, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upgrade =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sysreqs_platform=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PKG_SYSREQS_PLATFORM"</span>))</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the commands to run to install system deps to support the package environment</span></span>
<span id="cb5-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pre_install,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pre_install),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>install_scripts,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>install_scripts,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_install,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_install),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="alternatively-find-the-most-common-package-downloaded-from-package-manager-and-support-those" class="level3">
<h3 class="anchored" data-anchor-id="alternatively-find-the-most-common-package-downloaded-from-package-manager-and-support-those">Alternatively, find the most common package downloaded from package manager and support those</h3>
<p>Credit: <a href="https://github.com/rstudio/rstudio-pro/issues/6536#issuecomment-2694317773" class="uri">https://github.com/rstudio/rstudio-pro/issues/6536#issuecomment-2694317773</a></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(httr)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(jsonlite)</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pak)</span>
<span id="cb6-4"></span>
<span id="cb6-5">base_url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/__api__/metrics/packages"</span></span>
<span id="cb6-6">query_params <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-7">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_sort"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>,</span>
<span id="cb6-8">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_order"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desc"</span>,</span>
<span id="cb6-9">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_days"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,</span>
<span id="cb6-10">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_sourceType"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>,</span>
<span id="cb6-11">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_limit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb6-12">)</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the GET request</span></span>
<span id="cb6-15">response <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GET</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">url =</span> base_url, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> query_params)</span>
<span id="cb6-16"></span>
<span id="cb6-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">status_code</span>(response) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>) {</span>
<span id="cb6-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse the JSON content</span></span>
<span id="cb6-19">  content <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">content</span>(response, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span>
<span id="cb6-20">  data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fromJSON</span>(content)</span>
<span id="cb6-21">  </span>
<span id="cb6-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set platform name ()</span></span>
<span id="cb6-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PKG_SYSREQS_PLATFORM"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rockylinux-9"</span>)</span>
<span id="cb6-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract system reqs using pak</span></span>
<span id="cb6-25">  deps<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>pak<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pkg_sysreqs</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name)</span>
<span id="cb6-26">  </span>
<span id="cb6-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print commands</span></span>
<span id="cb6-28">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pre_install,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pre_install),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-29">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>install_scripts,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>install_scripts,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_install,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(deps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_install),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-31">  </span>
<span id="cb6-32">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb6-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Unable to fetch data from P3M. Status code:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">status_code</span>(response), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-34">}</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/system-dependencies-r.html</guid>
  <pubDate>Wed, 21 May 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Using SAML and SCIM with EntraID with Posit Team</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/saml-entraid-posit-team.html</link>
  <description><![CDATA[ 





<section id="configuring-azure-entraid-for-saml-auth-in-workbench-with-scim-for-user-provisioning-and-connect-no-user-provisioning-ui-access-only" class="level1">
<h1>Configuring Azure EntraID for SAML Auth in Workbench (with SCIM for user provisioning) and Connect (no user provisioning, UI access only)</h1>
<p>To configure Microsoft Entra ID for SAML, both the software address and an additional path, if being used, must be known. If there is not an additional path being served from then omit that from the below instructions. In addition Azure requires a secure connection, and so a valid SSL certificate (cannot be self-signed) is needed.</p>
<section id="networking-requirements" class="level2">
<h2 class="anchored" data-anchor-id="networking-requirements">Networking requirements</h2>
<p>Relevant cheat sheet in docs: <a href="https://docs.posit.co/getting-started/networking.html">https://docs.posit.co/getting-started/networking.html</a></p>
<p>Getting info from azure is on a push basis for SCIM provisioning, so we need connectivity open on port 443 via the express route or however so there is access. In order for authentication via SAML and Azure to work these ports need to be enabled:</p>
<ul>
<li>443 (for https)</li>
</ul>
<p>Networking access is needed between the Connect and Workbench servers and the Azure service.</p>
<p>Connect will also need web sockets enabled. Will be needed for each of the redirects (as detailed in the lower section).</p>
</section>
<section id="system-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="system-dependencies">System dependencies</h2>
<p>On Rhel9:</p>
<pre><code>yum install -y oddjob oddjob-mkhomedir</code></pre>
</section>
<section id="ssl-requirements" class="level2">
<h2 class="anchored" data-anchor-id="ssl-requirements">SSL requirements</h2>
<p>Azure restricts to only using https addresses, not http, for doing redirects and authentication via API. A SSL certificate must be installed on each server. This SSL cert must be recognizable by Azure, meaning that it can’t be an internal CA.</p>
<p>Does the cert need to be installed on the server, or does installing it for the prox work? It just needs the “front door” address to have HTTPS, if running with an App gateway, then you only need SSL on that load balancer/proxy.</p>
<section id="workbench" class="level3">
<h3 class="anchored" data-anchor-id="workbench">Workbench</h3>
<pre><code>openssl req -new -key $URL.key -out $URL.csr -config $URL.cnf
openssl genrsa -out $URL.key 2048</code></pre>
<pre><code>#-----------------------------------------------------------------------------------------#
# HTTPS Configuration Section
#
# The certificate key should be owned by rstudio and have perms: sudo chmod 600 /var/certs/rstudio.key
# Unfortunately at this time, RStudio doesn't support a passphrase on the SSL cert.
ssl-enabled=1
ssl-certificate-key=/path/to/key/posit.key
ssl-certificate=/path/to/certificate/posit.crt
ssl-protocols=TLSv1.2 TLSv1.3</code></pre>
<pre><code>openssl x509 -noout -modulus -in /etc/rstudio/fullchain.cer | openssl md5
openssl rsa -noout -modulus -in /etc/rstudio/fullchain.key | openssl md5</code></pre>
</section>
<section id="connect" class="level3">
<h3 class="anchored" data-anchor-id="connect">Connect</h3>
<pre><code>nano root.crt ← paste contents of root certificate 
sudo cp root.crt /etc/pki/ca-trust/source/anchors/
sudo update-ca-trust
trust list | grep -i &lt;name&gt;</code></pre>
<pre><code>[HTTPS]
; https://docs.posit.co/connect/admin/appendix/configuration/#HTTPS
; RStudio Connect will listen on this network address for HTTPS connections.
Listen = :443
;Path to a PEM encoded TLS certificate file. If the certificate is signed by a certificate authority,
;the certificate file should be the concatenation of the server's certificate followed by the CA's certificate
Certificate =  /path/to/certificate/connect.crt
;Path to a PEM encoded private key file corresponding to the certificate specified with
Key = /path/to/key/connect.key
; Force HTTPS
; https://docs.posit.co/connect/admin/security/#guaranteeing-https
;Permanent = True
MinimumTLS = 1.2</code></pre>
</section>
</section>
<section id="create-the-azure-applications" class="level2">
<h2 class="anchored" data-anchor-id="create-the-azure-applications">Create the Azure applications</h2>
<p>Two separate applications inside Azure need to be created to support authentication on Connect and Workbench (different reply url assertion consumer service url’s).</p>
<ul>
<li><p>Through the marketplace: Manage → enterprise apps → add a new one → search for rstudio</p></li>
<li><p><strong>Rstudio-server-pro SAML authentication</strong> - is what you want for Workbench (refer to <a href="https://docs.posit.co/ide/server-pro/authenticating_users/integrated_providers/azure_ad_saml.html">here</a>)</p></li>
<li><p><strong>Rstudio Connect SAML authentication</strong> - is what you want for Connect (refer to <a href="https://docs.posit.co/ide/server-pro/authenticating_users/integrated_providers/azure_ad_saml.html">here</a>)</p></li>
</ul>
<p>See the <a href="https://learn.microsoft.com/en-us/entra/identity/app-provisioning/customize-application-attributes">Customize user provisioning attribute mappings tutorial</a> in Microsoft’s documentation for more information on adding custom user attributes in Microsoft Entra ID.</p>
<section id="create-the-azure-application-for-workbench" class="level3">
<h3 class="anchored" data-anchor-id="create-the-azure-application-for-workbench">Create the Azure application for Workbench</h3>
<p>Refer to <a href="https://docs.posit.co/ide/server-pro/authenticating_users/integrated_providers/azure_ad_saml.html">here</a></p>
<p>For the URL’s if there is an additional path that Workbench is being served from then it should be added in the <code>&lt;path&gt;</code> field, otherwise that can be omitted. For example, the URL would be&nbsp;<code>https://&lt;RSW-SERVER&gt;/saml/metadataif</code> there isn’t an additional path.&nbsp;</p>
<p>In the&nbsp;Identifier (Entity ID)&nbsp;section, click&nbsp;Add identifier&nbsp;and in the&nbsp;Enter an identifier&nbsp;text box, type a URL using the following pattern: <code>https://&lt;RSW-SERVER&gt;/&lt;PATH&gt;/saml/metadata.</code></p>
<p>In the&nbsp;Reply URL (Assertion Consumer Server URL)&nbsp;section, click&nbsp;Add reply URL&nbsp;and type the URL using the following pattern: <code>https://&lt;RSW-SERVER&gt;/&lt;PATH&gt;/saml/acs.</code></p>
</section>
<section id="configure-workbench-with-saml" class="level3">
<h3 class="anchored" data-anchor-id="configure-workbench-with-saml">Configure Workbench with SAML</h3>
<p>Relevant page in docs: <a href="https://docs.posit.co/ide/server-pro/authenticating_users/saml_sso.html">https://docs.posit.co/ide/server-pro/authenticating_users/saml_sso.html</a> and <a href="https://docs.posit.co/ide/server-pro/authenticating_users/integrated_providers/azure_ad_saml.html">https://docs.posit.co/ide/server-pro/authenticating_users/integrated_providers/azure_ad_saml.html</a></p>
<p>Enable SAML auth:</p>
<pre><code>#/etc/rstudio/rserver.conf
auth-saml=1</code></pre>
<p>Complete the SAML section in the config to match the user attributes from EntraID:</p>
<pre><code>#/etc/rstudio/rserver.conf
auth-saml=1
auth-saml-metadata-url=&lt;federation-metadata-URI&gt;
auth-saml-sp-name-id-format=emailaddress
auth-saml-sp-attribute-username=NameID
auth-saml-sp-base-uri=&lt;RStudio-Server-URI&gt;
auth-saml-idp-post-binding=1</code></pre>
<p>Create the auth profile:</p>
<pre><code>sudo authselect create-profile pwb --base-on=minimal</code></pre>
<p>Edit the /etc/authselect/custom/pwb/nsswitch.conf file and add the pwb entry:</p>
<pre><code>#/etc/authselect/custom/pwb/nsswitch.conf
passwd:     files {if "with-altfiles":altfiles }systemd pwb {exclude if "with-custom-passwd"}
group:      files {if "with-altfiles":altfiles }systemd pwb {exclude if "with-custom-group"}
shadow:     files pwb                                       {exclude if "with-custom-shadow"}</code></pre>
<p>Enable the profile:</p>
<pre><code>authselect select custom/pwb --with-mkhomedir --force</code></pre>
<p>Note: At this time the docs aren’t accurate and say to run <code>sudo authselect select pwb --with-mkhomedir</code> instead of <code>authselect select custom/pwb --with-mkhomedir --force</code></p>
<p>Make sure the odd job service is active:</p>
<pre><code>systemctl enable --now oddjobd.service</code></pre>
<p>Prevent NSCD from caching information:</p>
<pre><code>vi /etc/nscd.conf
enable-cache passwd no
enable-cache group no
sudo systemctl restart nscd
ps -ef | grep nsc</code></pre>
</section>
<section id="configure-scim-provisioning-for-workbench" class="level3">
<h3 class="anchored" data-anchor-id="configure-scim-provisioning-for-workbench">Configure SCIM Provisioning for Workbench</h3>
<p>Relevant page in docs: <a href="https://docs.posit.co/ide/server-pro/user_provisioning/azure.html">https://docs.posit.co/ide/server-pro/user_provisioning/azure.html</a></p>
<p>Complete the user provisioning section in the config to match the user attributes from EntraID (modify the user-provisioning-start-uidas needed, might not matter and can be left off) :</p>
<pre><code>#/etc/rstudio/rserver.conf
user-provisioning-enabled=1
user-provisioning-start-uid=2000</code></pre>
</section>
<section id="configuring-the-scim-provisioning-token-for-workbench" class="level3">
<h3 class="anchored" data-anchor-id="configuring-the-scim-provisioning-token-for-workbench">Configuring the SCIM Provisioning token for Workbench</h3>
<p>Relevant page in docs: <a href="https://docs.posit.co/ide/server-pro/user_provisioning/managing_tokens.html">https://docs.posit.co/ide/server-pro/user_provisioning/managing_tokens.html</a></p>
<p>For SCIM provisioning&nbsp;and the token, I believe you will also need user provisioning turned on. You can do this with:&nbsp;</p>
<pre><code>#rserver.conf
user-provisioning-enabled=1</code></pre>
<p>Create a token:</p>
<pre><code>sudo rstudio-server user-service generate-token "My Token"</code></pre>
<p>Input the token through the Azure profile.</p>
<p>Provision a user by having a user log all the way in to Workbench.</p>
<p>Test it from command line:</p>
<pre><code>/usr/lib/rstudio-server/bin/pamtester --verbose rstudio &lt;user&gt; authenticate acct_mgmt setcred open_session close_session</code></pre>
</section>
<section id="create-the-azure-application-for-connect" class="level3">
<h3 class="anchored" data-anchor-id="create-the-azure-application-for-connect">Create the Azure application for Connect</h3>
<p>Refer to <a href="https://docs.posit.co/ide/server-pro/authenticating_users/integrated_providers/azure_ad_saml.html">here</a></p>
</section>
<section id="configure-connect-with-saml" class="level3">
<h3 class="anchored" data-anchor-id="configure-connect-with-saml">Configure Connect with SAML</h3>
<p>Relevant page in docs: <a href="https://docs.posit.co/connect/admin/authentication/saml-based/entra-id-saml/">https://docs.posit.co/connect/admin/authentication/saml-based/entra-id-saml/</a></p>
<pre><code>#; /etc/rstudio-connect/rstudio-connect.gcfg

[Server]
Address = https://posit.company.com

[Authentication]
Provider = "saml"

[SAML]
IdPMetaDataURL = "https://login.microsoftonline.com/{tenantid}/federationmetadata/2007-06/federationmetadata.xml?appid={appid}"
IdPAttributeProfile = azure
; Enable this for a better user experience, unless
; managing a large number of groups is a concern:
;GroupsAutoProvision = true
; When troubleshooting a SAML problem, more verbose logging
; is produced by uncommenting the following line:
;Logging = true</code></pre>
<p>EntraID limits group membership to 150. If a user is a member of more than 150 groups than their group list will be concatenated, potentially missing important ones that are needed inside Connect.</p>
<p>Register on first login can be disabled with:</p>
<pre><code>#; /etc/rstudio-connect/rstudio-connect.gcfg
[SAML]
RegisterOnFirstLogin = false</code></pre>
<p>In that case, users need to be created via the Connect API: <a href="https://docs.posit.co/connect/api/#post-/v1/users">https://docs.posit.co/connect/api/#post-/v1/users</a></p>
<pre><code>#!/bin/bash

API_KEY="your api key"

DATA='{
  "email": "john_doe@posit.co",
  "first_name": "John",
  "last_name": "Doe",
  "password": "",
  "unique_id": "string",
  "user_must_set_password": false,
  "user_role": "viewer",
  "username": "john_doe"
}'

curl --silent --show-error -L --max-redirs 0 --fail \
    -X POST \
    -H "Authorization: Key ${API_KEY}" \
    --data-raw "${DATA}" \
    "https://connect.example.com/__api__/v1/users"</code></pre>
</section>
</section>
<section id="restart" class="level2">
<h2 class="anchored" data-anchor-id="restart">Restart</h2>
<section id="workbench-1" class="level3">
<h3 class="anchored" data-anchor-id="workbench-1">Workbench</h3>
<pre><code>sudo rstudio-server restart</code></pre>
</section>
<section id="connect-1" class="level3">
<h3 class="anchored" data-anchor-id="connect-1">Connect</h3>
<pre><code>sudo systemctl restart rstudio-connect</code></pre>
</section>
</section>
<section id="assertions" class="level2">
<h2 class="anchored" data-anchor-id="assertions">Assertions</h2>
<p>This image shows the needed assertions on the left, and the assertions associated with a test user on the right. Test user is failing to log into Workbench due to missing assertions. Once the last name and email were added logins were successful.</p>
<p>The list of assertions expected by Connect are documented <a href="https://docs.posit.co/connect/admin/authentication/saml-based/entra-id-saml/#the-azure-profile">here</a>:</p>
<pre><code>; /etc/rstudio-connect/rstudio-connect.gcfg
[SAML]
UniqueIdAttribute = NameID
NameIDFormat = persistent
UsernameAttribute = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
FirstNameAttribute = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname
LastNameAttribute = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname
EmailAttribute = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
GroupsAttribute = http://schemas.microsoft.com/ws/2008/06/identity/claims/groups</code></pre>
</section>
<section id="troubleshooting" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h2>
<p>If no useful messages are showing in the Connect or Workbench logs, it could be an issue with the auth provider configuration, URL’s, or network access. Turning on debug logging may help with errors outside of the auth provider configuration.</p>
</section>
<section id="but-what-about-proxies" class="level2">
<h2 class="anchored" data-anchor-id="but-what-about-proxies">But what about proxies?</h2>
<p>Example endpoint for app: whole host name including proxy information scim v2, for example <a href="https://workbench-hostname">https://workbench-hostname</a>&gt;/scim/v2. Example in the case they are running with a proxy at root wb: <a href="https://%3CWorkbench%20URL%3E/%3CPATH%3E/scim/v2">https://<workbench url="">/<path>/scim/v2</path></workbench></a></p>
<section id="workbench-2" class="level3">
<h3 class="anchored" data-anchor-id="workbench-2">Workbench</h3>
<p>Relevant page in docs: <a href="https://docs.posit.co/ide/server-pro/access_and_security/running_with_a_proxy.html">https://docs.posit.co/ide/server-pro/access_and_security/running_with_a_proxy.html</a> and <a href="https://docs.posit.co/ide/server-pro/authenticating_users/saml_sso.html#proxy-considerations">https://docs.posit.co/ide/server-pro/authenticating_users/saml_sso.html#proxy-considerations</a></p>
<p>The reverse proxy should be correctly forwarding the connection and the certificate on the proxy is publicly trusted. Workbench needs to know it’s running on HTTPS however. Generally that’s done by the proxy forwarding the X-Forward-Proto header as https.</p>
<p>We have an example here showing setting the X-Forward-Proto&nbsp;headers, an example without SSL is described as “If the Nginx proxy is using SSL and Workbench has ssl-enabled=0” :&nbsp;<a href="https://docs.posit.co/ide/server-pro/access_and_security/running_with_a_proxy.html#nginx-configuration">https://docs.posit.co/ide/server-pro/access_and_security/running_with_a_proxy.html#nginx-configuration</a> &nbsp;</p>
<p>The documentation default is:&nbsp;</p>
<pre><code>#/etc/rstudio/rserver.conf
www-root-path=/rstudio</code></pre>
<p>However, in the proxy configuration you are actually being hosted on /wb not rstudio so I believe it should look like:&nbsp;</p>
<pre><code>#/etc/rstudio/rserver.conf
www-root-path=/wb</code></pre>
<p>I believe in your URL to your tenant that it will need the /wb prefix as well, IE instead of &lt;https://<workbench url="">/scim/v2&gt; it should be&nbsp;&lt;https://<workbench url="">/<path>/scim/v2&gt;</path></workbench></workbench></p>
<p>The path prefix will need to be propagated throughout, what comes to mind is also the ACS URL configuration in the Enterprise App which is currently pointing to&nbsp;&lt;https://<workbench url="">/saml/acs&gt;but should be &lt;https://<workbench url="">/<path>/saml/acs&gt;</path></workbench></workbench></p>
</section>
<section id="connect-2" class="level3">
<h3 class="anchored" data-anchor-id="connect-2">Connect</h3>
<p>Relevant page in docs: <a href="https://docs.posit.co/connect/admin/proxy/">https://docs.posit.co/connect/admin/proxy/</a> and <a href="https://docs.posit.co/connect/admin/authentication/saml-based/entra-id-saml/index.html#authenticating-with-saml-using-multiple-network-aliases">https://docs.posit.co/connect/admin/authentication/saml-based/entra-id-saml/index.html#authenticating-with-saml-using-multiple-network-aliases</a></p>
<p>Connect needs web sockets to be enabled.</p>
<pre><code># Support proxying of web-socket connections
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}</code></pre>
</section>
</section>
<section id="what-happens-when-users-leave-the-organization" class="level2">
<h2 class="anchored" data-anchor-id="what-happens-when-users-leave-the-organization">What happens when users leave the organization?</h2>
<p>When users leave the organization, or removed from the application, than their account will be locked. This is the advantage of configuring it with SCIM / integrating directly with the authentication provider. Any home directories, deployed content, etc will remain on the server and can be cleaned up using any internal policies.</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/saml-entraid-posit-team.html</guid>
  <pubDate>Wed, 07 May 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Configuring Jupyter for use with Posit Workbench</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/Configuring Jupyter.html</link>
  <description><![CDATA[ 





<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>Configuring Jupyter to work on Posit Workbench is very doable, but there are a couple gotchas. Hopefully these steps are useful!</p>
</section>
<section id="install-steps" class="level2">
<h2 class="anchored" data-anchor-id="install-steps">Install steps</h2>
<p>Try following these steps for installing jupyter: <a href="https://docs.posit.co/ide/server-pro/integration/jupyter-standalone.html" class="uri">https://docs.posit.co/ide/server-pro/integration/jupyter-standalone.html</a></p>
<p>This may look like:</p>
<pre><code>## Set variables 
export JUPYTER_PYTHON_VERSION=3.12.4
export JUPYTERLAB_VERSION=4.2.5
export WORKBENCH_JUPYTERLAB_VERSION=1.0

## Install Jupyter 
sudo /opt/python/"${JUPYTER_PYTHON_VERSION}"/bin/pip install jupyterlab=="${JUPYTERLAB_VERSION}" notebook pwb_jupyterlab~="${WORKBENCH_JUPYTERLAB_VERSION}"

## Set the jupyter.conf to the jupyter-exe location
# jupyter.conf
cat &gt; /etc/rstudio/jupyter.conf &lt;&lt;EOF
jupyter-exe=/opt/python/${JUPYTER_PYTHON_VERSION}/bin/jupyter
labs-enabled=1
notebooks-enabled=1
default-session-cluster=Local

EOF</code></pre>
<p>Jupyter ports for HA: FromPort=8888,ToPort=8898</p>
</section>
<section id="troubleshooting" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h2>
<p>Uninstall the current version of Jupyter Notebook: <code>pip uninstall jupyter</code></p>
<p>Restart RStudio Server: Restart the RStudio Server to apply the changes:</p>
<p><code>sudo rstudio-server restart</code></p>
<p>Restart Launcher: If you are using the Launcher, restart it as well:</p>
<p><code>sudo rstudio-launcher restart</code></p>
<p>Can you also try to start a notebook manually by running the following from the Linux shell? <code>/opt/python/3.9.14/bin/jupyter notebook</code>. Does that complete as an unprivileged user? What about with sudo? <code>sudo /opt/python/3.9.14/bin/jupyter notebook</code></p>
<p>Similarly, <code>sudo /opt/python/3.9.14/bin/jupyter lab</code></p>
<p>Umask in STIG systems is typically set to <code>0077</code> (on rhel9) which will make the libraries installed under the python version unable to be used by normal users. Set umask to <code>0022</code> and then reinstall python and jupyter to fix this. Alternatively could try to fix the file permissions with the -exec flag and chmod, for example with <code>chmod -R o+rx /opt/python/&lt;version&gt;</code> which would set the permissions to 755 or <code>chmod -R og+rX /opt/python/&lt;version&gt;</code> which gives read permissions to all files but only execute permissions to those that already had execute permissions (typically the owner).</p>
<p>Uninstall Python: <a href="https://docs.posit.co/resources/install-python.html#uninstall" class="uri">https://docs.posit.co/resources/install-python.html#uninstall</a></p>
<p>Re-install Python: <a href="https://docs.posit.co/resources/install-python.html#install-required-dependencies" class="uri">https://docs.posit.co/resources/install-python.html#install-required-dependencies</a></p>
<p>Add Python to the path:</p>
<pre><code># add this to your .bashrc
export PATH=/opt/python/3.11.9/bin:$PATH</code></pre>
<p>Manage kernels: <a href="https://docs.posit.co/ide/server-pro/user/jupyter-lab/guide/jupyter-kernel-management.html" class="uri">https://docs.posit.co/ide/server-pro/user/jupyter-lab/guide/jupyter-kernel-management.html</a></p>
<p>Users can register their own virtual kernel with the ipykernel package running the command (within an activated environment on the CLI/terminal):</p>
<pre><code>python -m ipykernel install --user --name short-name --display-name "Long Name"</code></pre>
<p>Upon launching a new jupyterlab or VS Code session this environment can be selected from this menu.</p>


</section>

 ]]></description>
  <category>code</category>
  <category>python</category>
  <guid>https://questionable.quarto.pub/blog/work/Configuring Jupyter.html</guid>
  <pubDate>Thu, 01 May 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Monitoring Posit Team</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/Monitoring Posit Team.html</link>
  <description><![CDATA[ 





<section id="software-monitoring" class="level2">
<h2 class="anchored" data-anchor-id="software-monitoring">Software Monitoring</h2>
<p>Each of our products has their own method for monitoring. In addition to each individual monitoring method, Chronicle exists to pull that same information but aggregate it for customers. IMO it’s particularly useful for customers that have multiple environments that want their own single report to see the stuff they care about.</p>
<p><strong>Workbench</strong></p>
<ul>
<li>Metrics endpoint (Prometheus) that can be pulled into other systems: <a href="https://docs.posit.co/ide/server-pro/auditing_and_monitoring/prometheus_metrics.html">https://docs.posit.co/ide/server-pro/auditing_and_monitoring/prometheus_metrics.html</a></li>
<li>API for more bespoke metrics (new): <a href="https://docs.posit.co/ide/server-pro/workbench_api/workbench_api.html">https://docs.posit.co/ide/server-pro/workbench_api/workbench_api.html</a></li>
<li>Build-in admin dashboard shows metrics around sessions (needs to be enabled): <a href="https://docs.posit.co/ide/server-pro/server_management/administrative_dashboard.html">https://docs.posit.co/ide/server-pro/server_management/administrative_dashboard.html</a></li>
</ul>
<p><strong>Connect</strong></p>
<ul>
<li>Metrics endpoint (Prometheus) that can be pulled into other systems: <a href="https://docs.posit.co/connect/admin/operational-metrics/index.html">https://docs.posit.co/connect/admin/operational-metrics/index.html</a></li>
<li>API for more bespoke metrics: <a href="https://docs.posit.co/connect/api/">https://docs.posit.co/connect/api/</a> and <a href="https://docs.posit.co/connect/cookbook/">https://docs.posit.co/connect/cookbook/</a></li>
<li>Built-in admin dashboard shows metrics around resource consumption, scheduled jobs, etc</li>
</ul>
<p><strong>Package Manager</strong></p>
<ul>
<li>Metrics endpoint (Prometheus) that can be pulled into other systems: <a href="https://docs.posit.co/rspm/admin/operational-metrics.html">https://docs.posit.co/rspm/admin/operational-metrics.html</a></li>
<li>API for more bespoke metrics: <a href="https://docs.posit.co/rspm/admin/admin-cli.html#cli-remote-setup">https://docs.posit.co/rspm/admin/admin-cli.html#cli-remote-setup</a></li>
<li>Configure space alerts: <a href="https://docs.posit.co/rspm/admin/alerts.html">https://docs.posit.co/rspm/admin/alerts.html</a></li>
<li>Built-in admin dashboard shows metrics around packages being downloaded</li>
</ul>
<p>Chronicle is still very early in development and customers have to build their own reports. Typically that looks like installing Chronicle on the Connect server and then publishing a quarto report that they made to Connect.There are a bunch of metrics reporting software that can take a stream of data and display it. You might hear datadog, splunk, grafana mentioned as the actual visualization tool being used in organizations.</p>
<p>Reach out to Posit to learn more about Chronicle and how to install it.</p>
</section>
<section id="application-monitoring" class="level2">
<h2 class="anchored" data-anchor-id="application-monitoring">Application Monitoring</h2>
<p>Information like who accessed the platform, who accessed each app can be gotten with the Connect API, for example with this cookbook recipe: <a href="https://docs.posit.co/connect/cookbook/metrics/viewing-content-usage-information/" class="uri">https://docs.posit.co/connect/cookbook/metrics/viewing-content-usage-information/</a></p>
<p>Getting what someone did inside of the application is harder. I’ve seen customers use <a href="https://shiny.posit.co/r/articles/build/google-analytics/">google analytics</a> for this (<a href="https://quarto.org/docs/websites/website-tools.html#google-analytics">example for quarto</a>). I’ve been really interested in exploring packages like <a href="https://appsilon.github.io/shiny.telemetry/">shiny.telemetry</a> by Appsilon for digging into this data also (it uses an external database to store this data).</p>
<p>Alternativelyl a simple way to add user information is to simply add print statements through the code so it will print choices to the log. The log files can be accessed over this endpoint with the Connect API: <a href="https://docs.posit.co/connect/api/#get-/v1/content/-guid-/jobs/-key-/download" class="uri">https://docs.posit.co/connect/api/#get-/v1/content/-guid-/jobs/-key-/download</a></p>
<p>Admin logs on Connect are restricted to the admin user: <a href="https://docs.posit.co/connect/admin/auditing/index.html#audit-log-output" class="uri">https://docs.posit.co/connect/admin/auditing/index.html#audit-log-output</a></p>
<p>By default, audited events are only recorded in the database. Admin users are able to view audit entries in the dashboard: <a href="https://docs.posit.co/connect/api/#get-/v1/audit_logs" class="uri">https://docs.posit.co/connect/api/#get-/v1/audit_logs</a></p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/Monitoring Posit Team.html</guid>
  <pubDate>Wed, 30 Apr 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Mounting drives on a server for Posit Team</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/mounting-drives-server.html</link>
  <description><![CDATA[ 





<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>Workbench and Connect will work with the underlying linux system to make resources available to users. This includes things like mounted drives.</p>
<p>Neither Workbench nor Connect natively mount drives, this isn’t done through a config. Drive mounts are done through linux operations.</p>
<section id="nfs" class="level3">
<h3 class="anchored" data-anchor-id="nfs">NFS</h3>
<p>Typically we see this looking like</p>
<ol type="1">
<li>Create a local directory</li>
<li><code>mount -t nfs -o optionshere sharehost:sharepath</code></li>
</ol>
<p>The important bit would be to set permissions with chown, chmod, and maybe facl for either the rstudio-connect user, or the alternate user they choose, for example something like:</p>
<pre><code>sudo chown user:group /folder
chmod 764 /folder</code></pre>
<p>Change the code (764) for what the folder is being locked down to in order to prevent other users from being able to access it. Those lines will make that user the owner of the folder, and then chmod 764 should give only the owner access. But I recommend referencing your linux team.</p>
<p>It can also involve <a href="https://www.baeldung.com/linux/network-drive-etc-fstab">fstab</a> or <a href="https://help.ubuntu.com/community/Autofs">AutoFS</a>.</p>
<p>Some specific situations may have some complexity: specific formats, cloud situations, or verifying NFS export options, but in general the mounting process is much simpler than installing the posit products and configuring them and is the same as what would be done on any linux server.</p>
<p>If running in kubernetes then the mount needs to be added to each job pod and it gets more complicated.</p>
</section>
</section>
<section id="smbcifs" class="level2">
<h2 class="anchored" data-anchor-id="smbcifs">SMB/CIFS</h2>
<p>For SMB/CIFS this could look like mounting via PAM, discussed here: <a href="https://support.posit.co/hc/en-us/articles/360044190234-How-to-mount-a-Windows-SMB-CIFS-share-via-PAM" class="uri">https://support.posit.co/hc/en-us/articles/360044190234-How-to-mount-a-Windows-SMB-CIFS-share-via-PAM</a></p>
<p>Alternatively, the SMB/CIFS could be <a href="https://www.techrepublic.com/article/how-to-permanently-mount-a-windows-share-on-linux/">mounted directly</a> with <code>cifs-utils</code> using a service account if traceability or access controls aren’t needed with <code>sudo mount -t cifs -o username=&lt;user&gt;,password=&lt;password&gt; //&lt;server&gt;/&lt;share&gt; /mnt/&lt;mountpoint&gt;</code>.</p>
<p><a href="https://infohub.delltechnologies.com/en-us/l/dell-unity-nas-capabilities/multiprotocol-17/">Multiprotocol NAS</a> is another option for a more enterprise solution.</p>
</section>
<section id="copying-a-project-from-one-users-home-directory-to-another" class="level2">
<h2 class="anchored" data-anchor-id="copying-a-project-from-one-users-home-directory-to-another">Copying a project from one users home directory to another</h2>
<p>Reference: <a href="https://support.posit.co/hc/en-us/articles/12959116352663-Transferring-project-ownership-in-Posit-Workbench" class="uri">https://support.posit.co/hc/en-us/articles/12959116352663-Transferring-project-ownership-in-Posit-Workbench</a></p>
<p>This will recursively copy the project from user1’s home directory to user2’s home directory</p>
<p>`sudo cp -R /home/user1/project /home/user2/``</p>
<p>And this will change the owner recursively to user2</p>
<p><code>sudo chown -R user2:user2 /home/user2/project</code></p>
</section>
<section id="permissions" class="level2">
<h2 class="anchored" data-anchor-id="permissions">Permissions</h2>
<p>When mounting on the server it will need the appropriate permissions so that users are able to access the contents of the drive.</p>
<p>For example for content running on Posit Connect the rstudio-connect user will need access to the drive, for example via <code>chmod 644</code>. Alternatively the drive could be mapped so that an alternate linux user has access and a user with admin access through the Connect UI can set the runAs user to the selected linux user. This will provide more security around protecting the files that are mounted.</p>
</section>
<section id="logging-user-actions" class="level2">
<h2 class="anchored" data-anchor-id="logging-user-actions">Logging user actions</h2>
<p>For customers wanting to log user actions on NFS shares that is done through linux admin utilities, like <code>auditd</code>.</p>
<p>Alternatively kerberized NFS shares can be used for centralized logging/auditing but is significantly more admin overhead.</p>
</section>
<section id="failures" class="level2">
<h2 class="anchored" data-anchor-id="failures">Failures</h2>
<section id="checking-mounted-drives-and-noexec-option" class="level3">
<h3 class="anchored" data-anchor-id="checking-mounted-drives-and-noexec-option">Checking mounted drives and noexec option</h3>
<p>Check if <code>/home</code> on the server, or is it a network mount (NFS or CIFS). In NFS, for example, there can be the use of access control lists which can impact permissions. Similarly, when working in a system that has a mounted share drive then would want to check that libraries are being written to that share so you get persistence. Typically this means writing to inside the home directory. Check mounted drives with: <code>df -h</code></p>
<p>Check <code>/etc/fstab</code> to see if the home directories are mounted with <code>noexec</code></p>
<p>For example, this shows that the home directories were mounted with <code>noexec</code>: <code>/dev/mapper/rhel-home  /home  xfs    defaults,noexec,nosuid,nodev   0 0</code></p>
<p>This resulted in this error message:</p>
<pre><code>library(stringi)Error: package or namespace load failed for 'stringi' in dyn.load(file, DLLpath = DLLpath, ...):
unable to load shared object '/home/username/x86_64-pc-linux-gnu-library/4.3/stringi/libs/stringi.so':
  /home/username/R/x86_64-pc-linux-gnu-library/4.3/stringi/libs/stringi.so: failed to map segment from shared object</code></pre>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p>A linux based forum like <a href="https://serverfault.com/">serverfault</a> can be useful for getting more answers for linux topics like this.</p>
<ul>
<li><a href="https://www.golinuxcloud.com/linux-mount-nfs/" class="uri">https://www.golinuxcloud.com/linux-mount-nfs/</a></li>
<li><a href="https://planetscale.com/blog/io-devices-and-latency#storage-in-the-cloud" class="uri">https://planetscale.com/blog/io-devices-and-latency#storage-in-the-cloud</a></li>
<li><a href="https://solutions.posit.co/admin-training/courses/workbench/04_datasources.html#smbcifs" class="uri">https://solutions.posit.co/admin-training/courses/workbench/04_datasources.html#smbcifs</a></li>
<li>Really interesting community post with script for automounting windows shares: <a href="https://community.rstudio.com/t/active-directory-ad-permissions-and-file-share-mounting-for-rsp/5427/5" class="uri">https://community.rstudio.com/t/active-directory-ad-permissions-and-file-share-mounting-for-rsp/5427/5</a></li>
<li>Example for mounting a drive: <a href="https://superuser.com/questions/134734/how-to-mount-a-drive-from-terminal-in-ubuntu" class="uri">https://superuser.com/questions/134734/how-to-mount-a-drive-from-terminal-in-ubuntu</a></li>
</ul>


</section>

 ]]></description>
  <category>code</category>
  <category>data</category>
  <guid>https://questionable.quarto.pub/blog/work/mounting-drives-server.html</guid>
  <pubDate>Tue, 29 Apr 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Setting the R package repository on Posit Workbench</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/r-repository-settings-workbench.html</link>
  <description><![CDATA[ 





<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>The repository for packages being used for installation by users is often important to configure. When using something like Package Manager you’ll want users to install packages from there, rather than the broader internet.</p>
</section>
<section id="at-a-glance" class="level2">
<h2 class="anchored" data-anchor-id="at-a-glance">At a glance</h2>
<p>The best pattern is to configure the repository across R sessions using R config options, not RStudio configs. A shared site library can be created (leveraging <code>Rprofile.site</code> and <code>Renviron.site</code> for example) or using <code>renv</code> with a shared <code>renv</code> package cache (maintaining reproduceability through the <code>renv.lock</code> file).</p>
<p>The <code>Renviron.site</code> would override the <code>Rprofile.site</code> setting and therefore may be more robust.</p>
<section id="renviron.site" class="level3">
<h3 class="anchored" data-anchor-id="renviron.site">Renviron.site</h3>
<p>Referencing: <a href="https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R" class="uri">https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R</a></p>
<p>Create a <code>Renviron.site</code> file and define:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Renviron.site</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="/opt/R/Some-R-Version/lib/R/etc/Renviron.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_PREFIX_AUTO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>TRUE</span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_CACHE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/scratch/renv</span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>R_LIBS_SITE=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib64/R/library:/usr/share/R/library'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</section>
<section id="rprofile.site" class="level3">
<h3 class="anchored" data-anchor-id="rprofile.site">.Rprofile.site</h3>
<p>Set <code>.libPaths()</code> in <code>.Rprofile.site</code>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Rprofile.site</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="/opt/R/Some-R-Version/lib/R/etc/Rprofile.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repos</span> = c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CRAN</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/all/latest"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interactive()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">width</span> = 120<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.info()</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sysname"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]]</span> == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Windows"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Sys.setenv</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RENV_DOWNLOAD_METHOD</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curl"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"folder"</span> %in% tolower<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">list.files</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rlib"</span> %in% list.files<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/username/"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">print</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating Rlib folder"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dir.create</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/username/Rlib"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,mode</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0777"</span>,recursive = T<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[0;32;1mSetting local user lib\033[0m\n"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.libPaths</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">c</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/username/Rlib"</span> , .libPaths<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[0;33;1mYou should consider getting the access right so we can put your local R-lib there, instead of OneDrive.\033[0m\n"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</section>
<section id="test" class="level3">
<h3 class="anchored" data-anchor-id="test">Test</h3>
<p>Test this by running and checking the outputs of:</p>
<ul>
<li><code>.libPaths()</code></li>
<li><code>options()$repos</code></li>
</ul>
</section>
</section>
<section id="long-winded" class="level2">
<h2 class="anchored" data-anchor-id="long-winded">Long-winded</h2>
<section id="startup-behavior-of-r-when-loading-package-environment-details" class="level3">
<h3 class="anchored" data-anchor-id="startup-behavior-of-r-when-loading-package-environment-details">Startup behavior of R when loading package environment details</h3>
<p>R Startup behavior (funny): <a href="https://rstats.wtf/r-startup.html" class="uri">https://rstats.wtf/r-startup.html</a></p>
<blockquote class="blockquote">
<p>Credit: This section was largely taken from an internal Posit resource of unknown authorship</p>
</blockquote>
<p>From bash it is different than from the editor.</p>
<p>See <a href="https://stat.ethz.ch/R-manual/R-devel/library/base/html/Startup.html" title="https://stat.ethz.ch/R-manual/R-devel/library/base/html/Startup.html">here</a> for the official startup docs from R.</p>
<p>R from the command line/bash will take the user’s environment. It will not read any additional bash files during start-up (which the RStudio products will do). It will still read in the R startup files (Renviron/Rprofile).</p>
<p>Prior to loading the R session from the bash shell any commands in this file will be read and execute commands if it exists: <code>/etc/profile</code></p>
<p>Next, the the first of the following files that exists and is readable will have commands executed from (only one of these files will be read and executed):</p>
<ul>
<li><p><code>~/.bash_profile</code></p></li>
<li><p><code>~/.bash_login</code></p></li>
<li><p><code>~/.profile</code></p></li>
</ul>
<p>R then always loads the following (in order):</p>
<ul>
<li><p><code>R_HOME/etc/Renviron.site</code> (set for all users)</p></li>
<li><p><code>.Renviron</code> - user-specific, typically in the user’s home directory, but can be elsewhere (for instance, in a Project folder)</p></li>
<li><p><code>R_HOME/etc/Rprofile.site</code> (set for all users)</p></li>
<li><p><code>.Rprofile</code> - user-specific, typically in the user’s home directory, but can be elsewhere (for instance, in a Project folder)</p></li>
</ul>
<p>Beyond this, what gets put in the environment depends on the product.</p>
<ul>
<li><p>RStudio Server / Workbench: before any of this executes, RStudio Server will first include the contents of /etc/rstudio/rsession-profile if it exists. It will also add anything set in rsession-ld-library-path in rserver.conf to the LD_LIBRARY_PATH environment variable.</p></li>
<li><p>Shiny Server / Connect: you can affect the environment variables for a specific application using program supervisors</p></li>
</ul>
<p>This page in the documentation is the new home for the golden source of info for startup behavior: <a href="https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html" class="uri">https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html</a></p>
</section>
<section id="r-sessions-across-all-workbench-ides" class="level3">
<h3 class="anchored" data-anchor-id="r-sessions-across-all-workbench-ides">R sessions across all Workbench IDE’s</h3>
<p>Relying on <code>repos.conf</code> for R repository configuration IMHO is a clear anti-pattern which especially large customers with large setups should not use. <code>repos.conf</code> is a relic from a time where there was only RSP.</p>
<p>Configure the repository settings in R directly, rather than through the RStudio settings.</p>
<p>Resources:</p>
<ul>
<li><p>A great resource for setting this up simply is: <a href="https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html" class="uri">https://docs.posit.co/ide/user/ide/guide/environments/r/managing-r.html</a></p></li>
<li><p>For a more complex example that could be used in slurm environments refer to: <a href="https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R" class="uri">https://github.com/sol-eng/singularity-rstudio/blob/main/data/workbench/scripts/run.R</a></p></li>
</ul>
<p>The <code>Renviron.site</code> would override the <code>Rprofile.site</code> setting and therefore may be more robust.</p>
<section id="renviron.site-1" class="level4">
<h4 class="anchored" data-anchor-id="renviron.site-1">Renviron.site</h4>
<p>Create a <code>Renviron.site</code> file and define:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Renviron.site</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="/opt/R/Some-R-Version/lib/R/etc/Renviron.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Key1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>value1</span>
<span id="cb3-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_PREFIX_AUTO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>TRUE</span>
<span id="cb3-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RENV_PATHS_CACHE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/scratch/renv</span>
<span id="cb3-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>R_LIBS_SITE=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R_LIBS_SITE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib64/R/library:/usr/share/R/library'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>And then <code>Sys.getenv("Key1")</code> will return <code>"value1"</code> in a users R session.</p>
<p>This can be set at the user or system level. Users have the choice between user or project level (project taking preference). The <a href="https://usethis.r-lib.org/">usethis</a> package includes a helper function for editing <code>.Renviron</code> files from an R session with&nbsp;<code>usethis::edit_r_environ()</code>. For a system level install it is placed per R version, for example at <code>/opt/R/4.1.1/lib/R/etc/Renviron.site</code>.</p>
</section>
<section id="rprofile.site-1" class="level4">
<h4 class="anchored" data-anchor-id="rprofile.site-1">.Rprofile.site</h4>
<p>Set <code>.libPaths()</code> in <code>.Rprofile.site</code>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/opt/R/Some-R-Version/lib/R/etc/Rprofile.site</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="/opt/R/Some-R-Version/lib/R/etc/Rprofile.site" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repos</span> = c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CRAN</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://packagemanager.posit.co/all/latest"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interactive()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">width</span> = 120<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>Again this file can be se at the user or system level. At the user level the easiest way to edit your <code>.Rprofile</code> file is to use the <code>usethis::edit_r_profile()</code> function from within an R session. You can specify whether you want to edit the user or project level <code>.Rprofile.</code> For a system level install it is placed per R version, for example at <code>/opt/R/4.2.0/lib/R/etc/Rprofile.site</code>.</p>
</section>
<section id="configuring-a-shared-library" class="level4">
<h4 class="anchored" data-anchor-id="configuring-a-shared-library">Configuring a shared library</h4>
<p>Taken from an <a href="https://positpbc.slack.com/archives/C2P7MTJKE/p1738088423395249?thread_ts=1737982807.176319&amp;cid=C2P7MTJKE">internal discussion</a></p>
<p>Set <code>.libPaths()</code> in <code>.Rprofile.site</code>.</p>
<p>There are two main options:</p>
<ul>
<li><p>Install a set of R packages in a shared library. The users here would need to specify which packages they really need and then their IT team could install those into a <code>site-library</code> in each R version, ideally leveraging a time-based snapshot from package manager for reproducibility reason. Users in this case would be limited to a certain package version for some time. They however can update those packages regularly (e.g.&nbsp;quarterly) to lessen the pain here. As mentioned above, do <strong>NOT</strong> use any recommendation from the Posit Admin guide for this setup but follow the standard approach to configure the same in R (leveraging <code>Rprofile.site</code> and <code>Renviron.site</code> for example).</p></li>
<li><p>Educate/train the users to all use <code>renv</code> - then every user would have maximum degree of freedom to choose which packages and which version they want to use for each project. They then would maintain <code>renv.lock</code> files for each project and the admin team can then configure a shared <code>renv</code> package cache to ensure that any given package/version combination is only stored once.</p></li>
</ul>
<p>Both options in their own right also protect the data scientists from producing irreproducible code since in neither case they rely on that melting pot of R package mess that typically piles up in <code>R_LIBS_USER</code> (in particular for systems where R points to latest CRAN which IMHO is another anti-pattern)</p>
<section id="script-for-updating-packages-from-rspm-that-have-changed-to-site-library" class="level5">
<h5 class="anchored" data-anchor-id="script-for-updating-packages-from-rspm-that-have-changed-to-site-library">Script for updating packages from rspm that have changed to site library</h5>
<pre><code># update existing packages
update.packages(lib.loc=&lt;site.library&gt;, repos=&lt;PPM Repo&gt;, ask=FALSE)

# add any new packages
new.packages(lib.loc=&lt;site.library&gt;, repos=&lt;PPM Repo&gt;, ask=FALSE)</code></pre>
</section>
</section>
</section>
<section id="workbench-and-rstudio-sessions-only" class="level3">
<h3 class="anchored" data-anchor-id="workbench-and-rstudio-sessions-only">Workbench and RStudio sessions only</h3>
<p>The oft recommended path is to use the <code>repos.conf</code> or <code>rsession.conf</code> file to configure the repository URL.</p>
<p>This might look like:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/rsession.conf</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="/etc/rstudio/rsession.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">r-cran-repos=http://cran.at.r-project.org/</span></span></code></pre></div>
</div>
<p>Or:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/repos.conf</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="/etc/rstudio/repos.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://packagemanager.posit.co/cran/__linux__/jammy/latest</span>
<span id="cb7-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CRAN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://packagemanager.posit.co/cran/__linux__/jammy/latest</span>
<span id="cb7-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Australia</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://cran.ms.unimelb.edu.au/</span>
<span id="cb7-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Austria</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://lib.ugent.be/CRAN/</span></code></pre></div>
</div>
<p>And adding to <code>rsession.conf</code>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/rsession.conf</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="/etc/rstudio/rsession.conf" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use this to change the location / name of the repos.conf file</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">r-cran-repos-file=/etc/rstudio/repos.conf</span></span></code></pre></div>
</div>
<p>Reference: <a href="https://docs.posit.co/ide/server-pro/rstudio_pro_sessions/package_installation.html" class="uri">https://docs.posit.co/ide/server-pro/rstudio_pro_sessions/package_installation.html</a></p>
</section>
<section id="ld_library_path" class="level3">
<h3 class="anchored" data-anchor-id="ld_library_path">LD_LIBRARY_PATH</h3>
<p>Reference: <a href="https://rstudioide.zendesk.com/agent/tickets/107856" class="uri">https://rstudioide.zendesk.com/agent/tickets/107856</a></p>
<p>There are a few different places the LD_LIBRARY_PATH can be modified within Workbench settings, only some of which will work for packages like <code>rJava</code>. For instance, including the ldpaths script in <code>/etc/rstudio/r-versions</code> can ensure the correct library is set on R session startup. The final step in this support article shows a method of setting this up which should work even on non-containerized Workbench sessions (the mkdir command can be excluded, since that directory should already exist on a server-installed version of Workbench):</p>
<p>We need to force the installed R version to use it’s own ldpaths startup script when it starts inside the container.</p>
<p><code>RUN mkdir -p /etc/rstudio &amp;&amp; printf "Path: /opt/R/${R_VERSION}\nScript: /opt/R/${R_VERSION}/lib/R/etc/ldpaths" &gt; /etc/rstudio/r-versions</code></p>
<p>These steps are good to follow: <a href="https://solutions.posit.co/envs-pkgs/using-rjava/index.html#additional-steps-for-workbench" class="uri">https://solutions.posit.co/envs-pkgs/using-rjava/index.html#additional-steps-for-workbench</a></p>
<p>The additional steps that need to be followed on Workbench are:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rstudio/r-versions</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="/etc/rstudio/r-versions" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Path:</span> /opt/R/4.2.0</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Script:</span> /opt/R/4.2.0/lib/R/etc/ldpaths</span></code></pre></div>
</div>
</section>
<section id="troubleshooting" class="level3">
<h3 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h3>
<p>To determine the environment details it can be useful to run <code>Sys.getenv()</code> from inside and outside RStudio, to see if the user’s bash files are setting environment variables inappropriately for the system.</p>
<p>If the issue is occurring within RStudio it can be helpful to capture the output of<code>system("ldd /usr/lib/rstudio-server/bin/rsession")</code> from inside and outside RStudio to see which R libraries are being loaded.</p>
<p>Test from a user session the repository details with:</p>
<ul>
<li><code>.libPaths()</code></li>
<li><code>options()$repos</code></li>
</ul>
<p>Permissions on the various configs can cause various issues with soft fails, for example a working permission is: <code>chmod 644</code>, or for the rstudio directory consider <code>chmod 0755 /etc/rstudio</code> or <code>chmod o+x /etc/rstudio</code> to add the <code>x</code> bit for just rstudio-server without opening up the other permissions if it is desired to keep it restricted (may result in odd behavior).</p>
<p>Check permissions with: <code>ls -la /etc/rstudio</code></p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>R</category>
  <guid>https://questionable.quarto.pub/blog/work/r-repository-settings-workbench.html</guid>
  <pubDate>Thu, 24 Apr 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>Using the remote CLI with package manager</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/rspm_remote_admin_cli.html</link>
  <description><![CDATA[ 





<section id="overview" class="level3">
<h3 class="anchored" data-anchor-id="overview">Overview</h3>
<p>Remote CLI use: <a href="https://docs.posit.co/rspm/admin/admin-cli/#cli-remote-use" class="uri">https://docs.posit.co/rspm/admin/admin-cli/#cli-remote-use</a></p>
<blockquote class="blockquote">
<p>The entire admin CLI is now available for use remotely, with the exception of the offline, online and cluster commands. API tokens can be generated with the new global:admin scope to allow full access to the CLI.</p>
</blockquote>
<p>In order to use the admin CLI remotely you need an admin to create an API token for you (<code>rspm create token</code>)</p>
<p>The admin will likely need to follow these steps:</p>
<ul>
<li>Enable the <code>Authentication.APITokenAuth</code> configuration setting and restart the Package Manager service.</li>
<li>Create a token using the <code>rspm create token</code> command. For example <code>rspm create token --scope=global:admin --expires=never</code></li>
<li>Give the token and the full address of the server (including the port if not using a default port like 80/443) to the remote user.</li>
</ul>
<p>As a user these are needed:</p>
<ul>
<li>Download the Package Manager CLI, ensuring that the CLI version matches the server version.</li>
<li>Set an environment variable named <code>PACKAGEMANAGER_TOKEN</code> with the value of the token.</li>
<li>Set an environment variable named <code>PACKAGEMANAGER_ADDRESS</code> with the address of the Package Manager server.</li>
</ul>
<p>Some other commands useful to know about:</p>
<ul>
<li><code>rspm encrypt generate</code> for creating the encryption token from the CLI before setting up the server.</li>
<li>Generate a bootstrap key programmatically: <a href="https://docs.posit.co/rspm/admin/appendix/bootstrap/" class="uri">https://docs.posit.co/rspm/admin/appendix/bootstrap/</a></li>
<li><code>rspm create token --scope=sources:write --description 'meatballhat is testing' --sources='*' --expires=1h</code> generates an API key for one hour</li>
<li><code>rspm create token --description="user A" --sources=local-src --expires=30d --scope=sources:write</code> creates a token for adding binary packages remotely</li>
<li>useful example showing setup instructions for a package manager instance: <a href="https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh" class="uri">https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh</a></li>
<li>here’s the way we included the rspm cli in the container images: <a href="https://github.com/rstudio/sol-eng-demo-server/pull/110/files" class="uri">https://github.com/rstudio/sol-eng-demo-server/pull/110/files</a></li>
<li>list of all commands: <a href="https://docs.posit.co/rspm/admin/appendix/cli/rspm/" class="uri">https://docs.posit.co/rspm/admin/appendix/cli/rspm/</a></li>
</ul>
</section>
<section id="environment-set-up" class="level3">
<h3 class="anchored" data-anchor-id="environment-set-up">Environment set-up</h3>
<p>Current environment token:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PACKAGEMANAGER_ADDRESS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PACKAGEMANAGER_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</section>
<section id="running-commands" class="level3">
<h3 class="anchored" data-anchor-id="running-commands">Running commands</h3>
<p>As a user we can test our access with something like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the Package Manager CLI, ensuring that the CLI version matches the server version. For example RSPM_SERVER_VERSION=2024.04.2-29 or RSPM_SERVER_VERSION=2023.12.0-13, find the version through the UI or with rspm --version</span></span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM_SERVER_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2024.08.2-9</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM_SERVER_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2024.08.4-10</span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RSPM_SERVER_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2024.11.0-7</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> rspm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> https://cdn.posit.co/package-manager/linux/amd64/rspm-cli-linux-<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${RSPM_SERVER_VERSION}</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> +x rspm</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set an environment variable named PACKAGEMANAGER_TOKEN with the value of the token.</span></span>
<span id="cb2-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PACKAGEMANAGER_TOKEN</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set an environment variable named PACKAGEMANAGER_ADDRESS with the address of the Package Manager server. </span></span>
<span id="cb2-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PACKAGEMANAGER_ADDRESS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&lt;</span>redacted<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PACKAGEMANAGER_ADDRESS</span></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test it! </span></span>
<span id="cb2-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> verify</span>
<span id="cb2-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> list tokens</span>
<span id="cb2-19"></span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test it! </span></span>
<span id="cb2-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> list blocklist-rules</span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test it! Need a package to try to push to test these</span></span>
<span id="cb2-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>internal <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lisaPackageManagerDemo_0.0.1.tar.gz</span></code></pre></div>
<p>Let’s create a new repository for blocked packages that is inspired by <a href="https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh" class="uri">https://github.com/rstudio/evaluations/blob/main/src/scripts/config_rspm.sh</a></p>
<p>First we should create our .txt files with the desired subset of packages:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># curated cran</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dplyr\nggplot2\narrow\nlubridate\njsonlite\nreadxl\nhaven\ngdata\nigraph\ncommonmark'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> package_subset_r.csv</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># curated pypi</span></span>
<span id="cb3-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotnine\npolars\npillow\ngreat-tables'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> package_subset_py.txt</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">snapshot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2025-01-22</span></code></pre></div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># blocked packages -- R</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>curated-cran <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r </span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ggplot2 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation of 'ggplot2' is blocked"</span></span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--file-in</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'package_subset_r.csv'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--commit</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--snapshot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${snapshot}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Curated CRAN with vulnerability blocking enabled. Downloads of ggplot2 are also disallowed."</span></span>
<span id="cb4-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-r</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># blocked packages -- python</span></span>
<span id="cb4-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create source <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>curated-pypi</span>
<span id="cb4-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span>
<span id="cb4-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plotnine <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation of 'plotnine' is blocked."</span></span>
<span id="cb4-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--file-in</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>package_subset_py.txt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--snapshot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${snapshot}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--commit</span></span>
<span id="cb4-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Curated PyPI with vulnerability blocking enabled. Downloads of plotnine are also disallowed."</span></span>
<span id="cb4-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-packages-python</span></code></pre></div>
<p>Let’s check for package versions that violate the blocklist rule for blocking vulnerabilities:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#rspm test blocklist-rules --repo=[repo name] --package-name=[package name] --version=[version]</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pillow</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blocked-python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pillow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>10.0.1</span></code></pre></div>
<p>Let’s set up a cran that has all vulnerable packages blocked (rather than a subset). This wasn’t possible until the newest release.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>r <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Access CRAN packages with known vulnerabilities blocked'</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span></code></pre></div>
<p>Let’s now do the same for pypi:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Access PyPi packages with known vulnerabilities blocked'</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> subscribe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vulns</span></span></code></pre></div>
<p>Let’s check for package versions that violate the blocklist rule for blocking vulnerabilities:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#rspm test blocklist-rules --repo=[repo name] --package-name=[package name] --version=[version]</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>jsonlite <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1.8.7</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pillow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>10.0.1</span></code></pre></div>
<p>Let’s create a blocklist rule to block a specific package:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> create blocklist-rule <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ggplot2 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation of 'ggplot2' is blocked"</span></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> test blocklist-rules <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--repo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cran-vulns-blocked <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--package-name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ggplot2</span></code></pre></div>
<p>Remove a repository (oops!):</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./rspm</span> delete repo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pypi-vulns-blocked</span></code></pre></div>
<p>Try to download a blocked package:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(remotes)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CRAN =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://pkg.demo.posit.team/cran-vulns-blocked/__linux__/noble/latest"</span>))</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_version</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jsonlite"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.8.7"</span>)</span></code></pre></div>
<p>or we can instead curl it to see what happens:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> https://pkg.demo.posit.team/cran-vulns-blocked/latest/src/contrib/Archive/jsonlite/jsonlite_1.8.7.tar.gz</span></code></pre></div>
</section>
<section id="rosv" class="level3">
<h3 class="anchored" data-anchor-id="rosv">rosv</h3>
<p>rosv r package: <a href="https://github.com/cran/rosv" class="uri">https://github.com/cran/rosv</a></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rosv)</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pull the entire set of PyPI vulnerability data</span></span>
<span id="cb13-4">pkg_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">osv_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ecosystem =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PyPI'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all_affected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb13-5">pypi_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_osv_list</span>(pkg_vul, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as.data.frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NA_value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pull the entire set of cran vulnerability data</span></span>
<span id="cb13-8">pkg_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">osv_query</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ecosystem =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CRAN'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all_affected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb13-9">cran_vul <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_osv_list</span>(pkg_vul, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as.data.frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NA_value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb13-10"></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scan an R project </span></span>
<span id="cb13-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">osv_scan</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r_project'</span>)</span></code></pre></div>
</section>
<section id="r-advisory-database" class="level3">
<h3 class="anchored" data-anchor-id="r-advisory-database">r-advisory-database</h3>
<p>r-advisory-database: <a href="https://github.com/RConsortium/r-advisory-database" class="uri">https://github.com/RConsortium/r-advisory-database</a></p>
</section>
<section id="troubleshooting" class="level3">
<h3 class="anchored" data-anchor-id="troubleshooting">Troubleshooting</h3>
<blockquote class="blockquote">
<p>“unsupported protocol scheme”“”</p>
</blockquote>
<p>This error is due to the missing <code>https://</code> in front of the URL. Add that and try again.</p>
<blockquote class="blockquote">
<p>“Error: unable to get the claims from the token: signature is invalid”</p>
</blockquote>
<p>Was the package manager server recently updated? The encryption key changes between versions (is re-generated). It is used for all secret management in PPM, including JWT tokens, encrypted configuration values like database passwords, and credentials for git builders. Logic needs to be added to manage the key across versions if you want things like API keys to persist. Follow the docs <a href="https://docs.posit.co/rspm/admin/appendix/encryption/">here</a> and consider setting the supported env var <code>PACKAGEMANAGER_ENCRYPTION_KEY</code>.</p>


</section>

 ]]></description>
  <category>code</category>
  <guid>https://questionable.quarto.pub/blog/work/rspm_remote_admin_cli.html</guid>
  <pubDate>Wed, 22 Jan 2025 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/" medium="image"/>
</item>
<item>
  <title>AWS Connections from Posit Team</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/blog/work/aws-data-sources.html</link>
  <description><![CDATA[ 





<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>This article walks through the different access options for data resources in AWS. Access patterns for AWS resources will vary based on several general factors:</p>
<ol type="1">
<li>Where the code is running (e.g.&nbsp;Posit Workbench vs.&nbsp;Posit Connect)</li>
<li>The credential (e.g.&nbsp;OIDC, IAM roles, kerberos authentication, IAM instance profile and policy, username/password, etc.)</li>
<li>The connection method (e.g.&nbsp;Workbench managed credentials, R or Python package, ODBC, etc.)</li>
<li>Which AWS resource is being accessed</li>
</ol>
<section id="aws-data-resources" class="level3">
<h3 class="anchored" data-anchor-id="aws-data-resources">AWS data resources</h3>
<p>Popular data storage options in AWS include S3, Aurora, Redshift, and Athena. Each type is useful for different workflows.</p>
<table class="table">
<colgroup>
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Service</strong></th>
<th><strong>Type</strong></th>
<th><strong>Data Type</strong></th>
<th><strong>Best For</strong></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Amazon S3</strong></td>
<td>Object Storage</td>
<td>Unstructured, Semi-structured</td>
<td>Data lakes, blob storage, backups, archive</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>Amazon RDS / Aurora</strong></td>
<td>Relational Database</td>
<td>Structured</td>
<td>Real-time transactions, enterprise apps, Aurora/MySQL/PostgreSQL/MariaDB/Microsoft SQL Server/Oracle database engines</td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td><strong>Amazon Redshift</strong></td>
<td>Data Warehouse</td>
<td>Structured, Semi-structured</td>
<td>Analytics, Business Intelligence</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>Amazon Athena</strong></td>
<td>Interactive Query to S3</td>
<td>Semi-structured, Structured</td>
<td>Ad-hoc queries on S3 data</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</section>
<section id="aws-identity-and-access-management-iam" class="level3">
<h3 class="anchored" data-anchor-id="aws-identity-and-access-management-iam">AWS Identity and Access Management (IAM)</h3>
<p>The foundation of identity management on AWS is through the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html">Identity and Access Management (IAM) web service</a>. The basic principles are:</p>
<ul>
<li>A user is set up on IAM (this can be synced with an external authentication agent)</li>
<li>Their sign-in credentials are used to authenticate with AWS (either as an AWS account root user, an IAM user, or assuming an IAM role)</li>
<li>Sign-in credentials are matched to a principal (an IAM user, federated user, IAM role, or application)</li>
<li>Access is requested and granted to a specific service according to the relevant services policy</li>
</ul>
<p>Vocabulary:</p>
<ul>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html">IAM users</a> are individual entities, typically a human user. By default IAM users have minimum permissions and access must be granted to them.</p></li>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html">IAM groups</a> can be used to describe a collection of IAM users and grant permissions to a larger set of users, rather than individually.</p></li>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">Roles</a> are an identity that has specific permissions. Any IAM user can be granted a role which would then give them access to those permissions for the time alotted. Services can also be granted roles which allows the service to perform actions on your behalf.</p></li>
<li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html">Policies</a> define permissions. They can be attached to identities or resources. These permissions define if a request is allowed or denied.</p></li>
</ul>
</section>
</section>
<section id="credentials" class="level2">
<h2 class="anchored" data-anchor-id="credentials">Credentials</h2>
<p>This guide will focus on the recommended tools for authentication to AWS resources when using Posit. The different methods that are commonly used are:</p>
<ul>
<li>User: Workbench Managed Credentials using Identity and Access Management (IAM) (recommended) 🔗</li>
<li>User: Developer managed credentials using Identity and Access Management (IAM), Secrets manager, or Key Management Service (KMS) 🔗</li>
<li>User or One-to-many: Developer managed keypair using an AWS secret key and access key 🔗</li>
<li>One-to-many: Grant trusted access to resource from VM using an IAM instance profile and policy or role 🔗</li>
</ul>
<p>Not supported:</p>
<ul>
<li>Browser authentication methods. Posit Workbench does not support this method. After a successful login, AWS will redirect you to <code>localhost</code> instead of your Workbench instance.</li>
</ul>
</section>
<section id="connection-methods" class="level2">
<h2 class="anchored" data-anchor-id="connection-methods">Connection Methods</h2>
<p>AWS supports many different types of connection methods. This guide will focus on the recommended connection methods when using Posit Workbench and Posit Connect.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Connection authentication is through the <a href="https://www.paws-r-sdk.com/">paws</a> package. In addition it provides the ability to return data objects for many of the resources inside AWS. For resources that are databases the <a href="https://odbc.r-dbi.org/reference/dbConnect-OdbcDriver-method.html">odbc</a> and <a href="https://dbi.r-dbi.org/">DBI</a> packages are also needed in order to create connection objects. Your Posit admin should follow the instructions on the <a href="https://docs.posit.co/pro-drivers/">Install Pro Drivers</a> page of the documentation.</p>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Connection authentication is through the <a href="https://pypi.org/project/boto3/">boto3</a> package. For resources that are databases this can be used in conjunction with data frame libraries like <a href="https://docs.pola.rs/">polars</a> or <a href="https://pandas.pydata.org/">pandas</a>. Your Posit admin should follow the instructions on the <a href="https://docs.posit.co/pro-drivers/">Install Pro Drivers</a> page of the documentation.</p>
</div>
</div>
</div>
</section>
<section id="user-credential-examples" class="level2">
<h2 class="anchored" data-anchor-id="user-credential-examples">User Credential Examples</h2>
<section id="development-environments-ie-workbench" class="level3">
<h3 class="anchored" data-anchor-id="development-environments-ie-workbench">Development Environments (IE Workbench)</h3>
<p>Development environments refer to environments where users write and execute cod, which include Posit Workbench. In the development environment the running user is executing the code, so both interactive and non-interactive authentiation methods are possible. Most commonly the credential method chosen uses the credetials of the running user.</p>
<p>The admin for Workbench can configure credentials on Workbench to help make this process easier for developers. Currently, this feature is only supported for RStudio Pro and VS Code sessions.</p>
</section>
<section id="example-access-patterns" class="level3">
<h3 class="anchored" data-anchor-id="example-access-patterns">Example Access Patterns</h3>
<section id="workbench-managed-creds-iam" class="level4">
<h4 class="anchored" data-anchor-id="workbench-managed-creds-iam">Workbench Managed Credentials</h4>
<p>Workbench Managed Credentials is the recommended way to access data on AWS from Posit Workbench. This method is secure and provides a nice user experience because Workbench manages the credentials for the user.This uses the AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">web identity federation</a> mechanism to securely set credentials in individual sessions.</p>
<p>An admin can configure Workbench to provide user-specific AWS credentials for sessions that are tied to their Single Sign-On credentials. Under the hood Workbench uses the AWS web identity federation mechanism (IAM with OpenID Connect) to set these credentials in individual sessions. For more details the administrator should refer to the <a href="https://docs.posit.co/ide/server-pro/authenticating_users/aws_credentials.html">AWS Credentials</a> page in the Posit Workbench Admin Guide.</p>
<section id="aws-configuration" class="level5">
<h5 class="anchored" data-anchor-id="aws-configuration">AWS Configuration</h5>
<p>AWS will need to be configured with an appropriate IAM Identity Provider and IAM Roles that Workbench users will assume. See the <a href="https://docs.posit.co/ide/server-pro/authenticating_users/aws_credentials.html#aws-configuration">AWS Configuration</a> page for step-by-step directions.</p>
<p>Users that need access to resources will need the policy associated with their IAM role updated.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="resource">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">S3</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">RDS / Aurora</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">Redshift</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-4" aria-controls="tabset-2-4" aria-selected="false">Athena</a></li></ul>
<div class="tab-content" data-group="resource">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<p>For access from Workbench to S3 that could look like <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/security_iam_service-with-iam.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Allow user complete access to create and remove objects in the bucket",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::12345678901:user/user"
            },
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::amzn-s3-demo-bucket"
        }
    ]
}</code></pre>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<p>For access from Workbench to RDS / Aurora that could look like <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.IAMPolicy.html">this</a> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.IAMPolicy.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "rds-db:connect"
            ],
            "Resource": [
                "arn:aws:rds:us-east-2:637485797898:db:cluster-db/username"
            ]
        }
    ]
}</code></pre>
<p>The database will need to have user access granted, for example <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.DBAccounts.html#UsingWithRDS.IAMDBAuth.DBAccounts.PostgreSQL">for postgres use <code>GRANT rds_iam TO db_userx;</code></a>.</p>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<p>For access from Workbench to Redshift that could look like <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-user-credentials.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "redshift:GetClusterCredentials",
            "Resource": "arn:aws:redshift:us-east-2:637485797898:dbuser:demo-cluster/username"
        }
    ]
}</code></pre>
<p>The database will need to have user access granted, use the <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_GRANT.html">GRANT</a> command. For more details refer to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-iam-credentials-steps.html">the AWS documentation</a>.</p>
</div>
<div id="tabset-2-4" class="tab-pane" aria-labelledby="tabset-2-4-tab">
<p>For access from Workbench to Aurora that could look like <a href="https://docs.aws.amazon.com/athena/latest/ug/example-policies-workgroup.html">this</a>:</p>
<pre><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "athena:*"
            ],
            "Resource": [
                "*"
            ]
        }
    ]
}</code></pre>
<p>There are two managed policies for Athena that are needed to grant access <code>AmazonAthenaFullAccess</code> and <code>AWSQuicksightAthenaAccess</code>.</p>
<p>Additional permissions may be needed in order to access the underlying dataset stored in S3.</p>
</div>
</div>
</div>
</section>
<section id="workbench-managed-creds-user" class="level5">
<h5 class="anchored" data-anchor-id="workbench-managed-creds-user">User Configuration</h5>
<p>When starting a new Workbench session, users should click on the AWS credential selection widget to login to AWS. After selecting and starting the session with attached credentials, the credentials needed to connect to AWS resources (<code>AWS_ROLE_ARN</code> and <code>AWS_WEB_IDENTITY_TOKEN_FILE</code>) are available within the session.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/aws-new-connection.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" data-glightbox="description: .lightbox-desc-1" title="AWS accounts in the New Session dialog’s credential selection widget"><img src="https://questionable.quarto.pub/blog/work/img/aws-new-connection.png" class="img-fluid figure-img" alt="AWS accounts in the New Session dialog’s credential selection widget"></a></p>
<figcaption>AWS accounts in the New Session dialog’s credential selection widget</figcaption>
</figure>
</div>
<p>The <a href="https://docs.posit.co/ide/server-pro/user/posit-workbench/managed-credentials/aws.html">Posit Workbench User Guide - Workbench-managed AWS Credentials</a> page in the Posit Workbench User Guide provides more details on logging into AWS via Posit Workbench.</p>
<p>It is not possible to share credentials amongst users with Workbench Managed Credentials.</p>
</section>
<section id="workbench-managed-credentials-r-and-python-examples" class="level5">
<h5 class="anchored" data-anchor-id="workbench-managed-credentials-r-and-python-examples">R and Python Examples</h5>
<p>Users can verify the available credentials within their Workbench session by installing the <a href="https://aws.amazon.com/cli/">AWS CLI</a>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awscliv2.zip"</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span> awscliv2.zip</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./aws/install</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ~/.local/aws-cli <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> ~/.local/bin</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> sts get-caller-identity</span></code></pre></div>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="r-resource">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">S3</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">RDS / Aurora</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-3" aria-controls="tabset-3-3" aria-selected="false">Redshift</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-4" aria-controls="tabset-3-4" aria-selected="false">Athena</a></li></ul>
<div class="tab-content" data-group="r-resource">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create an S3 service object in the region you are working on</span></span>
<span id="cb6-4">s3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paws<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">s3</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">config =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>))</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is this needed? </span></span>
<span id="cb6-7">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_auth_token</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">endpoint =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>) </span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># locate the s3 bucket you want</span></span>
<span id="cb6-11">bucket <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-projects'</span></span>
<span id="cb6-12">s3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_objects</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Bucket =</span> bucket)</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># upload data to s3 bucket</span></span>
<span id="cb6-15">s3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">put_object</span>(</span>
<span id="cb6-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Bucket =</span> bucket,</span>
<span id="cb6-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data.csv'</span></span>
<span id="cb6-18">)</span>
<span id="cb6-19"></span>
<span id="cb6-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read data from s3 bucket</span></span>
<span id="cb6-21">s3_download <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_object</span>(</span>
<span id="cb6-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Bucket =</span> bucket,</span>
<span id="cb6-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Key =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-24">)</span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<p>Currently there is an <a href="https://github.com/paws-r/paws/issues/324">issue</a> preventig the credentials from being correctly loaded. In order to get this working (until the issue is fixed) the AWS CLI can be used to retrieve a functional token with <code>aws rds generate-db-auth-token --hostname demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com --port 5432 --region us-east-2 --username username</code> or call out to Python and use boto3 (for example with reticulate).</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(odbc)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DBI)</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb7-4">rds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paws<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rds</span>()</span>
<span id="cb7-5">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_auth_token</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">endpoint =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>) </span>
<span id="cb7-6">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb7-7">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PostgreSQL"</span>,</span>
<span id="cb7-8">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>,</span>
<span id="cb7-9">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo_db"</span>,</span>
<span id="cb7-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>,</span>
<span id="cb7-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> token,</span>
<span id="cb7-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb7-13">                      )</span></code></pre></div>
</div>
<div id="tabset-3-3" class="tab-pane" aria-labelledby="tabset-3-3-tab">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(odbc)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DBI)</span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb8-4">DB_NAME <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span></span>
<span id="cb8-5">CLUSTER_IDENTIFIER <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster'</span></span>
<span id="cb8-6">DB_USER <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span></span>
<span id="cb8-7">redshift <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paws<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">redshift</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb8-8">temp_credentials <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> redshift<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_cluster_credentials</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbUser =</span> DB_USER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbName =</span> DB_NAME, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ClusterIdentifier =</span> CLUSTER_IDENTIFIER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AutoCreate =</span> F)</span>
<span id="cb8-9">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb8-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Redshift"</span>,</span>
<span id="cb8-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com"</span>,</span>
<span id="cb8-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> DB_NAME,</span>
<span id="cb8-13">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbUser,</span>
<span id="cb8-14">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbPassword,</span>
<span id="cb8-15">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span></span>
<span id="cb8-16">                      )</span></code></pre></div>
</div>
<div id="tabset-3-4" class="tab-pane" aria-labelledby="tabset-3-4-tab">
<p>For R developers the <a href="https://www.paws-r-sdk.com/docs/athena/">paws</a> package can be used. More commonly, users connect directly to the data stored in S3.</p>
</div>
</div>
</div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="python-resource">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">S3</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">RDS / Aurora</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-3" aria-controls="tabset-4-3" aria-selected="false">Redshift</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-4" aria-controls="tabset-4-4" aria-selected="false">Athena</a></li></ul>
<div class="tab-content" data-group="python-resource">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install boto3</span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb10-3">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s3'</span>)</span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is this needed?</span></span>
<span id="cb10-5">token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.generate_db_auth_token(DBHostname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>, Port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,DBUsername<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>, Region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb10-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(token)</span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb10-8">bucket <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s3.Bucket(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amzn-s3-demo-bucket'</span>)</span>
<span id="cb10-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> bucket.objects.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>():</span>
<span id="cb10-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(obj.key)</span></code></pre></div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pyodbc boto3</span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb12-3">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rds'</span>, region_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb12-4">token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.generate_db_auth_token(DBHostname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>, Port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,DBUsername<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>, Region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb12-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(token)</span>
<span id="cb12-6">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{PostgreSQL}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb12-7">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span>,</span>
<span id="cb12-8">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span>,</span>
<span id="cb12-9">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token,</span>
<span id="cb12-10">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>,</span>
<span id="cb12-11">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb12-12">                   )</span>
<span id="cb12-13">con</span></code></pre></div>
</div>
<div id="tabset-4-3" class="tab-pane" aria-labelledby="tabset-4-3-tab">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pyodbc boto3</span></code></pre></div>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb14-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb14-3">DB_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span></span>
<span id="cb14-4">CLUSTER_IDENTIFIER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster'</span></span>
<span id="cb14-5">DB_USER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span></span>
<span id="cb14-6">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'redshift'</span>, region_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb14-7">cluster_creds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.get_cluster_credentials(DbUser<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_USER, DbName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME, ClusterIdentifier<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CLUSTER_IDENTIFIER, AutoCreate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb14-8">temp_user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbUser'</span>]</span>
<span id="cb14-9">temp_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbPassword'</span>]</span>
<span id="cb14-10">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{Redshift}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb14-11">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME,</span>
<span id="cb14-12">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_user,</span>
<span id="cb14-13">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_password,</span>
<span id="cb14-14">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com'</span>,</span>
<span id="cb14-15">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span>,</span>
<span id="cb14-16">                   )</span>
<span id="cb14-17">con</span></code></pre></div>
</div>
<div id="tabset-4-4" class="tab-pane" aria-labelledby="tabset-4-4-tab">
<p>For Python developers the <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/athena.html">boto3</a> package can be used. More commonly, users connect directly to the data stored in S3.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<p>For more in depth information and examples, see:</p>
<ul>
<li>The Workbench User Guide section on <a href="https://docs.posit.co/ide/server-pro/user/posit-workbench/managed-credentials/aws.html">Workbench managed AWS credentials</a></li>
<li>The Connect User Guide <a href="https://docs.posit.co/connect/user/oauth-integrations/">OAuth Integrations</a> section for more detail on these concepts</li>
<li>The <a href="https://docs.posit.co/connect/cookbook/">Connect Cookbook</a> for complete examples of using OAuth credentials for deployment</li>
<li>The Connect Admin Guide section on <a href="https://docs.posit.co/connect/admin/integrations/oauth-integrations/">Oauth Integrations</a></li>
</ul>
</section>
</section>
<section id="workbench-developer-creds" class="level4">
<h4 class="anchored" data-anchor-id="workbench-developer-creds">Developer Managed Credentials</h4>
<p>If Workbench isn’t managing credentials on the behalf of users then users need the additional step of populating their credentials.</p>
<p>The AWS CLI can be used to retrieve a functional token with <code>aws rds generate-db-auth-token --hostname cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com --port 5432 --region us-east-2 --username username</code>. This will grant a temporary token that by default lasts for 15 minutes. The developer will need to manually refresh the token as needed while working, unlike the case where Workbench will manage the token on their behalf.</p>
<p>After loading the token and performing appropriate authentication steps then the above steps can be taken to request resources from AWS.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-6-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-1" aria-controls="tabset-6-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-6-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-2" aria-controls="tabset-6-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-6-1" class="tab-pane active" aria-labelledby="tabset-6-1-tab">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paws)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(odbc)</span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DBI)</span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build a token </span></span>
<span id="cb15-6">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_auth_token</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">endpoint =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>) </span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the token with the ODBC connection </span></span>
<span id="cb15-9">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb15-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PostgreSQL"</span>,</span>
<span id="cb15-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com"</span>,</span>
<span id="cb15-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo_db"</span>,</span>
<span id="cb15-13">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>,</span>
<span id="cb15-14">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> token,</span>
<span id="cb15-15">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb15-16">                      )</span>
<span id="cb15-17"></span>
<span id="cb15-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gather temp credentials </span></span>
<span id="cb15-19">temp_credentials <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> redshift<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_cluster_credentials</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbUser =</span> DB_USER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DbName =</span> DB_NAME, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ClusterIdentifier =</span> CLUSTER_IDENTIFIER, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AutoCreate =</span> F)</span>
<span id="cb15-20"></span>
<span id="cb15-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the temp credentials with the ODBC connection</span></span>
<span id="cb15-22">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(odbc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">odbc</span>(),</span>
<span id="cb15-23">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Driver   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Redshift"</span>,</span>
<span id="cb15-24">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Server   =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com"</span>,</span>
<span id="cb15-25">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database =</span> DB_NAME,</span>
<span id="cb15-26">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">UID      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbUser,</span>
<span id="cb15-27">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PWD      =</span> temp_credentials<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DbPassword,</span>
<span id="cb15-28">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Port     =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span></span>
<span id="cb15-29">                      )</span></code></pre></div>
</div>
<div id="tabset-6-2" class="tab-pane" aria-labelledby="tabset-6-2-tab">
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pyodbc boto3</span></code></pre></div>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyodbc</span>
<span id="cb17-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> boto3</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build a token </span></span>
<span id="cb17-5">token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.generate_db_auth_token(DBHostname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>, Port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,DBUsername<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"username"</span>, Region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the token with the ODBC connection </span></span>
<span id="cb17-8">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{PostgreSQL}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb17-9">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span>,</span>
<span id="cb17-10">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span>,</span>
<span id="cb17-11">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token,</span>
<span id="cb17-12">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster-db.cpbvczwgws3n.us-east-2.rds.amazonaws.com'</span>,</span>
<span id="cb17-13">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb17-14">                   )</span>
<span id="cb17-15"></span>
<span id="cb17-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gather temp credentials </span></span>
<span id="cb17-17">DB_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo_db'</span></span>
<span id="cb17-18">CLUSTER_IDENTIFIER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster'</span></span>
<span id="cb17-19">DB_USER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'username'</span></span>
<span id="cb17-20">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boto3.client(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'redshift'</span>, region_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"us-east-2"</span>)</span>
<span id="cb17-21">cluster_creds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.get_cluster_credentials(DbUser<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_USER, DbName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME, ClusterIdentifier<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CLUSTER_IDENTIFIER, AutoCreate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb17-22">temp_user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbUser'</span>]</span>
<span id="cb17-23">temp_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_creds[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DbPassword'</span>]</span>
<span id="cb17-24"></span>
<span id="cb17-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the temp credentials with the ODBC connection</span></span>
<span id="cb17-26">con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pyodbc.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(driver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{Redshift}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb17-27">                   database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DB_NAME,</span>
<span id="cb17-28">                   uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_user,</span>
<span id="cb17-29">                   pwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temp_password,</span>
<span id="cb17-30">                   server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo-cluster.cyvu3e2plbhb.us-east-2.redshift.amazonaws.com'</span>,</span>
<span id="cb17-31">                   port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5439</span>,</span>
<span id="cb17-32">                   )</span></code></pre></div>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="one-to-many-credential-examples" class="level2">
<h2 class="anchored" data-anchor-id="one-to-many-credential-examples">One-to-many Credential Examples</h2>
<section id="other-environments-ie-connect-etc" class="level3">
<h3 class="anchored" data-anchor-id="other-environments-ie-connect-etc">Other Environments (IE Connect, etc)</h3>
<p>In this section we will describe authentication patterns for all other environments for example production environments, deployed environments, etc. In these cases typically the code is executed by a service account making only non-interactive authentication methods possible.</p>
</section>
<section id="example-access-patterns-1" class="level3">
<h3 class="anchored" data-anchor-id="example-access-patterns-1">Example Access Patterns</h3>
<section id="trusted-creds-iam" class="level4">
<h4 class="anchored" data-anchor-id="trusted-creds-iam">Grant trusted access to resource from VM using an IAM instance profile and policy</h4>
<p>Trusted access between the server running the content and the resource can be granted using an IAM instance profile and policy. In this case all content running on the server has access to the resource.</p>
<section id="aws-configuration-1" class="level5">
<h5 class="anchored" data-anchor-id="aws-configuration-1">AWS Configuration</h5>
<p>Instead of assigning the roles to the IAM user it can be assigned to the AWS EC2 instance, slurm environment, or k8s cluster to allow access. This will broadlly allow access to that resource specifically for only that environment.</p>
<p>In this case the admin will need to:</p>
<ul>
<li>Create an AWS role that has the correct trusted entity type (for example, EC2)</li>
<li>Create a custom policy that provides access to the needed resources</li>
<li>Attach the IAM role to the environment (for example, the EC2 server)</li>
<li>Verify network connectivity</li>
</ul>
<p>See the AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html">use IAM roles to grant permissions to applications running on EC2 instances</a> and the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html">EC2 IAM roles</a> pages for more details.</p>
</section>
</section>
<section id="keypair-creds" class="level4">
<h4 class="anchored" data-anchor-id="keypair-creds">Developer Managed Credentials</h4>
<p>If granting access through a trusted relationship between the VM and the resource isn’t feasible, then a non-interactive authentication method can be used like a developer managed keypair using an AWS secret key and access key. However this approach comes with security risks if the keypair isn’t closely guarded. In this case <a href="https://solutions.posit.co/connections/db/best-practices/managing-credentials/">securing credentials</a> is critical.</p>
<p>The documentation for <a href="https://www.paws-r-sdk.com/">paws</a> and <a href="https://pypi.org/project/boto3/">boto3</a> have extensive examples using keypair authentication.</p>



</section>
</section>
</section>

 ]]></description>
  <category>code</category>
  <category>data</category>
  <guid>https://questionable.quarto.pub/blog/work/aws-data-sources.html</guid>
  <pubDate>Tue, 21 Jan 2025 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/blog/work/img/aws-new-connection.png" medium="image" type="image/png" height="78" width="144"/>
</item>
</channel>
</rss>
