{
  "hash": "349dfc8e51a18fb8c86ff567124d1051",
  "result": {
    "markdown": "---\ntitle: \"Day 1\"\ndescription: \"365 days of hyperfixation\"\nauthor: \"Lisa\"\ndate: \"2022-07-28\"\nformat: html\neditor: visual\ncategories:\n  - 365\n  - code\nimage: \"img/welcome.jpg\"\n---\n\n\n## Quarto\n\nIt's a whole new exciting world! And the default project has a lot of exciting files to explore.\n\nI'm using:\n\n-   https://quarto.org/docs/websites/website-blog.html\n\n-   https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html\n\n## Example\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\nYou can add options to executable code like this\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}